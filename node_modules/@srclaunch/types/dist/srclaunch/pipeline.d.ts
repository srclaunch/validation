export declare enum PipelineStatus {
    Finished = "Finished",
    Queued = "Queued",
    Running = "Running",
    Started = "Started"
}
export declare enum PipelineWorkflowStatus {
    Canceled = "Canceled",
    Completed = "Completed",
    Failed = "Failed",
    Running = "Running",
    Queued = "Queued",
    Waiting = "Waiting"
}
export declare enum PipelineStepStatus {
    Canceled = "Canceled",
    Completed = "Completed",
    Failed = "Failed",
    Running = "Running",
    Queued = "Queued",
    Waiting = "Waiting"
}
export declare type PipelineStepOutputLine = {
    readonly id: string;
    readonly text: string;
    readonly PipelineStepOutputId: PipelineStepOutput['id'];
};
export declare type PipelineStepOutput = {
    readonly id: string;
    readonly PipeWorkflowStepId: PipelineWorkflowStep['id'];
};
export declare type PipelineWorkflowStep = {
    readonly enabled: boolean;
    readonly id: string;
    readonly status: PipelineStepStatus;
    readonly PipeWorkflowId: PipelineWorkflow['id'];
};
export declare type PipelineWorkflow = {
    readonly description: string;
    readonly enabled: boolean;
    readonly id: string;
    readonly name: string;
    readonly ActivePipelineId: Pipeline['id'];
};
export declare type Pipeline = {
    readonly id: string;
    readonly name: string;
    readonly description: string;
    readonly status: PipelineStatus;
};
//# sourceMappingURL=pipeline.d.ts.map