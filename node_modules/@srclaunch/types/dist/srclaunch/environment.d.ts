import { Deployment } from './deployment';
import { DNSConfig } from './infrastructure';
export declare enum EnvironmentType {
    Development = "Development",
    NonProduction = "NonProduction",
    Production = "Production"
}
export declare type Environment = DNSConfig & {
    readonly id: string;
    readonly type: EnvironmentType;
    readonly name: string;
    readonly description: string;
};
export declare type RemoteEnvironment = Environment & {
    readonly deployment?: Deployment;
};
export declare type DevelopmentEnvironment = Environment;
export declare type PreviewEnvironment = RemoteEnvironment & {
    readonly branches?: {
        readonly [key: string]: RemoteEnvironment & {
            readonly ssr?: boolean;
        };
    };
};
export declare type ProductionEnvironment = RemoteEnvironment;
export declare type QAEnvironment = RemoteEnvironment & {
    readonly e2e?: boolean;
    readonly integration?: boolean;
    readonly lint?: boolean;
    readonly unit?: boolean;
};
export interface EnvironmentOptions {
    readonly development?: DevelopmentEnvironment;
    readonly preview?: PreviewEnvironment;
    readonly qa?: QAEnvironment;
    readonly production?: ProductionEnvironment;
}
//# sourceMappingURL=environment.d.ts.map