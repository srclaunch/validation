import { DateTime } from 'luxon';
export declare enum TaskStatus {
    'Canceled' = "Canceled",
    'Completed' = "Completed",
    'Created' = "Created",
    'Faulted' = "Faulted",
    'Queued' = "Queued",
    'Running' = "Running",
    'Waiting' = "Waiting"
}
export declare type Task = {
    readonly created?: DateTime;
    readonly data: Record<string, string> | ReadonlyMap<string, string>;
    readonly name: string;
    readonly id?: string;
    readonly status?: TaskStatus;
};
export declare type Queue = {
    readonly id: string;
    readonly name: string;
    readonly queued: readonly Task['id'][];
    readonly running: readonly Task['id'][];
    readonly finished: readonly Task['id'][];
};
export declare type QueueInitializationResult = {
    readonly error: boolean | Error;
};
//# sourceMappingURL=queue.d.ts.map