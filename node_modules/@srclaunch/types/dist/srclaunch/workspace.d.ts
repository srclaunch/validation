import { Environment, RemoteEnvironment } from './environment';
export declare type WorkspacePackage = {
    readonly name?: string;
    readonly path: string;
    readonly repository?: string;
};
export declare type Workspace = {
    readonly assets?: {
        readonly path: string;
    };
    readonly coreApi?: Omit<WorkspacePackage, 'name'> & {
        readonly environments: {
            readonly [environment: Environment['id']]: RemoteEnvironment;
        };
    };
    readonly dependencies: {
        readonly exceptions: WorkspacePackage;
        readonly httpClient: WorkspacePackage;
        readonly models: WorkspacePackage;
        readonly reduxState: WorkspacePackage;
        readonly sequelizeModels: WorkspacePackage;
        readonly types: WorkspacePackage;
    };
    readonly description?: string;
    readonly infrastructure?: {
        readonly path: string;
    };
    readonly projects?: {
        readonly [key: string]: WorkspacePackage;
    };
    readonly exceptions?: {
        readonly path: string;
    };
    readonly models?: {
        readonly path: string;
    };
    readonly name: string;
    readonly repository?: string;
    readonly types?: {
        readonly path: string;
    };
};
//# sourceMappingURL=workspace.d.ts.map