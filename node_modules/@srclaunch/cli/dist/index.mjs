var br=Object.create;var jn=Object.defineProperty;var Br=Object.getOwnPropertyDescriptor;var Ur=Object.getOwnPropertyNames;var Nr=Object.getPrototypeOf,yr=Object.prototype.hasOwnProperty;var qe=(a,l)=>()=>(l||a((l={exports:{}}).exports,l),l.exports);var Dr=(a,l,c,A)=>{if(l&&typeof l=="object"||typeof l=="function")for(let f of Ur(l))!yr.call(a,f)&&f!==c&&jn(a,f,{get:()=>l[f],enumerable:!(A=Br(l,f))||A.enumerable});return a};var Ia=(a,l,c)=>(c=a!=null?br(Nr(a)):{},Dr(l||!a||!a.__esModule?jn(c,"default",{value:a,enumerable:!0}):c,a));var hi=qe(U=>{"use strict";var Ra=Symbol.for("react.element"),lt=Symbol.for("react.portal"),ot=Symbol.for("react.fragment"),ct=Symbol.for("react.strict_mode"),mt=Symbol.for("react.profiler"),At=Symbol.for("react.provider"),ft=Symbol.for("react.context"),dt=Symbol.for("react.forward_ref"),gt=Symbol.for("react.suspense"),ht=Symbol.for("react.memo"),It=Symbol.for("react.lazy"),ui=Symbol.iterator;function _t(a){return a===null||typeof a!="object"?null:(a=ui&&a[ui]||a["@@iterator"],typeof a=="function"?a:null)}var oi={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},ci=Object.assign,mi={};function Pa(a,l,c){this.props=a,this.context=l,this.refs=mi,this.updater=c||oi}Pa.prototype.isReactComponent={};Pa.prototype.setState=function(a,l){if(typeof a!="object"&&typeof a!="function"&&a!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,a,l,"setState")};Pa.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function Ai(){}Ai.prototype=Pa.prototype;function ze(a,l,c){this.props=a,this.context=l,this.refs=mi,this.updater=c||oi}var Ye=ze.prototype=new Ai;Ye.constructor=ze;ci(Ye,Pa.prototype);Ye.isPureReactComponent=!0;var ti=Array.isArray,fi=Object.prototype.hasOwnProperty,Je={current:null},di={key:!0,ref:!0,__self:!0,__source:!0};function gi(a,l,c){var A,f={},h=null,_=null;if(l!=null)for(A in l.ref!==void 0&&(_=l.ref),l.key!==void 0&&(h=""+l.key),l)fi.call(l,A)&&!di.hasOwnProperty(A)&&(f[A]=l[A]);var p=arguments.length-2;if(p===1)f.children=c;else if(1<p){for(var S=Array(p),B=0;B<p;B++)S[B]=arguments[B+2];f.children=S}if(a&&a.defaultProps)for(A in p=a.defaultProps,p)f[A]===void 0&&(f[A]=p[A]);return{$$typeof:Ra,type:a,key:h,ref:_,props:f,_owner:Je.current}}function pt(a,l){return{$$typeof:Ra,type:a.type,key:l,ref:a.ref,props:a.props,_owner:a._owner}}function $e(a){return typeof a=="object"&&a!==null&&a.$$typeof===Ra}function Et(a){var l={"=":"=0",":":"=2"};return"$"+a.replace(/[=:]/g,function(c){return l[c]})}var li=/\/+/g;function Ve(a,l){return typeof a=="object"&&a!==null&&a.key!=null?Et(""+a.key):l.toString(36)}function fe(a,l,c,A,f){var h=typeof a;(h==="undefined"||h==="boolean")&&(a=null);var _=!1;if(a===null)_=!0;else switch(h){case"string":case"number":_=!0;break;case"object":switch(a.$$typeof){case Ra:case lt:_=!0}}if(_)return _=a,f=f(_),a=A===""?"."+Ve(_,0):A,ti(f)?(c="",a!=null&&(c=a.replace(li,"$&/")+"/"),fe(f,l,c,"",function(B){return B})):f!=null&&($e(f)&&(f=pt(f,c+(!f.key||_&&_.key===f.key?"":(""+f.key).replace(li,"$&/")+"/")+a)),l.push(f)),1;if(_=0,A=A===""?".":A+":",ti(a))for(var p=0;p<a.length;p++){h=a[p];var S=A+Ve(h,p);_+=fe(h,l,c,S,f)}else if(S=_t(a),typeof S=="function")for(a=S.call(a),p=0;!(h=a.next()).done;)h=h.value,S=A+Ve(h,p++),_+=fe(h,l,c,S,f);else if(h==="object")throw l=String(a),Error("Objects are not valid as a React child (found: "+(l==="[object Object]"?"object with keys {"+Object.keys(a).join(", ")+"}":l)+"). If you meant to render a collection of children, use an array instead.");return _}function Ae(a,l,c){if(a==null)return a;var A=[],f=0;return fe(a,A,"","",function(h){return l.call(c,h,f++)}),A}function St(a){if(a._status===-1){var l=a._result;l=l(),l.then(function(c){(a._status===0||a._status===-1)&&(a._status=1,a._result=c)},function(c){(a._status===0||a._status===-1)&&(a._status=2,a._result=c)}),a._status===-1&&(a._status=0,a._result=l)}if(a._status===1)return a._result.default;throw a._result}var C={current:null},de={transition:null},Tt={ReactCurrentDispatcher:C,ReactCurrentBatchConfig:de,ReactCurrentOwner:Je};U.Children={map:Ae,forEach:function(a,l,c){Ae(a,function(){l.apply(this,arguments)},c)},count:function(a){var l=0;return Ae(a,function(){l++}),l},toArray:function(a){return Ae(a,function(l){return l})||[]},only:function(a){if(!$e(a))throw Error("React.Children.only expected to receive a single React element child.");return a}};U.Component=Pa;U.Fragment=ot;U.Profiler=mt;U.PureComponent=ze;U.StrictMode=ct;U.Suspense=gt;U.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Tt;U.cloneElement=function(a,l,c){if(a==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+a+".");var A=ci({},a.props),f=a.key,h=a.ref,_=a._owner;if(l!=null){if(l.ref!==void 0&&(h=l.ref,_=Je.current),l.key!==void 0&&(f=""+l.key),a.type&&a.type.defaultProps)var p=a.type.defaultProps;for(S in l)fi.call(l,S)&&!di.hasOwnProperty(S)&&(A[S]=l[S]===void 0&&p!==void 0?p[S]:l[S])}var S=arguments.length-2;if(S===1)A.children=c;else if(1<S){p=Array(S);for(var B=0;B<S;B++)p[B]=arguments[B+2];A.children=p}return{$$typeof:Ra,type:a.type,key:f,ref:h,props:A,_owner:_}};U.createContext=function(a){return a={$$typeof:ft,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},a.Provider={$$typeof:At,_context:a},a.Consumer=a};U.createElement=gi;U.createFactory=function(a){var l=gi.bind(null,a);return l.type=a,l};U.createRef=function(){return{current:null}};U.forwardRef=function(a){return{$$typeof:dt,render:a}};U.isValidElement=$e;U.lazy=function(a){return{$$typeof:It,_payload:{_status:-1,_result:a},_init:St}};U.memo=function(a,l){return{$$typeof:ht,type:a,compare:l===void 0?null:l}};U.startTransition=function(a){var l=de.transition;de.transition={};try{a()}finally{de.transition=l}};U.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")};U.useCallback=function(a,l){return C.current.useCallback(a,l)};U.useContext=function(a){return C.current.useContext(a)};U.useDebugValue=function(){};U.useDeferredValue=function(a){return C.current.useDeferredValue(a)};U.useEffect=function(a,l){return C.current.useEffect(a,l)};U.useId=function(){return C.current.useId()};U.useImperativeHandle=function(a,l,c){return C.current.useImperativeHandle(a,l,c)};U.useInsertionEffect=function(a,l){return C.current.useInsertionEffect(a,l)};U.useLayoutEffect=function(a,l){return C.current.useLayoutEffect(a,l)};U.useMemo=function(a,l){return C.current.useMemo(a,l)};U.useReducer=function(a,l,c){return C.current.useReducer(a,l,c)};U.useRef=function(a){return C.current.useRef(a)};U.useState=function(a){return C.current.useState(a)};U.useSyncExternalStore=function(a,l,c){return C.current.useSyncExternalStore(a,l,c)};U.useTransition=function(){return C.current.useTransition()};U.version="18.0.0-fc46dba67-20220329"});var Ii=qe((N,ge)=>{"use strict";process.env.NODE_ENV!=="production"&&function(){"use strict";typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"&&typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart=="function"&&__REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error);var a="18.0.0-fc46dba67-20220329",l=Symbol.for("react.element"),c=Symbol.for("react.portal"),A=Symbol.for("react.fragment"),f=Symbol.for("react.strict_mode"),h=Symbol.for("react.profiler"),_=Symbol.for("react.provider"),p=Symbol.for("react.context"),S=Symbol.for("react.forward_ref"),B=Symbol.for("react.suspense"),q=Symbol.for("react.suspense_list"),x=Symbol.for("react.memo"),K=Symbol.for("react.lazy"),D=Symbol.for("react.offscreen"),Y=Symbol.iterator,R="@@iterator";function ea(u){if(u===null||typeof u!="object")return null;var m=Y&&u[Y]||u[R];return typeof m=="function"?m:null}var ia={current:null},F={transition:null},M={current:null,isBatchingLegacy:!1,didScheduleLegacyUpdate:!1},na={current:null},ga={},$a=null;function an(u){$a=u}ga.setExtraStackFrame=function(u){$a=u},ga.getCurrentStack=null,ga.getStackAddendum=function(){var u="";$a&&(u+=$a);var m=ga.getCurrentStack;return m&&(u+=m()||""),u};var cs=!1,ms=!1,As=!1,fs=!1,ds=!1,pa={ReactCurrentDispatcher:ia,ReactCurrentBatchConfig:F,ReactCurrentOwner:na};pa.ReactDebugCurrentFrame=ga,pa.ReactCurrentActQueue=M;function Ea(u){{for(var m=arguments.length,d=new Array(m>1?m-1:0),g=1;g<m;g++)d[g-1]=arguments[g];en("warn",u,d)}}function P(u){{for(var m=arguments.length,d=new Array(m>1?m-1:0),g=1;g<m;g++)d[g-1]=arguments[g];en("error",u,d)}}function en(u,m,d){{var g=pa.ReactDebugCurrentFrame,I=g.getStackAddendum();I!==""&&(m+="%s",d=d.concat([I]));var v=d.map(function(E){return String(E)});v.unshift("Warning: "+m),Function.prototype.apply.call(console[u],console,v)}}var nn={};function Se(u,m){{var d=u.constructor,g=d&&(d.displayName||d.name)||"ReactClass",I=g+"."+m;if(nn[I])return;P("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.",m,g),nn[I]=!0}}var sn={isMounted:function(u){return!1},enqueueForceUpdate:function(u,m,d){Se(u,"forceUpdate")},enqueueReplaceState:function(u,m,d,g){Se(u,"replaceState")},enqueueSetState:function(u,m,d,g){Se(u,"setState")}},oa=Object.assign,Te={};Object.freeze(Te);function ha(u,m,d){this.props=u,this.context=m,this.refs=Te,this.updater=d||sn}ha.prototype.isReactComponent={},ha.prototype.setState=function(u,m){if(typeof u!="object"&&typeof u!="function"&&u!=null)throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,u,m,"setState")},ha.prototype.forceUpdate=function(u){this.updater.enqueueForceUpdate(this,u,"forceUpdate")};{var ve={isMounted:["isMounted","Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],replaceState:["replaceState","Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]},gs=function(u,m){Object.defineProperty(ha.prototype,u,{get:function(){Ea("%s(...) is deprecated in plain JavaScript React classes. %s",m[0],m[1])}})};for(var be in ve)ve.hasOwnProperty(be)&&gs(be,ve[be])}function rn(){}rn.prototype=ha.prototype;function Be(u,m,d){this.props=u,this.context=m,this.refs=Te,this.updater=d||sn}var Ue=Be.prototype=new rn;Ue.constructor=Be,oa(Ue,ha.prototype),Ue.isPureReactComponent=!0;function hs(){var u={current:null};return Object.seal(u),u}var Is=Array.isArray;function Za(u){return Is(u)}function _s(u){{var m=typeof Symbol=="function"&&Symbol.toStringTag,d=m&&u[Symbol.toStringTag]||u.constructor.name||"Object";return d}}function ps(u){try{return un(u),!1}catch{return!0}}function un(u){return""+u}function Ca(u){if(ps(u))return P("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.",_s(u)),un(u)}function Es(u,m,d){var g=u.displayName;if(g)return g;var I=m.displayName||m.name||"";return I!==""?d+"("+I+")":d}function tn(u){return u.displayName||"Context"}function Aa(u){if(u==null)return null;if(typeof u.tag=="number"&&P("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."),typeof u=="function")return u.displayName||u.name||null;if(typeof u=="string")return u;switch(u){case A:return"Fragment";case c:return"Portal";case h:return"Profiler";case f:return"StrictMode";case B:return"Suspense";case q:return"SuspenseList"}if(typeof u=="object")switch(u.$$typeof){case p:var m=u;return tn(m)+".Consumer";case _:var d=u;return tn(d._context)+".Provider";case S:return Es(u,u.render,"ForwardRef");case x:var g=u.displayName||null;return g!==null?g:Aa(u.type)||"Memo";case K:{var I=u,v=I._payload,E=I._init;try{return Aa(E(v))}catch{return null}}}return null}var La=Object.prototype.hasOwnProperty,ln={key:!0,ref:!0,__self:!0,__source:!0},on,cn,Ne;Ne={};function mn(u){if(La.call(u,"ref")){var m=Object.getOwnPropertyDescriptor(u,"ref").get;if(m&&m.isReactWarning)return!1}return u.ref!==void 0}function An(u){if(La.call(u,"key")){var m=Object.getOwnPropertyDescriptor(u,"key").get;if(m&&m.isReactWarning)return!1}return u.key!==void 0}function Ss(u,m){var d=function(){on||(on=!0,P("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",m))};d.isReactWarning=!0,Object.defineProperty(u,"key",{get:d,configurable:!0})}function Ts(u,m){var d=function(){cn||(cn=!0,P("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",m))};d.isReactWarning=!0,Object.defineProperty(u,"ref",{get:d,configurable:!0})}function vs(u){if(typeof u.ref=="string"&&na.current&&u.__self&&na.current.stateNode!==u.__self){var m=Aa(na.current.type);Ne[m]||(P('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',m,u.ref),Ne[m]=!0)}}var ye=function(u,m,d,g,I,v,E){var b={$$typeof:l,type:u,key:m,ref:d,props:E,_owner:v};return b._store={},Object.defineProperty(b._store,"validated",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(b,"_self",{configurable:!1,enumerable:!1,writable:!1,value:g}),Object.defineProperty(b,"_source",{configurable:!1,enumerable:!1,writable:!1,value:I}),Object.freeze&&(Object.freeze(b.props),Object.freeze(b)),b};function bs(u,m,d){var g,I={},v=null,E=null,b=null,y=null;if(m!=null){mn(m)&&(E=m.ref,vs(m)),An(m)&&(Ca(m.key),v=""+m.key),b=m.__self===void 0?null:m.__self,y=m.__source===void 0?null:m.__source;for(g in m)La.call(m,g)&&!ln.hasOwnProperty(g)&&(I[g]=m[g])}var k=arguments.length-2;if(k===1)I.children=d;else if(k>1){for(var L=Array(k),w=0;w<k;w++)L[w]=arguments[w+2];Object.freeze&&Object.freeze(L),I.children=L}if(u&&u.defaultProps){var O=u.defaultProps;for(g in O)I[g]===void 0&&(I[g]=O[g])}if(v||E){var j=typeof u=="function"?u.displayName||u.name||"Unknown":u;v&&Ss(I,j),E&&Ts(I,j)}return ye(u,v,E,b,y,na.current,I)}function Bs(u,m){var d=ye(u.type,m,u.ref,u._self,u._source,u._owner,u.props);return d}function Us(u,m,d){if(u==null)throw new Error("React.cloneElement(...): The argument must be a React element, but you passed "+u+".");var g,I=oa({},u.props),v=u.key,E=u.ref,b=u._self,y=u._source,k=u._owner;if(m!=null){mn(m)&&(E=m.ref,k=na.current),An(m)&&(Ca(m.key),v=""+m.key);var L;u.type&&u.type.defaultProps&&(L=u.type.defaultProps);for(g in m)La.call(m,g)&&!ln.hasOwnProperty(g)&&(m[g]===void 0&&L!==void 0?I[g]=L[g]:I[g]=m[g])}var w=arguments.length-2;if(w===1)I.children=d;else if(w>1){for(var O=Array(w),j=0;j<w;j++)O[j]=arguments[j+2];I.children=O}return ye(u.type,v,E,b,y,k,I)}function Sa(u){return typeof u=="object"&&u!==null&&u.$$typeof===l}var fn=".",Ns=":";function ys(u){var m=/[=:]/g,d={"=":"=0",":":"=2"},g=u.replace(m,function(I){return d[I]});return"$"+g}var dn=!1,Ds=/\/+/g;function gn(u){return u.replace(Ds,"$&/")}function De(u,m){return typeof u=="object"&&u!==null&&u.key!=null?(Ca(u.key),ys(""+u.key)):m.toString(36)}function Qa(u,m,d,g,I){var v=typeof u;(v==="undefined"||v==="boolean")&&(u=null);var E=!1;if(u===null)E=!0;else switch(v){case"string":case"number":E=!0;break;case"object":switch(u.$$typeof){case l:case c:E=!0}}if(E){var b=u,y=I(b),k=g===""?fn+De(b,0):g;if(Za(y)){var L="";k!=null&&(L=gn(k)+"/"),Qa(y,m,L,"",function(vr){return vr})}else y!=null&&(Sa(y)&&(y.key&&(!b||b.key!==y.key)&&Ca(y.key),y=Bs(y,d+(y.key&&(!b||b.key!==y.key)?gn(""+y.key)+"/":"")+k)),m.push(y));return 1}var w,O,j=0,W=g===""?fn:g+Ns;if(Za(u))for(var ue=0;ue<u.length;ue++)w=u[ue],O=W+De(w,ue),j+=Qa(w,m,d,O,I);else{var Oe=ea(u);if(typeof Oe=="function"){var On=u;Oe===On.entries&&(dn||Ea("Using Maps as children is not supported. Use an array of keyed ReactElements instead."),dn=!0);for(var Sr=Oe.call(On),qn,Tr=0;!(qn=Sr.next()).done;)w=qn.value,O=W+De(w,Tr++),j+=Qa(w,m,d,O,I)}else if(v==="object"){var Kn=String(u);throw new Error("Objects are not valid as a React child (found: "+(Kn==="[object Object]"?"object with keys {"+Object.keys(u).join(", ")+"}":Kn)+"). If you meant to render a collection of children, use an array instead.")}}return j}function Xa(u,m,d){if(u==null)return u;var g=[],I=0;return Qa(u,g,"","",function(v){return m.call(d,v,I++)}),g}function Ps(u){var m=0;return Xa(u,function(){m++}),m}function Fs(u,m,d){Xa(u,function(){m.apply(this,arguments)},d)}function Ms(u){return Xa(u,function(m){return m})||[]}function ks(u){if(!Sa(u))throw new Error("React.Children.only expected to receive a single React element child.");return u}function Ls(u){var m={$$typeof:p,_currentValue:u,_currentValue2:u,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};m.Provider={$$typeof:_,_context:m};var d=!1,g=!1,I=!1;{var v={$$typeof:p,_context:m};Object.defineProperties(v,{Provider:{get:function(){return g||(g=!0,P("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?")),m.Provider},set:function(E){m.Provider=E}},_currentValue:{get:function(){return m._currentValue},set:function(E){m._currentValue=E}},_currentValue2:{get:function(){return m._currentValue2},set:function(E){m._currentValue2=E}},_threadCount:{get:function(){return m._threadCount},set:function(E){m._threadCount=E}},Consumer:{get:function(){return d||(d=!0,P("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?")),m.Consumer}},displayName:{get:function(){return m.displayName},set:function(E){I||(Ea("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.",E),I=!0)}}}),m.Consumer=v}return m._currentRenderer=null,m._currentRenderer2=null,m}var wa=-1,Pe=0,hn=1,ws=2;function Gs(u){if(u._status===wa){var m=u._result,d=m();if(d.then(function(v){if(u._status===Pe||u._status===wa){var E=u;E._status=hn,E._result=v}},function(v){if(u._status===Pe||u._status===wa){var E=u;E._status=ws,E._result=v}}),u._status===wa){var g=u;g._status=Pe,g._result=d}}if(u._status===hn){var I=u._result;return I===void 0&&P(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))

Did you accidentally put curly braces around the import?`,I),"default"in I||P(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))`,I),I.default}else throw u._result}function xs(u){var m={_status:wa,_result:u},d={$$typeof:K,_payload:m,_init:Gs};{var g,I;Object.defineProperties(d,{defaultProps:{configurable:!0,get:function(){return g},set:function(v){P("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."),g=v,Object.defineProperty(d,"defaultProps",{enumerable:!0})}},propTypes:{configurable:!0,get:function(){return I},set:function(v){P("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."),I=v,Object.defineProperty(d,"propTypes",{enumerable:!0})}}})}return d}function Os(u){u!=null&&u.$$typeof===x?P("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))."):typeof u!="function"?P("forwardRef requires a render function but was given %s.",u===null?"null":typeof u):u.length!==0&&u.length!==2&&P("forwardRef render functions accept exactly two parameters: props and ref. %s",u.length===1?"Did you forget to use the ref parameter?":"Any additional parameter will be undefined."),u!=null&&(u.defaultProps!=null||u.propTypes!=null)&&P("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");var m={$$typeof:S,render:u};{var d;Object.defineProperty(m,"displayName",{enumerable:!1,configurable:!0,get:function(){return d},set:function(g){d=g,!u.name&&!u.displayName&&(u.displayName=g)}})}return m}var qs=Symbol.for("react.module.reference");function In(u){return!!(typeof u=="string"||typeof u=="function"||u===A||u===h||ds||u===f||u===B||u===q||fs||u===D||cs||ms||As||typeof u=="object"&&u!==null&&(u.$$typeof===K||u.$$typeof===x||u.$$typeof===_||u.$$typeof===p||u.$$typeof===S||u.$$typeof===qs||u.getModuleId!==void 0))}function Ks(u,m){In(u)||P("memo: The first argument must be a component. Instead received: %s",u===null?"null":typeof u);var d={$$typeof:x,type:u,compare:m===void 0?null:m};{var g;Object.defineProperty(d,"displayName",{enumerable:!1,configurable:!0,get:function(){return g},set:function(I){g=I,!u.name&&!u.displayName&&(u.displayName=I)}})}return d}function J(){var u=ia.current;return u===null&&P(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`),u}function js(u){var m=J();if(u._context!==void 0){var d=u._context;d.Consumer===u?P("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?"):d.Provider===u&&P("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?")}return m.useContext(u)}function Hs(u){var m=J();return m.useState(u)}function Rs(u,m,d){var g=J();return g.useReducer(u,m,d)}function Ws(u){var m=J();return m.useRef(u)}function Vs(u,m){var d=J();return d.useEffect(u,m)}function zs(u,m){var d=J();return d.useInsertionEffect(u,m)}function Ys(u,m){var d=J();return d.useLayoutEffect(u,m)}function Js(u,m){var d=J();return d.useCallback(u,m)}function $s(u,m){var d=J();return d.useMemo(u,m)}function Zs(u,m,d){var g=J();return g.useImperativeHandle(u,m,d)}function Cs(u,m){{var d=J();return d.useDebugValue(u,m)}}function Qs(){var u=J();return u.useTransition()}function Xs(u){var m=J();return m.useDeferredValue(u)}function ar(){var u=J();return u.useId()}function er(u,m,d){var g=J();return g.useSyncExternalStore(u,m,d)}var Ga=0,_n,pn,En,Sn,Tn,vn,bn;function Bn(){}Bn.__reactDisabledLog=!0;function nr(){{if(Ga===0){_n=console.log,pn=console.info,En=console.warn,Sn=console.error,Tn=console.group,vn=console.groupCollapsed,bn=console.groupEnd;var u={configurable:!0,enumerable:!0,value:Bn,writable:!0};Object.defineProperties(console,{info:u,log:u,warn:u,error:u,group:u,groupCollapsed:u,groupEnd:u})}Ga++}}function ir(){{if(Ga--,Ga===0){var u={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:oa({},u,{value:_n}),info:oa({},u,{value:pn}),warn:oa({},u,{value:En}),error:oa({},u,{value:Sn}),group:oa({},u,{value:Tn}),groupCollapsed:oa({},u,{value:vn}),groupEnd:oa({},u,{value:bn})})}Ga<0&&P("disabledDepth fell below zero. This is a bug in React. Please file an issue.")}}var Fe=pa.ReactCurrentDispatcher,Me;function ae(u,m,d){{if(Me===void 0)try{throw Error()}catch(I){var g=I.stack.trim().match(/\n( *(at )?)/);Me=g&&g[1]||""}return`
`+Me+u}}var ke=!1,ee;{var sr=typeof WeakMap=="function"?WeakMap:Map;ee=new sr}function Un(u,m){if(!u||ke)return"";{var d=ee.get(u);if(d!==void 0)return d}var g;ke=!0;var I=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var v;v=Fe.current,Fe.current=null,nr();try{if(m){var E=function(){throw Error()};if(Object.defineProperty(E.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(E,[])}catch(W){g=W}Reflect.construct(u,[],E)}else{try{E.call()}catch(W){g=W}u.call(E.prototype)}}else{try{throw Error()}catch(W){g=W}u()}}catch(W){if(W&&g&&typeof W.stack=="string"){for(var b=W.stack.split(`
`),y=g.stack.split(`
`),k=b.length-1,L=y.length-1;k>=1&&L>=0&&b[k]!==y[L];)L--;for(;k>=1&&L>=0;k--,L--)if(b[k]!==y[L]){if(k!==1||L!==1)do if(k--,L--,L<0||b[k]!==y[L]){var w=`
`+b[k].replace(" at new "," at ");return u.displayName&&w.includes("<anonymous>")&&(w=w.replace("<anonymous>",u.displayName)),typeof u=="function"&&ee.set(u,w),w}while(k>=1&&L>=0);break}}}finally{ke=!1,Fe.current=v,ir(),Error.prepareStackTrace=I}var O=u?u.displayName||u.name:"",j=O?ae(O):"";return typeof u=="function"&&ee.set(u,j),j}function rr(u,m,d){return Un(u,!1)}function ur(u){var m=u.prototype;return!!(m&&m.isReactComponent)}function ne(u,m,d){if(u==null)return"";if(typeof u=="function")return Un(u,ur(u));if(typeof u=="string")return ae(u);switch(u){case B:return ae("Suspense");case q:return ae("SuspenseList")}if(typeof u=="object")switch(u.$$typeof){case S:return rr(u.render);case x:return ne(u.type,m,d);case K:{var g=u,I=g._payload,v=g._init;try{return ne(v(I),m,d)}catch{}}}return""}var Nn={},yn=pa.ReactDebugCurrentFrame;function ie(u){if(u){var m=u._owner,d=ne(u.type,u._source,m?m.type:null);yn.setExtraStackFrame(d)}else yn.setExtraStackFrame(null)}function tr(u,m,d,g,I){{var v=Function.call.bind(La);for(var E in u)if(v(u,E)){var b=void 0;try{if(typeof u[E]!="function"){var y=Error((g||"React class")+": "+d+" type `"+E+"` is invalid; it must be a function, usually from the `prop-types` package, but received `"+typeof u[E]+"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");throw y.name="Invariant Violation",y}b=u[E](m,E,g,d,null,"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED")}catch(k){b=k}b&&!(b instanceof Error)&&(ie(I),P("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).",g||"React class",d,E,typeof b),ie(null)),b instanceof Error&&!(b.message in Nn)&&(Nn[b.message]=!0,ie(I),P("Failed %s type: %s",d,b.message),ie(null))}}}function Ta(u){if(u){var m=u._owner,d=ne(u.type,u._source,m?m.type:null);an(d)}else an(null)}var Le;Le=!1;function Dn(){if(na.current){var u=Aa(na.current.type);if(u)return`

Check the render method of \``+u+"`."}return""}function lr(u){if(u!==void 0){var m=u.fileName.replace(/^.*[\\\/]/,""),d=u.lineNumber;return`

Check your code at `+m+":"+d+"."}return""}function or(u){return u!=null?lr(u.__source):""}var Pn={};function cr(u){var m=Dn();if(!m){var d=typeof u=="string"?u:u.displayName||u.name;d&&(m=`

Check the top-level render call using <`+d+">.")}return m}function Fn(u,m){if(!(!u._store||u._store.validated||u.key!=null)){u._store.validated=!0;var d=cr(m);if(!Pn[d]){Pn[d]=!0;var g="";u&&u._owner&&u._owner!==na.current&&(g=" It was passed a child from "+Aa(u._owner.type)+"."),Ta(u),P('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',d,g),Ta(null)}}}function Mn(u,m){if(typeof u=="object"){if(Za(u))for(var d=0;d<u.length;d++){var g=u[d];Sa(g)&&Fn(g,m)}else if(Sa(u))u._store&&(u._store.validated=!0);else if(u){var I=ea(u);if(typeof I=="function"&&I!==u.entries)for(var v=I.call(u),E;!(E=v.next()).done;)Sa(E.value)&&Fn(E.value,m)}}}function kn(u){{var m=u.type;if(m==null||typeof m=="string")return;var d;if(typeof m=="function")d=m.propTypes;else if(typeof m=="object"&&(m.$$typeof===S||m.$$typeof===x))d=m.propTypes;else return;if(d){var g=Aa(m);tr(d,u.props,"prop",g,u)}else if(m.PropTypes!==void 0&&!Le){Le=!0;var I=Aa(m);P("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?",I||"Unknown")}typeof m.getDefaultProps=="function"&&!m.getDefaultProps.isReactClassApproved&&P("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.")}}function mr(u){{for(var m=Object.keys(u.props),d=0;d<m.length;d++){var g=m[d];if(g!=="children"&&g!=="key"){Ta(u),P("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.",g),Ta(null);break}}u.ref!==null&&(Ta(u),P("Invalid attribute `ref` supplied to `React.Fragment`."),Ta(null))}}function Ln(u,m,d){var g=In(u);if(!g){var I="";(u===void 0||typeof u=="object"&&u!==null&&Object.keys(u).length===0)&&(I+=" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");var v=or(m);v?I+=v:I+=Dn();var E;u===null?E="null":Za(u)?E="array":u!==void 0&&u.$$typeof===l?(E="<"+(Aa(u.type)||"Unknown")+" />",I=" Did you accidentally export a JSX literal instead of a component?"):E=typeof u,P("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s",E,I)}var b=bs.apply(this,arguments);if(b==null)return b;if(g)for(var y=2;y<arguments.length;y++)Mn(arguments[y],u);return u===A?mr(b):kn(b),b}var wn=!1;function Ar(u){var m=Ln.bind(null,u);return m.type=u,wn||(wn=!0,Ea("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.")),Object.defineProperty(m,"type",{enumerable:!1,get:function(){return Ea("Factory.type is deprecated. Access the class directly before passing it to createFactory."),Object.defineProperty(this,"type",{value:u}),u}}),m}function fr(u,m,d){for(var g=Us.apply(this,arguments),I=2;I<arguments.length;I++)Mn(arguments[I],g.type);return kn(g),g}function dr(u,m){var d=F.transition;F.transition={};var g=F.transition;F.transition._updatedFibers=new Set;try{u()}finally{if(F.transition=d,d===null&&g._updatedFibers){var I=g._updatedFibers.size;I>10&&Ea("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."),g._updatedFibers.clear()}}}var Gn=!1,se=null;function gr(u){if(se===null)try{var m=("require"+Math.random()).slice(0,7),d=ge&&ge[m];se=d.call(ge,"timers").setImmediate}catch{se=function(I){Gn===!1&&(Gn=!0,typeof MessageChannel>"u"&&P("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."));var v=new MessageChannel;v.port1.onmessage=I,v.port2.postMessage(void 0)}}return se(u)}var va=0,xn=!1;function hr(u){{var m=va;va++,M.current===null&&(M.current=[]);var d=M.isBatchingLegacy,g;try{if(M.isBatchingLegacy=!0,g=u(),!d&&M.didScheduleLegacyUpdate){var I=M.current;I!==null&&(M.didScheduleLegacyUpdate=!1,xe(I))}}catch(O){throw re(m),O}finally{M.isBatchingLegacy=d}if(g!==null&&typeof g=="object"&&typeof g.then=="function"){var v=g,E=!1,b={then:function(O,j){E=!0,v.then(function(W){re(m),va===0?we(W,O,j):O(W)},function(W){re(m),j(W)})}};return!xn&&typeof Promise<"u"&&Promise.resolve().then(function(){}).then(function(){E||(xn=!0,P("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"))}),b}else{var y=g;if(re(m),va===0){var k=M.current;k!==null&&(xe(k),M.current=null);var L={then:function(O,j){M.current===null?(M.current=[],we(y,O,j)):O(y)}};return L}else{var w={then:function(O,j){O(y)}};return w}}}}function re(u){u!==va-1&&P("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. "),va=u}function we(u,m,d){{var g=M.current;if(g!==null)try{xe(g),gr(function(){g.length===0?(M.current=null,m(u)):we(u,m,d)})}catch(I){d(I)}else m(u)}}var Ge=!1;function xe(u){if(!Ge){Ge=!0;var m=0;try{for(;m<u.length;m++){var d=u[m];do d=d(!0);while(d!==null)}u.length=0}catch(g){throw u=u.slice(m+1),g}finally{Ge=!1}}}var Ir=Ln,_r=fr,pr=Ar,Er={map:Xa,forEach:Fs,count:Ps,toArray:Ms,only:ks};N.Children=Er,N.Component=ha,N.Fragment=A,N.Profiler=h,N.PureComponent=Be,N.StrictMode=f,N.Suspense=B,N.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=pa,N.cloneElement=_r,N.createContext=Ls,N.createElement=Ir,N.createFactory=pr,N.createRef=hs,N.forwardRef=Os,N.isValidElement=Sa,N.lazy=xs,N.memo=Ks,N.startTransition=dr,N.unstable_act=hr,N.useCallback=Js,N.useContext=js,N.useDebugValue=Cs,N.useDeferredValue=Xs,N.useEffect=Vs,N.useId=ar,N.useImperativeHandle=Zs,N.useInsertionEffect=zs,N.useLayoutEffect=Ys,N.useMemo=$s,N.useReducer=Rs,N.useRef=Ws,N.useState=Hs,N.useSyncExternalStore=er,N.useTransition=Qs,N.version=a,typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"&&typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop=="function"&&__REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error)}()});var da=qe((bb,Ze)=>{"use strict";process.env.NODE_ENV==="production"?Ze.exports=hi():Ze.exports=Ii()});import ul from"meow";import tl from"update-notifier";var sa=(c=>(c.Project="project",c.Workspace="workspace",c))(sa||{}),T=class{flags;name;runFunction;commands;type="project";constructor(l){this.name=l.name,this.commands=l.commands,this.flags=l.flags,this.type=l.type??"project",this.runFunction=l.run}async run({cli:l,config:c,flags:A}){if(this.runFunction)return await this.runFunction({cli:l,config:c,flags:A})}};async function Ke({cli:a,config:l,command:c,commands:A,flags:f}){if(!c||c.length===0||!c[0]){console.error("No command specified");return}if(!A){console.error("No commands specified");return}let h=c[0],_=A.find(p=>p.name===h);if(!_){console.error(`Unknown command ${h}`);return}c.length===1?_.run({cli:a,config:l,flags:f}):c.length>1&&Ke({cli:a,config:l,command:c.slice(1),commands:_?.commands,flags:f})}import{build as st}from"esbuild";import ba from"typescript";import Hn from"fs-extra";import Q from"path";async function te({input:a,types:l,output:c}){let A=typeof l=="object"?l.configPath:void 0,f=A?await Hn.readFile(Q.join(Q.resolve(),A),"utf8"):null,h=f?await JSON.parse(f.toString()):{extends:"@srclaunch/dx/tsconfig.ui.json",include:[Q.join(Q.resolve(),a?.directory??"src")]},_={...h,compilerOptions:{...h.compilerOptions,declarationDir:Q.join(Q.resolve(),c?.directory??"dist"),listEmittedFiles:!0,rootDir:Q.join(Q.resolve(),a?.directory??"src")}},{options:p}=ba.parseJsonConfigFileContent(_,ba.sys,Q.join(Q.resolve())),B=(await Hn.readdir(Q.join(Q.resolve(),a?.directory??"src"))).filter(D=>D.endsWith(".ts")||D.endsWith(".tsx")).map(D=>Q.join(Q.resolve(),a?.directory??"src",D)),q=ba.createProgram(B,p),x=q.emit(),K=ba.getPreEmitDiagnostics(q).concat(x.diagnostics);for(let D of K)if(D.file){let{line:Y,character:R}=D.file.getLineAndCharacterOfPosition(D.start),ea=ba.flattenDiagnosticMessageText(D.messageText,`
`);console.log(`${D.file.fileName} (${Y+1},${R+1}): ${ea}`)}else console.log(`${ba.flattenDiagnosticMessageText(D.messageText,`
`)}`)}var t=(a=>(a.Afghanistan="AF",a.Albania="AL",a.Algeria="DZ",a.AmericanSamoa="AS",a.Andorra="AD",a.Angola="AO",a.Anguilla="AI",a.Antarctica="AQ",a.AntiguaAndBarbuda="AG",a.Argentina="AR",a.Armenia="AM",a.Aruba="AW",a.Australia="AU",a.Austria="AT",a.Azerbaijan="AZ",a.Bahamas="BS",a.Bahrain="BH",a.Bangladesh="BD",a.Barbados="BB",a.Belarus="BY",a.Belgium="BE",a.Belize="BZ",a.Benin="BJ",a.Bermuda="BM",a.Bhutan="BT",a.Bolivia="BO",a.BosniaAndHerzegovina="BA",a.Botswana="BW",a.BouvetIsland="BV",a.Brazil="BR",a.BritishIndianOceanTerritory="IO",a.Brunei="BN",a.Bulgaria="BG",a.BurkinaFaso="BF",a.Burundi="BI",a.Cambodia="KH",a.Cameroon="CM",a.Canada="CA",a.CapeVerde="CV",a.CaymanIslands="KY",a.CentralAfricanRepublic="CF",a.Chad="TD",a.Chile="CL",a.China="CN",a.ChristmasIsland="CX",a.CocosKeelingIslands="CC",a.Colombia="CO",a.Comoros="KM",a.Congo="CG",a.CongoTheDemocraticRepublicOfThe="CD",a.CookIslands="CK",a.CostaRica="CR",a.CoteDIvoire="CI",a.Croatia="HR",a.Cuba="CU",a.Cyprus="CY",a.CzechRepublic="CZ",a.Denmark="DK",a.Djibouti="DJ",a.Dominica="DM",a.DominicanRepublic="DO",a.Ecuador="EC",a.Egypt="EG",a.ElSalvador="SV",a.EquatorialGuinea="GQ",a.Eritrea="ER",a.Estonia="EE",a.Ethiopia="ET",a.FalklandIslands="FK",a.FaroeIslands="FO",a.Fiji="FJ",a.Finland="FI",a.France="FR",a.FrenchGuiana="GF",a.FrenchPolynesia="PF",a.FrenchSouthernTerritories="TF",a.Gabon="GA",a.Gambia="GM",a.Georgia="GE",a.Germany="DE",a.Ghana="GH",a.Gibraltar="GI",a.Greece="GR",a.Greenland="GL",a.Grenada="GD",a.Guadeloupe="GP",a.Guam="GU",a.Guatemala="GT",a.Guernsey="GG",a.Guinea="GN",a.GuineaBissau="GW",a.Guyana="GY",a.Haiti="HT",a.HeardIslandMcdonaldIslands="HM",a.HolySeeVaticanCityState="VA",a.Honduras="HN",a.HongKong="HK",a.Hungary="HU",a.Iceland="IS",a.India="IN",a.Indonesia="ID",a.Iran="IR",a.Iraq="IQ",a.Ireland="IE",a.IsleOfMan="IM",a.Israel="IL",a.Italy="IT",a.Jamaica="JM",a.Japan="JP",a.Jersey="JE",a.Jordan="JO",a.Kazakhstan="KZ",a.Kenya="KE",a.Kiribati="KI",a.Kuwait="KW",a.Kyrgyzstan="KG",a.Laos="LA",a.Latvia="LV",a.Lebanon="LB",a.Lesotho="LS",a.Liberia="LR",a.Libya="LY",a.Liechtenstein="LI",a.Lithuania="LT",a.Luxembourg="LU",a.Macau="MO",a.Madagascar="MG",a.Malawi="MW",a.Malaysia="MY",a.Maldives="MV",a.Mali="ML",a.Malta="MT",a.MarshallIslands="MH",a.Martinique="MQ",a.Mauritania="MR",a.Mauritius="MU",a.Mayotte="YT",a.Mexico="MX",a.MicronesiaFederatedStatesOf="FM",a.Moldova="MD",a.Monaco="MC",a.Mongolia="MN",a.Montenegro="ME",a.Montserrat="MS",a.Morocco="MA",a.Mozambique="MZ",a.Myanmar="MM",a.Namibia="NA",a.Nauru="NR",a.Nepal="NP",a.Netherlands="NL",a.NetherlandsAntilles="AN",a.NewCaledonia="NC",a.NewZealand="NZ",a.NorthKorea="KP",a.Nicaragua="NI",a.Niger="NE",a.Nigeria="NG",a.Niue="NU",a.NorfolkIsland="NF",a.NorthMacedonia="MK",a.NorthernMarianaIslands="MP",a.Norway="NO",a.Oman="OM",a.Pakistan="PK",a.Palau="PW",a.PalestinianTerritoryOccupied="PS",a.Panama="PA",a.PapuaNewGuinea="PG",a.Paraguay="PY",a.Peru="PE",a.Philippines="PH",a.Pitcairn="PN",a.Poland="PL",a.Portugal="PT",a.PuertoRico="PR",a.Qatar="QA",a.Reunion="RE",a.Romania="RO",a.RussianFederation="RU",a.Rwanda="RW",a.SaintBarthelemy="BL",a.SaintHelena="SH",a.SaintKittsAndNevis="KN",a.SaintLucia="LC",a.SaintMartin="MF",a.SaintPierreAndMiquelon="PM",a.SaintVincentAndTheGrenadines="VC",a.Samoa="WS",a.SanMarino="SM",a.SaoTomeAndPrincipe="ST",a.SaudiArabia="SA",a.Senegal="SN",a.Serbia="RS",a.SerbiaAndMontenegro="CS",a.Seychelles="SC",a.SierraLeone="SL",a.Singapore="SG",a.Slovakia="SK",a.Slovenia="SI",a.SolomonIslands="SB",a.Somalia="SO",a.SouthAfrica="ZA",a.SouthGeorgiaAndTheSouthSandwichIslands="GS",a.SouthKorea="KR",a.Spain="ES",a.SriLanka="LK",a.Sudan="SD",a.Suriname="SR",a.SvalbardAndJanMayen="SJ",a.Swaziland="SZ",a.Sweden="SE",a.Switzerland="CH",a.Syria="SY",a.Taiwan="TW",a.Tajikistan="TJ",a.Tanzania="TZ",a.Thailand="TH",a.TimorLeste="TL",a.Togo="TG",a.Tokelau="TK",a.Tonga="TO",a.TrinidadAndTobago="TT",a.Tunisia="TN",a.Turkey="TR",a.Turkmenistan="TM",a.TurksAndCaicosIslands="TC",a.Tuvalu="TV",a.Uganda="UG",a.Ukraine="UA",a.UnitedArabEmirates="AE",a.UnitedKingdom="GB",a.UnitedStates="US",a.UnitedStatesMinorOutlyingIslands="UM",a.Uruguay="UY",a.Uzbekistan="UZ",a.Vanuatu="VU",a.Venezuela="VE",a.Vietnam="VN",a.VirginIslandsBritish="VG",a.VirginIslandsUS="VI",a.WallisAndFutuna="WF",a.WesternSahara="EH",a.Yemen="YE",a.Zambia="ZM",a.Zimbabwe="ZW",a))(t||{}),$=(a=>(a.AfghanistanAfghani="AFN",a.AlbaniaLek="ALL",a.ArmeniaDram="AMD",a.AlgeriaDinar="DZD",a.AmericanSamoaTala="WST",a.AngolaKwanza="AOA",a.ArgentinaPeso="ARS",a.AustraliaDollar="AUD",a.ArubaFlorin="AWG",a.AzerbaijanNewManat="AZN",a.BosniaAndHerzegovinaConvertibleMark="BAM",a.BahrainDinar="BHD",a.BarbadosDollar="BBD",a.BangladeshTaka="BDT",a.BelgiumFranc="BGN",a.BermudaDollar="BMD",a.BruneiDollar="BND",a.BoliviaBoliviano="BOB",a.BrazilReal="BRL",a.BahamasDollar="BSD",a.BhutanNgultrum="BTN",a.BotswanaPula="BWP",a.BelarusRuble="BYN",a.BelizeDollar="BZD",a.BulgariaLev="BGN",a.BurundiFranc="BIF",a.BritishPound="GBP",a.CanadaDollar="CAD",a.CambodiaRiel="KHR",a.ComorosFranc="KMF",a.CaymanIslandsDollar="KYD",a.ChilePeso="CLP",a.ChinaYuan="CNY",a.ColombiaPeso="COP",a.CostaRicaColon="CRC",a.CroatiaKuna="HRK",a.CubaConvertiblePeso="CUC",a.CubaPeso="CUP",a.CapeVerdeEscudo="CVE",a.CyprusPound="CYP",a.CzechRepublicKoruna="CZK",a.DjiboutiFranc="DJF",a.DenmarkKrone="DKK",a.DominicaDollar="XCD",a.DominicanRepublicPeso="DOP",a.EastCaribbeanDollar="XCD",a.EgyptPound="EGP",a.ElSalvadorColon="SVC",a.EquatorialGuineaEkwele="GQE",a.EritreaNakfa="ERN",a.EstoniaKroon="EEK",a.EthiopiaBirr="ETB",a.Euro="EUR",a.FijiDollar="FJD",a.FalklandIslandsPound="FKP",a.GambiaDalasi="GMD",a.GabonFranc="GMD",a.GeorgiaLari="GEL",a.GhanaCedi="GHS",a.GibraltarPound="GIP",a.GuatemalaQuetzal="GTQ",a.GuernseyPound="GGP",a.GuineaBissauPeso="GWP",a.GuyanaDollar="GYD",a.HongKongDollar="HKD",a.HondurasLempira="HNL",a.HaitiGourde="HTG",a.HungaryForint="HUF",a.IndonesiaRupiah="IDR",a.IsleOfManPound="IMP",a.IsraelNewShekel="ILS",a.IndiaRupee="INR",a.IraqDinar="IQD",a.IranRial="IRR",a.IcelandKrona="ISK",a.JamaicaDollar="JMD",a.JapanYen="JPY",a.JerseyPound="JEP",a.JordanDinar="JOD",a.KazakhstanTenge="KZT",a.KenyaShilling="KES",a.KyrgyzstanSom="KGS",a.NorthKoreaWon="KPW",a.SouthKoreaWon="KRW",a.KuwaitDinar="KWD",a.LaosKip="LAK",a.LebanonPound="LBP",a.LiberiaDollar="LRD",a.LesothoLoti="LSL",a.LibyanDinar="LYD",a.LithuaniaLitas="LTL",a.LatviaLats="LVL",a.LibyaDinar="LYD",a.MacauPataca="MOP",a.MaldivesRufiyaa="MVR",a.MalawiKwacha="MWK",a.MaltaLira="MTL",a.MauritiusRupee="MUR",a.MongoliaTughrik="MNT",a.MoroccoDirham="MAD",a.MoldovaLeu="MDL",a.MozambiqueMetical="MZN",a.MadagascarAriary="MGA",a.MacedoniaDenar="MKD",a.MexicoPeso="MXN",a.MalaysiaRinggit="MYR",a.MyanmarKyat="MMK",a.MicronesiaFederatedStatesDollar="USD",a.NicaraguaCordoba="NIO",a.NamibiaDollar="NAD",a.NetherlandsAntillesGuilder="ANG",a.NewCaledoniaFranc="XPF",a.NigeriaNaira="NGN",a.NicaraguaCordobaOro="NIO",a.NigerCFAFranc="XOF",a.NorwayKrone="NOK",a.NepalRupee="NPR",a.NewZealandDollar="NZD",a.OmanRial="OMR",a.PanamaBalboa="PAB",a.PeruNuevoSol="PEN",a.PapuaNewGuineaKina="PGK",a.PhilippinesPeso="PHP",a.PakistanRupee="PKR",a.PeruNuevo="PEN",a.PolandZloty="PLN",a.ParaguayGuarani="PYG",a.QatarRial="QAR",a.RomaniaNewLeu="RON",a.SerbiaDinar="RSD",a.SriLankaRupee="LKR",a.RussiaRuble="RUB",a.RwandaFranc="RWF",a.SaudiArabiaRiyal="SAR",a.SlovakiaKoruna="SKK",a.SloveniaTolar="SIT",a.SolomonIslandsDollar="SBD",a.SeychellesRupee="SCR",a.SudanPound="SDG",a.SwedenKrona="SEK",a.SingaporeDollar="SGD",a.SaintHelenaPound="SHP",a.SierraLeoneLeone="SLL",a.SomaliaShilling="SOS",a.SurinameDollar="SRD",a.SintMaartenPound="SXD",a.SyriaPound="SYP",a.SwazilandLilangeni="SZL",a.SwitzerlandFranc="CHF",a.ThailandBaht="THB",a.TajikistanSomoni="TJS",a.TurkmenistanManat="TMT",a.TunisiaDinar="TND",a.TongaPaanga="TOP",a.TurkeyLira="TRY",a.TrinidadAndTobagoDollar="TTD",a.TaiwanNewDollar="TWD",a.TanzaniaShilling="TZS",a.UnitedArabEmiratesDirham="AED",a.UkraineHryvnia="UAH",a.UgandaShilling="UGX",a.UnitedKingdomPound="GBP",a.UnitedStatesDollar="USD",a.UruguayPeso="UYU",a.UzbekistanSom="UZS",a.VenezuelaBolivar="VEF",a.VietnamDong="VND",a.VanuatuVatu="VUV",a.SamoaTala="WST",a.YemenRial="YER",a.SouthAfricaRand="ZAR",a.ZambiaKwacha="ZMW",a.ZimbabweDollar="ZWL",a))($||{}),Il={AfghanistanAfghani:{code:"AFN",countries:[t.Afghanistan],decimal_digits:2,decimal_separator:".",name:"Afghan Afghani",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u060B",symbol_native:"\u060B",symbol_placement:"before",thousands_separator:","},AlbaniaLek:{code:"ALL",countries:[t.Albania],decimal_digits:2,decimal_separator:",",name:"Albanian Lek",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Lek",symbol_native:"Lek",symbol_placement:"before",thousands_separator:"."},AlgeriaDinar:{code:"DZD",countries:[t.Algeria],decimal_digits:2,decimal_separator:".",name:"Algerian Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u062F.\u062C",symbol_native:"\u062F.\u062C",symbol_placement:"before",thousands_separator:","},ArgentinaPeso:{code:"ARS",countries:[t.Argentina],decimal_digits:2,decimal_separator:".",name:"Argentine Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ArmeniaDram:{code:"AMD",countries:[t.Armenia],decimal_digits:2,decimal_separator:",",name:"Armenian Dram",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0564\u0580.",symbol_native:"\u0564\u0580.",symbol_placement:"before",thousands_separator:"."},ArubaFlorin:{code:"AWG",countries:[t.Aruba],decimal_digits:2,decimal_separator:".",name:"Aruban Florin",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0192",symbol_native:"\u0192",symbol_placement:"before",thousands_separator:","},AustraliaDollar:{code:"AUD",countries:[t.Australia],decimal_digits:2,decimal_separator:".",name:"Australian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},AzerbaijanManat:{code:"AZN",countries:[t.Azerbaijan],decimal_digits:2,decimal_separator:".",name:"Azerbaijani Manat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u043C\u0430\u043D",symbol_native:"\u043C\u0430\u043D",symbol_placement:"before",thousands_separator:","},BahrainDinar:{code:"BHD",countries:[t.Bahrain],decimal_digits:3,decimal_separator:".",name:"Bahraini Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:".\u062F.\u0628",symbol_native:".\u062F.\u0628",symbol_placement:"before",thousands_separator:","},BangladeshTaka:{code:"BDT",countries:[t.Bangladesh],decimal_digits:2,decimal_separator:".",name:"Bangladeshi Taka",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u09F3",symbol_native:"\u09F3",symbol_placement:"before",thousands_separator:","},BarbadosDollar:{code:"BBD",countries:[t.Barbados],decimal_digits:2,decimal_separator:".",name:"Barbadian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},BelarusRuble:{code:"BYN",countries:[t.Belarus],decimal_digits:2,decimal_separator:".",name:"Belarusian Ruble",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Br",symbol_native:"Br",symbol_placement:"before",thousands_separator:"."},BelizeDollar:{code:"BZD",countries:[t.Belize],decimal_digits:2,decimal_separator:".",name:"Belize Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"BZ$",symbol_native:"BZ$",symbol_placement:"before",thousands_separator:","},BermudaDollar:{code:"BMD",countries:[t.Bermuda],decimal_digits:2,decimal_separator:".",name:"Bermudian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},BoliviaBoliviano:{code:"BOB",countries:[t.Bolivia],decimal_digits:2,decimal_separator:".",name:"Bolivian Boliviano",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$b",symbol_native:"$b",symbol_placement:"before",thousands_separator:","},BosniaAndHerzegovinaConvertibleMarka:{code:"BAM",countries:[t.BosniaAndHerzegovina],decimal_digits:2,decimal_separator:",",name:"Bosnia and Herzegovina Convertible Marka",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KM",symbol_native:"KM",symbol_placement:"before",thousands_separator:"."},BotswanaPula:{code:"BWP",countries:[t.Botswana],decimal_digits:2,decimal_separator:".",name:"Botswana Pula",negative_sign:"-",positive_sign:"",rounding:0,symbol:"P",symbol_native:"P",symbol_placement:"before",thousands_separator:","},BrazilReal:{code:"BRL",countries:[t.Brazil],decimal_digits:2,decimal_separator:",",name:"Brazilian Real",negative_sign:"-",positive_sign:"",rounding:0,symbol:"R$",symbol_native:"R$",symbol_placement:"before",thousands_separator:"."},BruneiDollar:{code:"BND",countries:[t.Brunei],decimal_digits:2,decimal_separator:".",name:"Brunei Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},BulgariaLev:{code:"BGN",countries:[t.Bulgaria],decimal_digits:2,decimal_separator:".",name:"Bulgarian Lev",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u043B\u0432",symbol_native:"\u043B\u0432",symbol_placement:"before",thousands_separator:"."},BurundiFranc:{code:"BIF",countries:[t.Burundi],decimal_digits:0,decimal_separator:".",name:"Burundian Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"FBu",symbol_native:"FBu",symbol_placement:"before",thousands_separator:","},CambodiaRiel:{code:"KHR",countries:[t.Cambodia],decimal_digits:2,decimal_separator:",",name:"Cambodian Riel",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u17DB",symbol_native:"\u17DB",symbol_placement:"before",thousands_separator:"."},CanadaDollar:{code:"CAD",countries:[t.Canada],decimal_digits:2,decimal_separator:".",name:"Canadian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},CapeVerdeEscudo:{code:"CVE",countries:[t.CapeVerde],decimal_digits:2,decimal_separator:".",name:"Cape Verde Escudo",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Esc",symbol_native:"Esc",symbol_placement:"before",thousands_separator:","},CaymanIslandsDollar:{code:"KYD",countries:[t.CaymanIslands],decimal_digits:2,decimal_separator:".",name:"Cayman Islands Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ChilePeso:{code:"CLP",countries:[t.Chile],decimal_digits:0,decimal_separator:".",name:"Chilean Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ChinaYuanRenminbi:{code:"CNY",countries:[t.China],decimal_digits:2,decimal_separator:".",name:"Chinese Yuan",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA5",symbol_native:"\xA5",symbol_placement:"before",thousands_separator:","},ColombiaPeso:{code:"COP",countries:[t.Colombia],decimal_digits:2,decimal_separator:".",name:"Colombian Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ComorosFranc:{code:"KMF",countries:[t.Comoros],decimal_digits:0,decimal_separator:".",name:"Comoros Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"CF",symbol_native:"CF",symbol_placement:"before",thousands_separator:","},CostaRicaColon:{code:"CRC",countries:[t.CostaRica],decimal_digits:2,decimal_separator:".",name:"Costa Rican Colon",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A1",symbol_native:"\u20A1",symbol_placement:"before",thousands_separator:","},CroatiaKuna:{code:"HRK",countries:[t.Croatia],decimal_digits:2,decimal_separator:",",name:"Croatian Kuna",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kn",symbol_native:"kn",symbol_placement:"before",thousands_separator:"."},CubaConvertiblePeso:{code:"CUC",countries:[t.Cuba],decimal_digits:2,decimal_separator:",",name:"Cuba Convertible Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},CubaPeso:{code:"CUP",countries:[t.Cuba],decimal_digits:2,decimal_separator:",",name:"Cuba Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},CyprusPound:{code:"CYP",countries:[t.Cyprus],decimal_digits:2,decimal_separator:",",name:"Cyprus Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},CzechRepublicKoruna:{code:"CZK",countries:[t.CzechRepublic],decimal_digits:2,decimal_separator:",",name:"Czech Republic Koruna",negative_sign:"-",positive_sign:"",rounding:0,symbol:"K\u010D",symbol_native:"K\u010D",symbol_placement:"before",thousands_separator:"."},DenmarkKrone:{code:"DKK",countries:[t.Denmark],decimal_digits:2,decimal_separator:",",name:"Denmark Krone",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},DjiboutiFranc:{code:"DJF",countries:[t.Djibouti],decimal_digits:0,decimal_separator:".",name:"Djibouti Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Fdj",symbol_native:"Fdj",symbol_placement:"before",thousands_separator:","},DominicanRepublicPeso:{code:"DOP",countries:[t.DominicanRepublic],decimal_digits:2,decimal_separator:",",name:"Dominican Republic Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"RD$",symbol_native:"RD$",symbol_placement:"before",thousands_separator:"."},EastCaribbeanDollar:{code:"XCD",countries:[t.AntiguaAndBarbuda,t.Dominica,t.Grenada,t.SaintKittsAndNevis,t.SaintLucia,t.SaintVincentAndTheGrenadines],decimal_digits:2,decimal_separator:".",name:"East Caribbean Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},EgyptPound:{code:"EGP",countries:[t.Egypt],decimal_digits:2,decimal_separator:".",name:"Egypt Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:","},ElSalvadorColon:{code:"SVC",countries:[t.ElSalvador],decimal_digits:2,decimal_separator:",",name:"El Salvador Colon",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A1",symbol_native:"\u20A1",symbol_placement:"before",thousands_separator:"."},EquatorialGuineaEkwele:{code:"GQE",countries:[t.EquatorialGuinea],decimal_digits:0,decimal_separator:".",name:"Equatorial Guinea Ekwele",negative_sign:"-",positive_sign:"",rounding:0,symbol:"GQE",symbol_native:"GQE",symbol_placement:"before",thousands_separator:","},EritreaNakfa:{code:"ERN",countries:[t.Eritrea],decimal_digits:2,decimal_separator:",",name:"Eritrea Nakfa",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Nfk",symbol_native:"Nfk",symbol_placement:"before",thousands_separator:"."},EstoniaKroon:{code:"EEK",countries:[t.Estonia],decimal_digits:2,decimal_separator:",",name:"Estonia Kroon",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},EthiopiaBirr:{code:"ETB",countries:[t.Ethiopia],decimal_digits:2,decimal_separator:",",name:"Ethiopia Birr",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Br",symbol_native:"Br",symbol_placement:"before",thousands_separator:"."},Euro:{code:"EUR",countries:[t.Andorra,t.Austria,t.Belgium,t.Cyprus,t.Estonia,t.Finland,t.France,t.Germany,t.Greece,t.Ireland,t.Italy,t.Latvia,t.Lithuania,t.Luxembourg,t.Malta,t.Monaco,t.Netherlands,t.Portugal,t.Spain,t.Sweden,t.UnitedKingdom],decimal_digits:2,decimal_separator:",",name:"Euro",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AC",symbol_native:"\u20AC",symbol_placement:"before",thousands_separator:"."},FalklandIslandsPound:{code:"FKP",countries:[t.FalklandIslands],decimal_digits:2,decimal_separator:",",name:"Equatorial Guinea Ekwele",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},FijiDollar:{code:"FJD",countries:[t.Fiji],decimal_digits:2,decimal_separator:",",name:"Fiji Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},GambiaDalasi:{code:"GMD",countries:[t.Gambia],decimal_digits:2,decimal_separator:",",name:"Gambia Dalasi",negative_sign:"-",positive_sign:"",rounding:0,symbol:"D",symbol_native:"D",symbol_placement:"before",thousands_separator:"."},GeorgiaLari:{code:"GEL",countries:[t.Georgia],decimal_digits:2,decimal_separator:",",name:"Georgia Lari",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20BE",symbol_native:"\u20BE",symbol_placement:"before",thousands_separator:"."},GhanaCedi:{code:"GHS",countries:[t.Ghana],decimal_digits:2,decimal_separator:",",name:"Ghana Cedi",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B5",symbol_native:"\u20B5",symbol_placement:"before",thousands_separator:"."},GibraltarPound:{code:"GIP",countries:[t.Gibraltar],decimal_digits:2,decimal_separator:",",name:"Gibraltar Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},GuatemalaQuetzal:{code:"GTQ",countries:[t.Guatemala],decimal_digits:2,decimal_separator:",",name:"Guatemala Quetzal",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Q",symbol_native:"Q",symbol_placement:"before",thousands_separator:"."},GuernseyPound:{code:"GGP",countries:[t.Guernsey],decimal_digits:2,decimal_separator:",",name:"Guernsey Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},GuineaBissauPeso:{code:"GWP",countries:[t.GuineaBissau],decimal_digits:2,decimal_separator:",",name:"Guinea-Bissau Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B5",symbol_native:"\u20B5",symbol_placement:"before",thousands_separator:"."},GuyanaDollar:{code:"GYD",countries:[t.Guyana],decimal_digits:2,decimal_separator:",",name:"Guyana Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},HaitiGourde:{code:"HTG",countries:[t.Haiti],decimal_digits:2,decimal_separator:",",name:"Haiti Gourde",negative_sign:"-",positive_sign:"",rounding:0,symbol:"G",symbol_native:"G",symbol_placement:"before",thousands_separator:"."},HondurasLempira:{code:"HNL",countries:[t.Honduras],decimal_digits:2,decimal_separator:",",name:"Honduras Lempira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"L",symbol_native:"L",symbol_placement:"before",thousands_separator:"."},HongKongDollar:{code:"HKD",countries:[t.HongKong],decimal_digits:2,decimal_separator:",",name:"Hong Kong Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},HungaryForint:{code:"HUF",countries:[t.Hungary],decimal_digits:2,decimal_separator:",",name:"Hungary Forint",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Ft",symbol_native:"Ft",symbol_placement:"before",thousands_separator:"."},IcelandKrona:{code:"ISK",countries:[t.Iceland],decimal_digits:0,decimal_separator:",",name:"Iceland Krona",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},IndianRupee:{code:"INR",countries:[t.India,t.Bhutan],decimal_digits:2,decimal_separator:",",name:"Indian Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B9",symbol_native:"\u20B9",symbol_placement:"before",thousands_separator:"."},IndonesiaRupiah:{code:"IDR",countries:[t.Indonesia],decimal_digits:0,decimal_separator:",",name:"Indonesia Rupiah",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Rp",symbol_native:"Rp",symbol_placement:"before",thousands_separator:"."},IranRial:{code:"IRR",countries:[t.Iran],decimal_digits:0,decimal_separator:",",name:"Iran Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},IsleOfManPound:{code:"IMP",countries:[t.IsleOfMan],decimal_digits:2,decimal_separator:",",name:"Isle of Man Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},IsraeliShekel:{code:"ILS",countries:[t.Israel],decimal_digits:2,decimal_separator:",",name:"Israeli Shekel",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AA",symbol_native:"\u20AA",symbol_placement:"before",thousands_separator:"."},JamaicaDollar:{code:"JMD",countries:[t.Jamaica],decimal_digits:2,decimal_separator:",",name:"Jamaica Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"J$",symbol_native:"J$",symbol_placement:"before",thousands_separator:"."},JapanYen:{code:"JPY",countries:[t.Japan],decimal_digits:0,decimal_separator:",",name:"Japan Yen",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA5",symbol_native:"\uFFE5",symbol_placement:"before",thousands_separator:"."},JerseyPound:{code:"JEP",countries:[t.Jersey],decimal_digits:2,decimal_separator:",",name:"Jersey Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},JordanDinar:{code:"JOD",countries:[t.Jordan],decimal_digits:3,decimal_separator:",",name:"Jordan Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"JD",symbol_native:"JD",symbol_placement:"before",thousands_separator:"."},KazakhstanTenge:{code:"KZT",countries:[t.Kazakhstan],decimal_digits:2,decimal_separator:",",name:"Kazakhstan Tenge",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B8",symbol_native:"\u20B8",symbol_placement:"before",thousands_separator:"."},KenyaShilling:{code:"KES",countries:[t.Kenya],decimal_digits:2,decimal_separator:",",name:"Kenya Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KSh",symbol_native:"KSh",symbol_placement:"before",thousands_separator:"."},KuwaitDinar:{code:"KWD",countries:[t.Kuwait],decimal_digits:3,decimal_separator:",",name:"Kuwait Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KD",symbol_native:"KD",symbol_placement:"before",thousands_separator:"."},KyrgyzstanSom:{code:"KGS",countries:[t.Kyrgyzstan],decimal_digits:2,decimal_separator:",",name:"Kyrgyzstan Som",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KGS",symbol_native:"KGS",symbol_placement:"before",thousands_separator:"."},LaosKip:{code:"LAK",countries:[t.Laos],decimal_digits:0,decimal_separator:",",name:"Laos Kip",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AD",symbol_native:"\u20AD",symbol_placement:"before",thousands_separator:"."},LatviaLats:{code:"LVL",countries:[t.Latvia],decimal_digits:2,decimal_separator:",",name:"Latvia Lat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Ls",symbol_native:"Ls",symbol_placement:"before",thousands_separator:"."},LebanonPound:{code:"LBP",countries:[t.Lebanon],decimal_digits:0,decimal_separator:",",name:"Lebanon Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},LesothoLoti:{code:"LSL",countries:[t.Lesotho],decimal_digits:2,decimal_separator:",",name:"Lesotho Loti",negative_sign:"-",positive_sign:"",rounding:0,symbol:"M",symbol_native:"M",symbol_placement:"before",thousands_separator:"."},LiberiaDollar:{code:"LRD",countries:[t.Liberia],decimal_digits:2,decimal_separator:",",name:"Liberia Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},LibyanDinar:{code:"LYD",countries:[t.Libya],decimal_digits:3,decimal_separator:",",name:"Libyan Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"LD",symbol_native:"LD",symbol_placement:"before",thousands_separator:"."},LithuaniaLitas:{code:"LTL",countries:[t.Lithuania],decimal_digits:2,decimal_separator:",",name:"Lithuania Litas",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Lt",symbol_native:"Lt",symbol_placement:"before",thousands_separator:"."},MacauPataca:{code:"MOP",countries:[t.Macau],decimal_digits:2,decimal_separator:",",name:"Macau Pataca",negative_sign:"-",positive_sign:"",rounding:0,symbol:"MOP$",symbol_native:"MOP$",symbol_placement:"before",thousands_separator:"."},MacedoniaDenar:{code:"MKD",countries:[t.NorthMacedonia],decimal_digits:2,decimal_separator:",",name:"Macedonia Denar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0434\u0435\u043D",symbol_native:"\u0434\u0435\u043D",symbol_placement:"before",thousands_separator:"."},MadagascarAriary:{code:"MGA",countries:[t.Madagascar],decimal_digits:0,decimal_separator:",",name:"Madagascar Ariary",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Ar",symbol_native:"Ar",symbol_placement:"before",thousands_separator:"."},MalawiKwacha:{code:"MWK",countries:[t.Malawi],decimal_digits:2,decimal_separator:",",name:"Malawi Kwacha",negative_sign:"-",positive_sign:"",rounding:0,symbol:"MK",symbol_native:"MK",symbol_placement:"before",thousands_separator:"."},MalaysiaRinggit:{code:"MYR",countries:[t.Malaysia],decimal_digits:2,decimal_separator:",",name:"Malaysia Ringgit",negative_sign:"-",positive_sign:"",rounding:0,symbol:"RM",symbol_native:"RM",symbol_placement:"before",thousands_separator:"."},MaldivesRufiyaa:{code:"MVR",countries:[t.Maldives],decimal_digits:2,decimal_separator:",",name:"Maldives Rufiyaa",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Rf",symbol_native:"Rf",symbol_placement:"before",thousands_separator:"."},MaltaLira:{code:"MTL",countries:[t.Malta],decimal_digits:2,decimal_separator:",",name:"Malta Lira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Lm",symbol_native:"Lm",symbol_placement:"before",thousands_separator:"."},MauritiusRupee:{code:"MUR",countries:[t.Mauritius],decimal_digits:2,decimal_separator:",",name:"Mauritius Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},MexicoPeso:{code:"MXN",countries:[t.Mexico],decimal_digits:2,decimal_separator:",",name:"Mexico Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},MoldovaLeu:{code:"MDL",countries:[t.Moldova],decimal_digits:2,decimal_separator:",",name:"Moldova Leu",negative_sign:"-",positive_sign:"",rounding:0,symbol:"L",symbol_native:"L",symbol_placement:"before",thousands_separator:"."},MongoliaTughrik:{code:"MNT",countries:[t.Mongolia],decimal_digits:2,decimal_separator:",",name:"Mongolia Tughrik",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AE",symbol_native:"\u20AE",symbol_placement:"before",thousands_separator:"."},MoroccoDirham:{code:"MAD",countries:[t.Morocco],decimal_digits:2,decimal_separator:",",name:"Morocco Dirham",negative_sign:"-",positive_sign:"",rounding:0,symbol:"DH",symbol_native:"DH",symbol_placement:"before",thousands_separator:"."},MozambiqueMetical:{code:"MZN",countries:[t.Mozambique],decimal_digits:2,decimal_separator:",",name:"Mozambique Metical",negative_sign:"-",positive_sign:"",rounding:0,symbol:"MT",symbol_native:"MT",symbol_placement:"before",thousands_separator:"."},MyanmarKyat:{code:"MMK",countries:[t.Myanmar],decimal_digits:0,decimal_separator:",",name:"Myanmar Kyat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"K",symbol_native:"K",symbol_placement:"before",thousands_separator:"."},NamibiaDollar:{code:"NAD",countries:[t.Namibia],decimal_digits:2,decimal_separator:",",name:"Namibia Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},NepalRupee:{code:"NPR",countries:[t.Nepal],decimal_digits:2,decimal_separator:",",name:"Nepal Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},NetherlandsAntillesGuilder:{code:"ANG",countries:[t.NetherlandsAntilles],decimal_digits:2,decimal_separator:",",name:"Netherlands Antilles Guilder",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0192",symbol_native:"\u0192",symbol_placement:"before",thousands_separator:"."},NewCaledoniaFranc:{code:"XPF",countries:[t.NewCaledonia],decimal_digits:0,decimal_separator:",",name:"New Caledonia Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A3",symbol_native:"\u20A3",symbol_placement:"before",thousands_separator:"."},NewZealandDollar:{code:"NZD",countries:[t.NewZealand],decimal_digits:2,decimal_separator:",",name:"New Zealand Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},NicaraguaCordoba:{code:"NIO",countries:[t.Nicaragua],decimal_digits:2,decimal_separator:",",name:"Nicaragua Cordoba",negative_sign:"-",positive_sign:"",rounding:0,symbol:"C$",symbol_native:"C$",symbol_placement:"before",thousands_separator:"."},NigerCFAFranc:{code:"XOF",countries:[t.Niger],decimal_digits:0,decimal_separator:",",name:"Niger CFA Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"CFA",symbol_native:"CFA",symbol_placement:"before",thousands_separator:"."},NigeriaNaira:{code:"NGN",countries:[t.Nigeria],decimal_digits:2,decimal_separator:",",name:"Nigeria Naira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A6",symbol_native:"\u20A6",symbol_placement:"before",thousands_separator:"."},NorthKoreaWon:{code:"KPW",countries:[t.NorthKorea],decimal_digits:0,decimal_separator:",",name:"North Korea Won",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A9",symbol_native:"\u20A9",symbol_placement:"before",thousands_separator:"."},NorwayKrone:{code:"NOK",countries:[t.Norway],decimal_digits:2,decimal_separator:",",name:"Norway Krone",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},OmanRial:{code:"OMR",countries:[t.Oman],decimal_digits:3,decimal_separator:",",name:"Oman Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},PakistanRupee:{code:"PKR",countries:[t.Pakistan],decimal_digits:2,decimal_separator:",",name:"Pakistan Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},PanamaBalboa:{code:"PAB",countries:[t.Panama],decimal_digits:2,decimal_separator:",",name:"Panama Balboa",negative_sign:"-",positive_sign:"",rounding:0,symbol:"B/.",symbol_native:"B/.",symbol_placement:"before",thousands_separator:"."},ParaguayGuarani:{code:"PYG",countries:[t.Paraguay],decimal_digits:0,decimal_separator:",",name:"Paraguay Guarani",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Gs",symbol_native:"Gs",symbol_placement:"before",thousands_separator:"."},PeruvianNuevo:{code:"PEN",countries:[t.Peru],decimal_digits:2,decimal_separator:",",name:"Peruvian Nuevo",negative_sign:"-",positive_sign:"",rounding:0,symbol:"S/.",symbol_native:"S/.",symbol_placement:"before",thousands_separator:"."},PhilippinesPeso:{code:"PHP",countries:[t.Philippines],decimal_digits:2,decimal_separator:",",name:"Philippines Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B1",symbol_native:"\u20B1",symbol_placement:"before",thousands_separator:"."},PolandZloty:{code:"PLN",countries:[t.Poland],decimal_digits:2,decimal_separator:",",name:"Poland Zloty",negative_sign:"-",positive_sign:"",rounding:0,symbol:"z\u0142",symbol_native:"z\u0142",symbol_placement:"before",thousands_separator:"."},QatarRial:{code:"QAR",countries:[t.Qatar],decimal_digits:2,decimal_separator:",",name:"Qatar Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},RomaniaNewLeu:{code:"RON",countries:[t.Romania],decimal_digits:2,decimal_separator:",",name:"Romania New Leu",negative_sign:"-",positive_sign:"",rounding:0,symbol:"lei",symbol_native:"lei",symbol_placement:"before",thousands_separator:"."},RussiaRuble:{code:"RUB",countries:[t.RussianFederation],decimal_digits:2,decimal_separator:",",name:"Russia Ruble",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20BD",symbol_native:"\u20BD",symbol_placement:"before",thousands_separator:"."},RwandaFranc:{code:"RWF",countries:[t.Rwanda],decimal_digits:0,decimal_separator:",",name:"Rwanda Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"RF",symbol_native:"RF",symbol_placement:"before",thousands_separator:"."},SaudiArabiaRiyal:{code:"SAR",countries:[t.SaudiArabia],decimal_digits:2,decimal_separator:",",name:"Saudi Arabia Riyal",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},SerbiaDinar:{code:"RSD",countries:[t.Serbia],decimal_digits:0,decimal_separator:",",name:"Serbia Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0414\u0438\u043D.",symbol_native:"\u0414\u0438\u043D.",symbol_placement:"before",thousands_separator:"."},SeychellesRupee:{code:"SCR",countries:[t.Seychelles],decimal_digits:2,decimal_separator:",",name:"Seychelles Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},SingaporeDollar:{code:"SGD",countries:[t.Singapore],decimal_digits:2,decimal_separator:",",name:"Singapore Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},SlovakiaKoruna:{code:"SKK",countries:[t.Slovakia],decimal_digits:2,decimal_separator:",",name:"Slovakia Koruna",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Sk",symbol_native:"Sk",symbol_placement:"before",thousands_separator:"."},SloveniaTolar:{code:"SIT",countries:[t.Slovenia],decimal_digits:2,decimal_separator:",",name:"Slovenia Tolar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"SIT",symbol_native:"SIT",symbol_placement:"before",thousands_separator:"."},SolomonIslandsDollar:{code:"SBD",countries:[t.SolomonIslands],decimal_digits:2,decimal_separator:",",name:"Solomon Islands Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},SomaliaShilling:{code:"SOS",countries:[t.Somalia],decimal_digits:0,decimal_separator:",",name:"Somalia Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"S",symbol_native:"S",symbol_placement:"before",thousands_separator:"."},SouthAfricaRand:{code:"ZAR",countries:[t.SouthAfrica],decimal_digits:2,decimal_separator:",",name:"South Africa Rand",negative_sign:"-",positive_sign:"",rounding:0,symbol:"R",symbol_native:"R",symbol_placement:"before",thousands_separator:"."},SouthKoreaWon:{code:"KRW",countries:[t.SouthKorea],decimal_digits:0,decimal_separator:",",name:"South Korea Won",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A9",symbol_native:"\u20A9",symbol_placement:"before",thousands_separator:"."},SriLankaRupee:{code:"LKR",countries:[t.SriLanka],decimal_digits:2,decimal_separator:",",name:"Sri Lanka Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},SudanPound:{code:"SDG",countries:[t.Sudan],decimal_digits:2,decimal_separator:",",name:"Sudan Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},SurinameDollar:{code:"SRD",countries:[t.Suriname],decimal_digits:2,decimal_separator:",",name:"Suriname Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},SwazilandLilangeni:{code:"SZL",countries:[t.Swaziland],decimal_digits:2,decimal_separator:",",name:"Swaziland Lilangeni",negative_sign:"-",positive_sign:"",rounding:0,symbol:"E",symbol_native:"E",symbol_placement:"before",thousands_separator:"."},SwedenKrona:{code:"SEK",countries:[t.Sweden],decimal_digits:2,decimal_separator:",",name:"Sweden Krona",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},SwitzerlandFranc:{code:"CHF",countries:[t.Switzerland],decimal_digits:2,decimal_separator:",",name:"Switzerland Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"CHF",symbol_native:"CHF",symbol_placement:"before",thousands_separator:"."},SyriaPound:{code:"SYP",countries:[t.Syria],decimal_digits:2,decimal_separator:",",name:"Syria Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},TaiwanNewDollar:{code:"TWD",countries:[t.Taiwan],decimal_digits:2,decimal_separator:",",name:"Taiwan New Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"NT$",symbol_native:"NT$",symbol_placement:"before",thousands_separator:"."},TajikistanSomoni:{code:"TJS",countries:[t.Tajikistan],decimal_digits:2,decimal_separator:",",name:"Tajikistan Somoni",negative_sign:"-",positive_sign:"",rounding:0,symbol:"TJS",symbol_native:"TJS",symbol_placement:"before",thousands_separator:"."},TanzaniaShilling:{code:"TZS",countries:[t.Tanzania],decimal_digits:2,decimal_separator:",",name:"Tanzania Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"TSh",symbol_native:"TSh",symbol_placement:"before",thousands_separator:"."},ThailandBaht:{code:"THB",countries:[t.Thailand],decimal_digits:2,decimal_separator:",",name:"Thailand Baht",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0E3F",symbol_native:"\u0E3F",symbol_placement:"before",thousands_separator:"."},TunisiaDinar:{code:"TND",countries:[t.Tunisia],decimal_digits:3,decimal_separator:",",name:"Tunisia Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u062F.\u062A",symbol_native:"\u062F.\u062A",symbol_placement:"before",thousands_separator:"."},TurkeyLira:{code:"TRY",countries:[t.Turkey],decimal_digits:2,decimal_separator:",",name:"Turkey Lira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20BA",symbol_native:"\u20BA",symbol_placement:"before",thousands_separator:"."},TurkmenistanManat:{code:"TMT",countries:[t.Turkmenistan],decimal_digits:2,decimal_separator:",",name:"Turkmenistan Manat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"m",symbol_native:"m",symbol_placement:"before",thousands_separator:"."},UgandaShilling:{code:"UGX",countries:[t.Uganda],decimal_digits:0,decimal_separator:",",name:"Uganda Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"USh",symbol_native:"USh",symbol_placement:"before",thousands_separator:"."},UkraineHryvnia:{code:"UAH",countries:[t.Ukraine],decimal_digits:2,decimal_separator:",",name:"Ukraine Hryvnia",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B4",symbol_native:"\u20B4",symbol_placement:"before",thousands_separator:"."},UnitedArabEmiratesDirham:{code:"AED",countries:[t.UnitedArabEmirates],decimal_digits:2,decimal_separator:",",name:"United Arab Emirates Dirham",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u062F.\u0625",symbol_native:"\u062F.\u0625",symbol_placement:"before",thousands_separator:"."},UnitedKingdomPound:{code:"GBP",countries:[t.UnitedKingdom],decimal_digits:2,decimal_separator:",",name:"United Kingdom Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},UnitedStatesDollar:{code:"USD",countries:[t.UnitedStates],decimal_digits:2,decimal_separator:",",name:"United States Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},UruguayPeso:{code:"UYU",countries:[t.Uruguay],decimal_digits:2,decimal_separator:",",name:"Uruguay Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$U",symbol_native:"$U",symbol_placement:"before",thousands_separator:"."},UzbekistanSom:{code:"UZS",countries:[t.Uzbekistan],decimal_digits:2,decimal_separator:",",name:"Uzbekistan Som",negative_sign:"-",positive_sign:"",rounding:0,symbol:"UZS",symbol_native:"UZS",symbol_placement:"before",thousands_separator:"."},VanuatuVatu:{code:"VUV",countries:[t.Vanuatu],decimal_digits:0,decimal_separator:",",name:"Vanuatu Vatu",negative_sign:"-",positive_sign:"",rounding:0,symbol:"VT",symbol_native:"VT",symbol_placement:"before",thousands_separator:"."},VenezuelaBolivar:{code:"VEF",countries:[t.Venezuela],decimal_digits:2,decimal_separator:",",name:"Venezuela Bolivar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Bs. F",symbol_native:"Bs. F",symbol_placement:"before",thousands_separator:"."},VietnamDong:{code:"VND",countries:[t.Vietnam],decimal_digits:0,decimal_separator:",",name:"Vietnam Dong",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AB",symbol_native:"\u20AB",symbol_placement:"before",thousands_separator:"."},YemenRial:{code:"YER",countries:[t.Yemen],decimal_digits:2,decimal_separator:",",name:"Yemen Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},ZambiaKwacha:{code:"ZMW",countries:[t.Zambia],decimal_digits:2,decimal_separator:",",name:"Zambia Kwacha",negative_sign:"-",positive_sign:"",rounding:0,symbol:"ZK",symbol_native:"ZK",symbol_placement:"before",thousands_separator:"."},ZimbabweDollar:{code:"ZWL",countries:[t.Zimbabwe],decimal_digits:2,decimal_separator:",",name:"Zimbabwe Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AB",symbol_native:"\u20AB",symbol_placement:"before",thousands_separator:"."}};var o=(a=>(a.Afrikaans="af",a.Albanian="sq",a.Amharic="am",a.Arabic="ar",a.Armenian="hy",a.Azerbaijani="az",a.Bashkir="ba",a.Basque="eu",a.Belarusian="be",a.Bengali="bn",a.Berber="ber",a.Bhutani="dz",a.Bihari="bh",a.Bislama="bi",a.Bosnian="bs",a.Breten="br",a.Bulgarian="bg",a.Burmese="my",a.Cantonese="yue",a.Catalan="ca",a.Chinese="zh",a.Chuvash="cv",a.Corsican="co",a.Croatian="hr",a.Czech="cs",a.Danish="da",a.Dari="prs",a.Divehi="dv",a.Dutch="nl",a.English="en",a.Esperanto="eo",a.Estonian="et",a.Faroese="fo",a.Farsi="fa",a.Filipino="fil",a.Finnish="fi",a.French="fr",a.Frisian="fy",a.Galician="gl",a.Georgian="ka",a.German="de",a.Greek="el",a.Greenlandic="kl",a.Gujarati="gu",a.Haitian="ht",a.Hausa="ha",a.Hebrew="he",a.Hindi="hi",a.Hungarian="hu",a.Icelandic="is",a.Igbo="ig",a.Indonesian="id",a.Irish="ga",a.Italian="it",a.Japanese="ja",a.Javanese="jv",a.Kannada="kn",a.Karelian="krl",a.Kazakh="kk",a.Khmer="km",a.Komi="kv",a.Konkani="kok",a.Korean="ko",a.Kurdish="ku",a.Kyrgyz="ky",a.Lao="lo",a.Latin="la",a.Latvian="lv",a.Lithuanian="lt",a.Luxembourgish="lb",a.Ossetian="os",a.Macedonian="mk",a.Malagasy="mg",a.Malay="ms",a.Malayalam="ml",a.Maltese="mt",a.Maori="mi",a.Marathi="mr",a.Mari="mhr",a.Mongolian="mn",a.Montenegrin="me",a.Nepali="ne",a.NorthernSotho="nso",a.Norwegian="no",a.NorwegianBokmal="nb",a.NorwegianNynorsk="nn",a.Oriya="or",a.Pashto="ps",a.Persian="fa",a.Polish="pl",a.Portuguese="pt",a.Punjabi="pa",a.Quechua="qu",a.Romanian="ro",a.Russian="ru",a.Sakha="sah",a.Sami="se",a.Samoan="sm",a.Sanskrit="sa",a.Scots="gd",a.Serbian="sr",a.SerbianCyrillic="sr-Cyrl",a.Sesotho="st",a.Shona="sn",a.Sindhi="sd",a.Sinhala="si",a.Slovak="sk",a.Slovenian="sl",a.Somali="so",a.Spanish="es",a.Sudanese="su",a.Sutu="sx",a.Swahili="sw",a.Swedish="sv",a.Syriac="syr",a.Tagalog="tl",a.Tajik="tg",a.Tamazight="tmh",a.Tamil="ta",a.Tatar="tt",a.Telugu="te",a.Thai="th",a.Tibetan="bo",a.Tsonga="ts",a.Tswana="tn",a.Turkish="tr",a.Turkmen="tk",a.Ukrainian="uk",a.Urdu="ur",a.Uzbek="uz",a.Vietnamese="vi",a.Welsh="cy",a.Xhosa="xh",a.Yiddish="yi",a.Yoruba="yo",a.Zulu="zu",a))(o||{}),e=(a=>(a.Afrikaans="af",a.AfrikaansSouthAfrica="af-ZA",a.Albanian="sq",a.AlbanianAlbania="sq-AL",a.Amharic="am",a.AmharicEthiopia="am-ET",a.Arabic="ar",a.ArabicAlgeria="ar-DZ",a.ArabicBahrain="ar-BH",a.ArabicEgypt="ar-EG",a.ArabicIraq="ar-IQ",a.ArabicJordan="ar-JO",a.ArabicKuwait="ar-KW",a.ArabicLebanon="ar-LB",a.ArabicLibya="ar-LY",a.ArabicMorocco="ar-MA",a.ArabicOman="ar-OM",a.ArabicQatar="ar-QA",a.ArabicSaudiArabia="ar-SA",a.ArabicSyria="ar-SY",a.ArabicTunisia="ar-TN",a.ArabicUnitedArabEmirates="ar-AE",a.ArabicYemen="ar-YE",a.Armenian="hy",a.ArmenianArmenia="hy-AM",a.Azerbaijani="az",a.AzerbaijaniAzerbaijan="az-AZ",a.AzerbaijaniCyrillicAzerbaijan="az-Cyrl-AZ",a.Bashkir="ba",a.Basque="eu",a.BasqueSpain="eu-ES",a.Belarusian="be",a.BelarusianBelarus="be-BY",a.Bengali="bn",a.BengaliBangladesh="bn-BD",a.BengaliIndia="bn-IN",a.Berber="ber",a.Bhutani="dz",a.BhutaniBhutan="dz-BT",a.Bosnian="bs",a.BosnianBosniaAndHerzegovina="bs-BA",a.Breton="br",a.Bulgarian="bg",a.BulgarianBosniaAndHerzegovina="bg-BG",a.BulgarianBulgaria="bg-BG",a.Burmese="my",a.BurmeseMyanmar="my-MM",a.Cantonese="yue",a.CantoneseHongKong="yue-HK",a.Catalan="ca",a.CatalanSpain="ca-ES",a.Chechen="ce",a.Cherokee="chr",a.Chinese="zh",a.ChineseSimplified="zh-Hans",a.ChineseSimplifiedChina="zh-Hans-CN",a.ChineseSimplifiedHongKong="zh-Hans-HK",a.ChineseSimplifiedMacau="zh-Hans-MO",a.ChineseSimplifiedSingapore="zh-Hans-SG",a.ChineseTraditional="zh-Hant",a.ChineseTraditionalHongKong="zh-Hant-HK",a.ChineseTraditionalMacau="zh-Hant-MO",a.ChineseTraditionalSingapore="zh-Hant-SG",a.ChineseTraditionalTaiwan="zh-Hant-TW",a.Chuvash="cv",a.CorsicanFrance="co-FR",a.Croatian="hr",a.CroatianBosniaAndHerzegovina="hr-BA",a.CroatianCroatia="hr-HR",a.Czech="cs",a.CzechCzechRepublic="cs-CZ",a.Danish="da",a.DanishDenmark="da-DK",a.Dari="prs",a.DariAfghanistan="prs-AF",a.Divehi="dv",a.DivehiMaldives="dv-MV",a.Dutch="nl",a.DutchBelgium="nl-BE",a.DutchNetherlands="nl-NL",a.English="en",a.EnglishAustralia="en-AU",a.EnglishBelgium="en-BE",a.EnglishBelize="en-BZ",a.EnglishCanada="en-CA",a.EnglishCaribbean="en-029",a.EnglishIreland="en-IE",a.EnglishJamaica="en-JM",a.EnglishNewZealand="en-NZ",a.EnglishPhilippines="en-PH",a.EnglishSingapore="en-SG",a.EnglishSouthAfrica="en-ZA",a.EnglishTrinidadAndTobago="en-TT",a.EnglishUnitedKingdom="en-GB",a.EnglishUnitedStates="en-US",a.EnglishZimbabwe="en-ZW",a.Esperanto="eo",a.Estonian="et",a.EstonianEstonia="et-EE",a.Faroese="fo",a.FaroeseFaroeIslands="fo-FO",a.Farsi="fa",a.FarsiIran="fa-IR",a.Filipino="fil",a.FilipinoPhilippines="fil-PH",a.Finnish="fi",a.FinnishFinland="fi-FI",a.French="fr",a.FrenchBelgium="fr-BE",a.FrenchCanada="fr-CA",a.FrenchFrance="fr-FR",a.FrenchLuxembourg="fr-LU",a.FrenchMonaco="fr-MC",a.FrenchReunion="fr-RE",a.FrenchSwitzerland="fr-CH",a.Frisian="fy",a.FrisianNetherlands="fy-NL",a.Galician="gl",a.GalicianSpain="gl-ES",a.Georgian="ka",a.GeorgianGeorgia="ka-GE",a.German="de",a.GermanAustria="de-AT",a.GermanBelgium="de-BE",a.GermanGermany="de-DE",a.GermanLiechtenstein="de-LI",a.GermanLuxembourg="de-LU",a.GermanSwitzerland="de-CH",a.Greenlandic="kl",a.GreenlandicGreenland="kl-GL",a.Greek="el",a.GreekGreece="el-GR",a.Gujarati="gu",a.GujaratiIndia="gu-IN",a.Haitian="ht",a.Hausa="ha",a.HausaGhana="ha-GH",a.HausaNiger="ha-NE",a.HausaNigeria="ha-NG",a.Hebrew="he",a.HebrewIsrael="he-IL",a.Hindi="hi",a.HindiIndia="hi-IN",a.Hungarian="hu",a.HungarianHungary="hu-HU",a.Icelandic="is",a.IcelandicIceland="is-IS",a.Igbo="ig",a.IgboNigeria="ig-NG",a.Indonesian="id",a.IndonesianIndonesia="id-ID",a.Irish="ga",a.IrishIreland="ga-IE",a.Italian="it",a.ItalianItaly="it-IT",a.ItalianSwitzerland="it-CH",a.Japanese="ja",a.JapaneseJapan="ja-JP",a.Javanese="jv",a.Kannada="kn",a.KannadaIndia="kn-IN",a.Karelian="krl",a.Kazakh="kk",a.KazakhKazakhstan="kk-KZ",a.Khmer="km",a.KhmerCambodia="km-KH",a.KinyarwandaRwanda="rw-RW",a.Komi="kv",a.Konkani="kok",a.KonkaniIndia="kok-IN",a.Korean="ko",a.KoreanSouthKorea="ko-KR",a.Kurdish="ku",a.KurdishIraq="ku-IQ",a.KurdishTurkey="ku-TR",a.Kyrgyz="ky",a.KyrgyzKyrgyzstan="ky-KG",a.Lao="lo",a.LaoLaos="lo-LA",a.Latin="la",a.Latvian="lv",a.LatvianLatvia="lv-LV",a.Lithuanian="lt",a.LithuanianLithuania="lt-LT",a.Luxembourgish="lb",a.LuxembourgishBelgium="lb-LU",a.LuxembourgishLuxembourg="lb-LU",a.Macedonian="mk",a.MacedonianNorthMacedonia="mk-MK",a.Malagasy="mg",a.Malay="ms",a.MalayBrunei="ms-BN",a.MalayIndia="ms-IN",a.MalayMalaysia="ms-MY",a.MalaySingapore="ms-SG",a.Malayalam="ml",a.MalayalamIndia="ml-IN",a.Maltese="mt",a.MalteseMalta="mt-MT",a.Maori="mi",a.MaoriNewZealand="mi-NZ",a.Marathi="mr",a.MarathiIndia="mr-IN",a.Mari="chm",a.Mongolian="mn",a.MongolianMongolia="mn-MN",a.Montenegrin="me",a.MontenegrinMontenegro="me-ME",a.Nepali="ne",a.NepaliNepal="ne-NP",a.NorthernSotho="ns",a.NorthernSothoSouthAfrica="ns-ZA",a.Norwegian="nb",a.NorwegianBokmalNorway="nb-NO",a.NorwegianNynorskNorway="nn-NO",a.Oriya="or",a.OriyaIndia="or-IN",a.Ossetian="os",a.Pashto="ps",a.PashtoAfghanistan="ps-AF",a.Persian="fa",a.PersianIran="fa-IR",a.Polish="pl",a.PolishPoland="pl-PL",a.Portuguese="pt",a.PortugueseBrazil="pt-BR",a.PortuguesePortugal="pt-PT",a.Punjabi="pa",a.PunjabiIndia="pa-IN",a.PunjabiPakistan="pa-PK",a.Quechua="qu",a.QuechuaBolivia="qu-BO",a.QuechuaEcuador="qu-EC",a.QuechuaPeru="qu-PE",a.Romanian="ro",a.RomanianRomania="ro-RO",a.Russian="ru",a.RussianKazakhstan="ru-KZ",a.RussianKyrgyzstan="ru-KG",a.RussianRussia="ru-RU",a.RussianUkraine="ru-UA",a.Sakha="sah",a.Sanskrit="sa",a.SanskritIndia="sa-IN",a.Sami="se",a.SamiNorway="se-NO",a.SamiSweden="se-SE",a.SamiFinland="se-FI",a.Samoan="sm",a.SamoanSamoa="sm-WS",a.Scots="gd",a.Serbian="sr",a.SerbianBosniaAndHerzegovina="sr-BA",a.SerbianSerbiaAndMontenegro="sr-SP",a.SerbianCyrillic="sr-SP-Cyrl",a.SerbianCyrillicBosniaAndHerzegovina="sr-Cyrl-BA",a.SerbianCyrillicSerbiaAndMontenegro="sr-Cyrl-SP",a.Sesotho="st",a.SesothoSouthAfrica="st-ZA",a.Shona="sn",a.ShonaZimbabwe="sn-ZW",a.Sindhi="sd",a.SindhiPakistan="sd-PK",a.Sinhala="si",a.SinhalaSriLanka="si-LK",a.Slovak="sk",a.SlovakSlovakia="sk-SK",a.Slovenian="sl",a.SlovenianSlovenia="sl-SI",a.Somali="so",a.SomaliSomalia="so-SO",a.Spanish="es",a.SpanishArgentina="es-AR",a.SpanishBolivia="es-BO",a.SpanishChile="es-CL",a.SpanishColombia="es-CO",a.SpanishCostaRica="es-CR",a.SpanishCuba="es-CU",a.SpanishDominicanRepublic="es-DO",a.SpanishEcuador="es-EC",a.SpanishEquatorialGuinea="es-GQ",a.SpanishElSalvador="es-SV",a.SpanishGuatemala="es-GT",a.SpanishHonduras="es-HN",a.SpanishMexico="es-MX",a.SpanishNicaragua="es-NI",a.SpanishPanama="es-PA",a.SpanishParaguay="es-PY",a.SpanishPeru="es-PE",a.SpanishPuertoRico="es-PR",a.SpanishSpain="es-ES",a.SpanishUnitedStates="es-US",a.SpanishUruguay="es-UY",a.SpanishVenezuela="es-VE",a.Sudanese="su",a.Sutu="st",a.SutuSouthAfrica="st-ZA",a.Swahili="sw",a.SwahiliKenya="sw-KE",a.Swedish="sv",a.SwedishFinland="sv-FI",a.SwedishSweden="sv-SE",a.Syriac="syr",a.SyriacSyria="syr-SY",a.Tajik="tg",a.TajikTajikistan="tg-TJ",a.Tagalog="tl",a.TagalogPhilippines="tl-PH",a.Tamazight="tmh",a.Tamil="ta",a.TamilIndia="ta-IN",a.Tatar="tt",a.Telugu="te",a.TeluguIndia="te-IN",a.Thai="th",a.ThaiThailand="th-TH",a.Tibetan="bo",a.TibetanBhutan="bo-BT",a.TibetanChina="bo-CN",a.TibetanIndia="bo-IN",a.Tsonga="ts",a.Tswana="tn",a.TswanaSouthAfrica="tn-ZA",a.Turkish="tr",a.TurkishTurkey="tr-TR",a.Turkmen="tk",a.Ukrainian="uk",a.UkrainianUkraine="uk-UA",a.Urdu="ur",a.UrduAfghanistan="ur-AF",a.UrduIndia="ur-IN",a.UrduPakistan="ur-PK",a.Uzbek="uz",a.UzbekCyrillic="uz-Cyrl-UZ",a.UzbekLatin="uz-Latn-UZ",a.UzbekUzbekistan="uz-UZ",a.Vietnamese="vi",a.VietnameseVietnam="vi-VN",a.Welsh="cy",a.WelshUnitedKingdom="cy-GB",a.Xhosa="xh",a.XhosaSouthAfrica="xh-ZA",a.Yiddish="yi",a.Yoruba="yo",a.YorubaNigeria="yo-NG",a.ZhuyinMandarinChina="yue-Hant-CN",a.Zulu="zu",a.ZuluSouthAfrica="zu-ZA",a))(e||{}),r=(a=>(a.AfricaAbidjan="Africa/Abidjan",a.AfricaAccra="Africa/Accra",a.AfricaAddisAbaba="Africa/Addis_Ababa",a.AfricaAlgiers="Africa/Algiers",a.AfricaAsmara="Africa/Asmara",a.AfricaBamako="Africa/Bamako",a.AfricaBangui="Africa/Bangui",a.AfricaBanjul="Africa/Banjul",a.AfricaBissau="Africa/Bissau",a.AfricaBlantyre="Africa/Blantyre",a.AfricaBrazzaville="Africa/Brazzaville",a.AfricaBujumbura="Africa/Bujumbura",a.AfricaCairo="Africa/Cairo",a.AfricaCasablanca="Africa/Casablanca",a.AfricaCeuta="Africa/Ceuta",a.AfricaConakry="Africa/Conakry",a.AfricaDakar="Africa/Dakar",a.AfricaDarEsSalaam="Africa/Dar_es_Salaam",a.AfricaDjibouti="Africa/Djibouti",a.AfricaDouala="Africa/Douala",a.AfricaElAaiun="Africa/El_Aaiun",a.AfricaFreetown="Africa/Freetown",a.AfricaGaborone="Africa/Gaborone",a.AfricaHarare="Africa/Harare",a.AfricaJohannesburg="Africa/Johannesburg",a.AfricaJuba="Africa/Juba",a.AfricaKampala="Africa/Kampala",a.AfricaKhartoum="Africa/Khartoum",a.AfricaKigali="Africa/Kigali",a.AfricaKinshasa="Africa/Kinshasa",a.AfricaLagos="Africa/Lagos",a.AfricaLibreville="Africa/Libreville",a.AfricaLome="Africa/Lome",a.AfricaLuanda="Africa/Luanda",a.AfricaLubumbashi="Africa/Lubumbashi",a.AfricaLusaka="Africa/Lusaka",a.AfricaMalabo="Africa/Malabo",a.AfricaMaputo="Africa/Maputo",a.AfricaMaseru="Africa/Maseru",a.AfricaMbabane="Africa/Mbabane",a.AfricaMogadishu="Africa/Mogadishu",a.AfricaMonrovia="Africa/Monrovia",a.AfricaNairobi="Africa/Nairobi",a.AfricaNdjamena="Africa/Ndjamena",a.AfricaNiamey="Africa/Niamey",a.AfricaNouakchott="Africa/Nouakchott",a.AfricaOuagadougou="Africa/Ouagadougou",a.AfricaPortoNovo="Africa/Porto-Novo",a.AfricaSaoTome="Africa/Sao_Tome",a.AfricaTripoli="Africa/Tripoli",a.AfricaTunis="Africa/Tunis",a.AfricaWindhoek="Africa/Windhoek",a.AmericaAdak="America/Adak",a.AmericaAnchorage="America/Anchorage",a.AmericaAnguilla="America/Anguilla",a.AmericaAntigua="America/Antigua",a.AmericaAraguaina="America/Araguaina",a.AmericaArgentinaBuenosAires="America/Argentina/Buenos_Aires",a.AmericaArgentinaCatamarca="America/Argentina/Catamarca",a.AmericaArgentinaCordoba="America/Argentina/Cordoba",a.AmericaArgentinaJujuy="America/Argentina/Jujuy",a.AmericaArgentinaLaRioja="America/Argentina/La_Rioja",a.AmericaArgentinaMendoza="America/Argentina/Mendoza",a.AmericaArgentinaRioGallegos="America/Argentina/Rio_Gallegos",a.AmericaArgentinaSalta="America/Argentina/Salta",a.AmericaArgentinaSanJuan="America/Argentina/San_Juan",a.AmericaArgentinaSanLuis="America/Argentina/San_Luis",a.AmericaArgentinaTucuman="America/Argentina/Tucuman",a.AmericaArgentinaUshuaia="America/Argentina/Ushuaia",a.AmericaAruba="America/Aruba",a.AmericaAsuncion="America/Asuncion",a.AmericaAtikokan="America/Atikokan",a.AmericaAtka="America/Atka",a.AmericaBahia="America/Bahia",a.AmericaBahiaBanderas="America/Bahia_Banderas",a.AmericaBarbados="America/Barbados",a.AmericaBelem="America/Belem",a.AmericaBelize="America/Belize",a.AmericaBlancSablon="America/Blanc-Sablon",a.AmericaBoaVista="America/Boa_Vista",a.AmericaBogota="America/Bogota",a.AmericaBoise="America/Boise",a.AmericaCambridgeBay="America/Cambridge_Bay",a.AmericaCampoGrande="America/Campo_Grande",a.AmericaCancun="America/Cancun",a.AmericaCaracas="America/Caracas",a.AmericaCayenne="America/Cayenne",a.AmericaCayman="America/Cayman",a.AmericaChicago="America/Chicago",a.AmericaChihuahua="America/Chihuahua",a.AmericaCoralHarbour="America/Coral_Harbour",a.AmericaCordoba="America/Cordoba",a.AmericaCostaRica="America/Costa_Rica",a.AmericaCreston="America/Creston",a.AmericaCuiaba="America/Cuiaba",a.AmericaCuracao="America/Curacao",a.AmericaDanmarkshavn="America/Danmarkshavn",a.AmericaDawson="America/Dawson",a.AmericaDawsonCreek="America/Dawson_Creek",a.AmericaDenver="America/Denver",a.AmericaDetroit="America/Detroit",a.AmericaDominica="America/Dominica",a.AmericaEdmonton="America/Edmonton",a.AmericaEirunepe="America/Eirunepe",a.AmericaElSalvador="America/El_Salvador",a.AmericaFortaleza="America/Fortaleza",a.AmericaGlaceBay="America/Glace_Bay",a.AmericaGodthab="America/Godthab",a.AmericaGooseBay="America/Goose_Bay",a.AmericaGrandTurk="America/Grand_Turk",a.AmericaGrenada="America/Grenada",a.AmericaGuadeloupe="America/Guadeloupe",a.AmericaGuatemala="America/Guatemala",a.AmericaGuayaquil="America/Guayaquil",a.AmericaGuyana="America/Guyana",a.AmericaHalifax="America/Halifax",a.AmericaHavana="America/Havana",a.AmericaHermosillo="America/Hermosillo",a.AmericaIndianaIndianapolis="America/Indiana/Indianapolis",a.AmericaIndianaKnox="America/Indiana/Knox",a.AmericaIndianaMarengo="America/Indiana/Marengo",a.AmericaIndianaPetersburg="America/Indiana/Petersburg",a.AmericaIndianaTellCity="America/Indiana/Tell_City",a.AmericaIndianaVevay="America/Indiana/Vevay",a.AmericaIndianaVincennes="America/Indiana/Vincennes",a.AmericaIndianaWinamac="America/Indiana/Winamac",a.AmericaInuvik="America/Inuvik",a.AmericaIqaluit="America/Iqaluit",a.AmericaJamaica="America/Jamaica",a.AmericaJuneau="America/Juneau",a.AmericaKentuckyLouisville="America/Kentucky/Louisville",a.AmericaKentuckyMonticello="America/Kentucky/Monticello",a.AmericaKralendijk="America/Kralendijk",a.AmericaLaPaz="America/La_Paz",a.AmericaLima="America/Lima",a.AmericaLosAngeles="America/Los_Angeles",a.AmericaLouisville="America/Louisville",a.AmericaLowerPrinces="America/Lower_Princes",a.AmericaMaceio="America/Maceio",a.AmericaManagua="America/Managua",a.AmericaManaus="America/Manaus",a.AmericaMarigot="America/Marigot",a.AmericaMartinique="America/Martinique",a.AmericaMatamoros="America/Matamoros",a.AmericaMazatlan="America/Mazatlan",a.AmericaMenominee="America/Menominee",a.AmericaMerida="America/Merida",a.AmericaMetlakatla="America/Metlakatla",a.AmericaMexicoCity="America/Mexico_City",a.AmericaMiquelon="America/Miquelon",a.AmericaMoncton="America/Moncton",a.AmericaMonterrey="America/Monterrey",a.AmericaMontevideo="America/Montevideo",a.AmericaMontserrat="America/Montserrat",a.AmericaMontreal="America/Montreal",a.AmericaNassau="America/Nassau",a.AmericaNewYork="America/New_York",a.AmericaNipigon="America/Nipigon",a.AmericaNome="America/Nome",a.AmericaNoronha="America/Noronha",a.AmericaNorthDakotaBeulah="America/North_Dakota/Beulah",a.AmericaNorthDakotaCenter="America/North_Dakota/Center",a.AmericaNorthDakotaNewSalem="America/North_Dakota/New_Salem",a.AmericaOjinaga="America/Ojinaga",a.AmericaPanama="America/Panama",a.AmericaPangnirtung="America/Pangnirtung",a.AmericaParamaribo="America/Paramaribo",a.AmericaPhoenix="America/Phoenix",a.AmericaPortAuPrince="America/Port-au-Prince",a.AmericaPortOfSpain="America/Port_of_Spain",a.AmericaPortoVelho="America/Porto_Velho",a.AmericaPuertoRico="America/Puerto_Rico",a.AmericaRainyRiver="America/Rainy_River",a.AmericaRankinInlet="America/Rankin_Inlet",a.AmericaRecife="America/Recife",a.AmericaRegina="America/Regina",a.AmericaResolute="America/Resolute",a.AmericaRioBranco="America/Rio_Branco",a.AmericaSantaIsabel="America/Santa_Isabel",a.AmericaSantarem="America/Santarem",a.AmericaSantiago="America/Santiago",a.AmericaSantoDomingo="America/Santo_Domingo",a.AmericaSaoPaulo="America/Sao_Paulo",a.AmericaScoresbysund="America/Scoresbysund",a.AmericaShiprock="America/Shiprock",a.AmericaSitka="America/Sitka",a.AmericaStBarthelemy="America/St_Barthelemy",a.AmericaStJohns="America/St_Johns",a.AmericaStKitts="America/St_Kitts",a.AmericaStLucia="America/St_Lucia",a.AmericaStThomas="America/St_Thomas",a.AmericaStVincent="America/St_Vincent",a.AmericaSwiftCurrent="America/Swift_Current",a.AmericaTegucigalpa="America/Tegucigalpa",a.AmericaThule="America/Thule",a.AmericaThunderBay="America/Thunder_Bay",a.AmericaTijuana="America/Tijuana",a.AmericaToronto="America/Toronto",a.AmericaTortola="America/Tortola",a.AmericaVancouver="America/Vancouver",a.AmericaWhitehorse="America/Whitehorse",a.AmericaWinnipeg="America/Winnipeg",a.AmericaYakutat="America/Yakutat",a.AmericaYellowknife="America/Yellowknife",a.AntarcticaCasey="Antarctica/Casey",a.AntarcticaDavis="Antarctica/Davis",a.AntarcticaDumontDUrville="Antarctica/DumontDUrville",a.AntarcticaMacquarie="Antarctica/Macquarie",a.AntarcticaMawson="Antarctica/Mawson",a.AntarcticaMcMurdo="Antarctica/McMurdo",a.AntarcticaPalmer="Antarctica/Palmer",a.AntarcticaRothera="Antarctica/Rothera",a.AntarcticaSyowa="Antarctica/Syowa",a.AntarcticaTroll="Antarctica/Troll",a.AntarcticaVostok="Antarctica/Vostok",a.ArcticLongyearbyen="Arctic/Longyearbyen",a.AsiaAden="Asia/Aden",a.AsiaAlmaty="Asia/Almaty",a.AsiaAmman="Asia/Amman",a.AsiaAnadyr="Asia/Anadyr",a.AsiaAqtau="Asia/Aqtau",a.AsiaAqtobe="Asia/Aqtobe",a.AsiaAshgabat="Asia/Ashgabat",a.AsiaBaghdad="Asia/Baghdad",a.AsiaBahrain="Asia/Bahrain",a.AsiaBaku="Asia/Baku",a.AsiaBangkok="Asia/Bangkok",a.AsiaBarnaul="Asia/Barnaul",a.AsiaBeirut="Asia/Beirut",a.AsiaBishkek="Asia/Bishkek",a.AsiaBrunei="Asia/Brunei",a.AsiaChita="Asia/Chita",a.AsiaChoibalsan="Asia/Choibalsan",a.AsiaColombo="Asia/Colombo",a.AsiaDamascus="Asia/Damascus",a.AsiaDhaka="Asia/Dhaka",a.AsiaDili="Asia/Dili",a.AsiaDubai="Asia/Dubai",a.AsiaDushanbe="Asia/Dushanbe",a.AsiaFamagusta="Asia/Famagusta",a.AsiaGaza="Asia/Gaza",a.AsiaHebron="Asia/Hebron",a.AsiaHoChiMinh="Asia/Ho_Chi_Minh",a.AsiaHongKong="Asia/Hong_Kong",a.AsiaHovd="Asia/Hovd",a.AsiaIrkutsk="Asia/Irkutsk",a.AsiaJakarta="Asia/Jakarta",a.AsiaJayapura="Asia/Jayapura",a.AsiaJerusalem="Asia/Jerusalem",a.AsiaKabul="Asia/Kabul",a.AsiaKamchatka="Asia/Kamchatka",a.AsiaKarachi="Asia/Karachi",a.AsiaKathmandu="Asia/Kathmandu",a.AsiaKhandyga="Asia/Khandyga",a.AsiaKolkata="Asia/Kolkata",a.AsiaKrasnoyarsk="Asia/Krasnoyarsk",a.AsiaKualaLumpur="Asia/Kuala_Lumpur",a.AsiaKuching="Asia/Kuching",a.AsiaKuwait="Asia/Kuwait",a.AsiaMacau="Asia/Macau",a.AsiaMagadan="Asia/Magadan",a.AsiaMakassar="Asia/Makassar",a.AsiaManila="Asia/Manila",a.AsiaMuscat="Asia/Muscat",a.AsiaNicosia="Asia/Nicosia",a.AsiaNovokuznetsk="Asia/Novokuznetsk",a.AsiaNovosibirsk="Asia/Novosibirsk",a.AsiaOmsk="Asia/Omsk",a.AsiaOral="Asia/Oral",a.AsiaPhnomPenh="Asia/Phnom_Penh",a.AsiaPontianak="Asia/Pontianak",a.AsiaPyongyang="Asia/Pyongyang",a.AsiaQatar="Asia/Qatar",a.AsiaQyzylorda="Asia/Qyzylorda",a.AsiaRangoon="Asia/Rangoon",a.AsiaRiyadh="Asia/Riyadh",a.AsiaSakhalin="Asia/Sakhalin",a.AsiaSamarkand="Asia/Samarkand",a.AsiaSeoul="Asia/Seoul",a.AsiaShanghai="Asia/Shanghai",a.AsiaSingapore="Asia/Singapore",a.AsiaSrednekolymsk="Asia/Srednekolymsk",a.AsiaTaipei="Asia/Taipei",a.AsiaTashkent="Asia/Tashkent",a.AsiaTbilisi="Asia/Tbilisi",a.AsiaTehran="Asia/Tehran",a.AsiaThimphu="Asia/Thimphu",a.AsiaTokyo="Asia/Tokyo",a.AsiaTomsk="Asia/Tomsk",a.AsiaUlaanbaatar="Asia/Ulaanbaatar",a.AsiaUrumqi="Asia/Urumqi",a.AsiaUstNera="Asia/Ust-Nera",a.AsiaVientiane="Asia/Vientiane",a.AsiaVladivostok="Asia/Vladivostok",a.AsiaYakutsk="Asia/Yakutsk",a.AsiaYekaterinburg="Asia/Yekaterinburg",a.AsiaYerevan="Asia/Yerevan",a.AtlanticAzores="Atlantic/Azores",a.AtlanticBermuda="Atlantic/Bermuda",a.AtlanticCanary="Atlantic/Canary",a.AtlanticCapeVerde="Atlantic/Cape_Verde",a.AtlanticFaroe="Atlantic/Faroe",a.AtlanticMadeira="Atlantic/Madeira",a.AtlanticReykjavik="Atlantic/Reykjavik",a.AtlanticSouthGeorgia="Atlantic/South_Georgia",a.AtlanticStHelena="Atlantic/St_Helena",a.AtlanticStanley="Atlantic/Stanley",a.AustraliaAdelaide="Australia/Adelaide",a.AustraliaBrisbane="Australia/Brisbane",a.AustraliaBrokenHill="Australia/Broken_Hill",a.AustraliaCanberra="Australia/Canberra",a.AustraliaCurrie="Australia/Currie",a.AustraliaDarwin="Australia/Darwin",a.AustraliaEucla="Australia/Eucla",a.AustraliaHobart="Australia/Hobart",a.AustraliaLindeman="Australia/Lindeman",a.AustraliaLordHowe="Australia/Lord_Howe",a.AustraliaMelbourne="Australia/Melbourne",a.AustraliaPerth="Australia/Perth",a.AustraliaSydney="Australia/Sydney",a.EuropeAmsterdam="Europe/Amsterdam",a.EuropeAndorra="Europe/Andorra",a.EuropeAthens="Europe/Athens",a.EuropeBelgrade="Europe/Belgrade",a.EuropeBerlin="Europe/Berlin",a.EuropeBratislava="Europe/Bratislava",a.EuropeBrussels="Europe/Brussels",a.EuropeBucharest="Europe/Bucharest",a.EuropeBudapest="Europe/Budapest",a.EuropeBusingen="Europe/Busingen",a.EuropeChisinau="Europe/Chisinau",a.EuropeCopenhagen="Europe/Copenhagen",a.EuropeDublin="Europe/Dublin",a.EuropeGibraltar="Europe/Gibraltar",a.EuropeGuernsey="Europe/Guernsey",a.EuropeHelsinki="Europe/Helsinki",a.EuropeIsleOfMan="Europe/Isle_of_Man",a.EuropeIstanbul="Europe/Istanbul",a.EuropeJersey="Europe/Jersey",a.EuropeKaliningrad="Europe/Kaliningrad",a.EuropeKiev="Europe/Kiev",a.EuropeKirov="Europe/Kirov",a.EuropeLisbon="Europe/Lisbon",a.EuropeLjubljana="Europe/Ljubljana",a.EuropeLondon="Europe/London",a.EuropeLuxembourg="Europe/Luxembourg",a.EuropeMadrid="Europe/Madrid",a.EuropeMalta="Europe/Malta",a.EuropeMariehamn="Europe/Mariehamn",a.EuropeMinsk="Europe/Minsk",a.EuropeMonaco="Europe/Monaco",a.EuropeMoscow="Europe/Moscow",a.EuropeOslo="Europe/Oslo",a.EuropeParis="Europe/Paris",a.EuropePodgorica="Europe/Podgorica",a.EuropePrague="Europe/Prague",a.EuropeRiga="Europe/Riga",a.EuropeRome="Europe/Rome",a.EuropeSamara="Europe/Samara",a.EuropeSanMarino="Europe/San_Marino",a.EuropeSarajevo="Europe/Sarajevo",a.EuropeSimferopol="Europe/Simferopol",a.EuropeSkopje="Europe/Skopje",a.EuropeSofia="Europe/Sofia",a.EuropeStockholm="Europe/Stockholm",a.EuropeTallinn="Europe/Tallinn",a.EuropeTirane="Europe/Tirane",a.EuropeUzhgorod="Europe/Uzhgorod",a.EuropeVaduz="Europe/Vaduz",a.EuropeVatican="Europe/Vatican",a.EuropeVienna="Europe/Vienna",a.EuropeVilnius="Europe/Vilnius",a.EuropeVolgograd="Europe/Volgograd",a.EuropeWarsaw="Europe/Warsaw",a.EuropeZagreb="Europe/Zagreb",a.EuropeZaporozhye="Europe/Zaporozhye",a.EuropeZurich="Europe/Zurich",a.GMT="GMT",a.IndianAntananarivo="Indian/Antananarivo",a.IndianChagos="Indian/Chagos",a.IndianChristmas="Indian/Christmas",a.IndianCocos="Indian/Cocos",a.IndianComoro="Indian/Comoro",a.IndianKerguelen="Indian/Kerguelen",a.IndianMahe="Indian/Mahe",a.IndianMaldives="Indian/Maldives",a.IndianMauritius="Indian/Mauritius",a.IndianMayotte="Indian/Mayotte",a.IndianReunion="Indian/Reunion",a.PacificApia="Pacific/Apia",a.PacificAuckland="Pacific/Auckland",a.PacificBougainville="Pacific/Bougainville",a.PacificChatham="Pacific/Chatham",a.PacificChuuk="Pacific/Chuuk",a.PacificEaster="Pacific/Easter",a.PacificEfate="Pacific/Efate",a.PacificEnderbury="Pacific/Enderbury",a.PacificFakaofo="Pacific/Fakaofo",a.PacificFiji="Pacific/Fiji",a.PacificFunafuti="Pacific/Funafuti",a.PacificGalapagos="Pacific/Galapagos",a.PacificGambier="Pacific/Gambier",a.PacificGuadalcanal="Pacific/Guadalcanal",a.PacificGuam="Pacific/Guam",a.PacificHonolulu="Pacific/Honolulu",a.PacificJohnston="Pacific/Johnston",a.PacificKiritimati="Pacific/Kiritimati",a.PacificKosrae="Pacific/Kosrae",a.PacificKwajalein="Pacific/Kwajalein",a.PacificMajuro="Pacific/Majuro",a.PacificMarquesas="Pacific/Marquesas",a.PacificMidway="Pacific/Midway",a.PacificNauru="Pacific/Nauru",a.PacificNiue="Pacific/Niue",a.PacificNorfolk="Pacific/Norfolk",a.PacificNoumea="Pacific/Noumea",a.PacificPagoPago="Pacific/Pago_Pago",a.PacificPalau="Pacific/Palau",a.PacificPitcairn="Pacific/Pitcairn",a.PacificPohnpei="Pacific/Pohnpei",a.PacificPonape="Pacific/Ponape",a.PacificPortMoresby="Pacific/Port_Moresby",a.PacificRarotonga="Pacific/Rarotonga",a.PacificSaipan="Pacific/Saipan",a.PacificSamoa="Pacific/Samoa",a.PacificTahiti="Pacific/Tahiti",a.PacificTarawa="Pacific/Tarawa",a.PacificTongatapu="Pacific/Tongatapu",a.PacificTruk="Pacific/Truk",a.PacificWake="Pacific/Wake",a.PacificWallis="Pacific/Wallis",a.PacificYap="Pacific/Yap",a))(r||{}),i=(a=>(a.UTC_MINUS_12="UTC-12",a.UTC_MINUS_11_30="UTC-11:30",a.UTC_MINUS_11="UTC-11",a.UTC_MINUS_10_30="UTC-10:30",a.UTC_MINUS_10="UTC-10",a.UTC_MINUS_9_30="UTC-9:30",a.UTC_MINUS_9="UTC-09",a.UTC_MINUS_8_45="UTC-8:45",a.UTC_MINUS_8="UTC-08",a.UTC_MINUS_7="UTC-07",a.UTC_MINUS_6_30="UTC-6:30",a.UTC_MINUS_6="UTC-06",a.UTC_MINUS_5_45="UTC-5:45",a.UTC_MINUS_5_30="UTC-5:30",a.UTC_MINUS_5="UTC-05",a.UTC_MINUS_4_30="UTC-4:30",a.UTC_MINUS_4="UTC-04",a.UTC_MINUS_3_30="UTC-3:30",a.UTC_MINUS_3="UTC-03",a.UTC_MINUS_2_30="UTC-2:30",a.UTC_MINUS_2="UTC-02",a.UTC_MINUS_1="UTC-01",a.UTC_0="UTC+00",a.UTC_PLUS_1="UTC+01",a.UTC_PLUS_2="UTC+02",a.UTC_PLUS_3="UTC+03",a.UTC_PLUS_3_30="UTC+3:30",a.UTC_PLUS_4="UTC+04",a.UTC_PLUS_4_30="UTC+4:30",a.UTC_PLUS_5="UTC+05",a.UTC_PLUS_5_30="UTC+5:30",a.UTC_PLUS_5_45="UTC+5:45",a.UTC_PLUS_6="UTC+06",a.UTC_PLUS_6_30="UTC+6:30",a.UTC_PLUS_7="UTC+07",a.UTC_PLUS_8="UTC+08",a.UTC_PLUS_8_45="UTC+8:45",a.UTC_PLUS_9="UTC+09",a.UTC_PLUS_9_30="UTC+9:30",a.UTC_PLUS_10="UTC+10",a.UTC_PLUS_10_30="UTC+10:30",a.UTC_PLUS_11="UTC+11",a.UTC_PLUS_11_30="UTC+11:30",a.UTC_PLUS_12="UTC+12",a.UTC_PLUS_12_45="UTC+12:45",a.UTC_PLUS_13="UTC+13",a.UTC_PLUS_13_45="UTC+13:45",a.UTC_PLUS_14="UTC+14",a))(i||{}),s=(a=>(a.AcreTime="ACT",a.AfghanistanTime="AFT",a.AIXCentralEuropeanTime="DFT",a.AlaskaDaylightTime="AKDT",a.AlaskaStandardTime="AKST",a.AlmaAtaTime="ALMT",a.AmazonSummerTime="AMST",a.AmazonTime="AMT",a.AnadyrTime="ANAT",a.AqtobeTime="AQTT",a.ArabiaStandardTime="AST",a.ArgentinaTime="ART",a.ArmeniaTime="AMT",a.ASEANCommonTime="ASEAN",a.AtlanticDaylightTime="ADT",a.AtlanticStandardTime="AST",a.AustralianCentralDaylightSavingTime="ACDT",a.AustralianCentralStandardTime="ACST",a.AustralianCentralWesternStandardTime="ACWST",a.AustralianEasternDaylightSavingTime="AEDT",a.AustralianEasternStandardTime="AEST",a.AustralianEasternTime="AET",a.AustralianWesternStandardTime="AWST",a.AzerbaijanTime="AZT",a.AzoresStandardTime="AZOT",a.AzoresSummerTime="AZOST",a.BakerIslandTime="BIT",a.BangladeshStandardTime="BST",a.BhutanTime="BTT",a.BoliviaTime="BOT",a.BougainvilleStandardTime="BST",a.BrasiliaSummerTime="BRST",a.BrasiliaTime="BRT",a.BritishIndianOceanTime="BIOT",a.BritishSummerTime="BST",a.BruneiTime="BNT",a.CapeVerdeTime="CVT",a.CentralAfricaTime="CAT",a.CentralDaylightTime="CDT",a.CentralEuropeanSummerTime="CEST",a.CentralEuropeanTime="CET",a.CentralIndonesiaTime="WITA",a.CentralStandardTime="CST",a.CentralTime="CT",a.CentralWesternStandardTime="CWST",a.ChamorroStandardTime="CHST",a.ChathamDaylightTime="CHADT",a.ChathamStandardTime="CHAST",a.ChileStandardTime="CLT",a.ChileSummerTime="CLST",a.ChinaStandardTime="CST",a.ChoibalsanStandardTime="CHOT",a.ChoibalsanSummerTime="CHOST",a.ChristmasIslandTime="CXT",a.ChuukTime="CHUT",a.ClipptertonIslandStandardTime="CIST",a.CocosIslandsTime="CCT",a.ColombiaSummerTime="COST",a.ColombiaTime="COT",a.CookIslandTime="CKT",a.CoordinatedUniversalTime="UTC",a.CubaDaylightTime="CDT",a.CubaStandardTime="CST",a.DavisTime="DAVT",a.DumontDUrvilleTime="DDUT",a.EastAfricaTime="EAT",a.EasterIslandStandardTime="EAST",a.EasterIslandSummerTime="EASST",a.EasternCaribbeanTime="ECT",a.EasternDaylightTime="EDT",a.EasternEuropeanSummerTime="EEST",a.EasternEuropeanTime="EET",a.EasternGreenlandSummerTime="EGST",a.EasternGreenlandTime="EGT",a.EasternIndonesianTime="WIT",a.EasternStandardTime="EST",a.EasternTime="ET",a.EcuadorTime="ECT",a.FalklandIslandsSummerTime="FKST",a.FalklandIslandsTime="FKT",a.FernandoDeNoronhaTime="FNT",a.FijiTime="FJT",a.FrenchGuianaTime="GFT",a.FrenchSouthernAndAntarcticTime="TFT",a.FurtherEasternEuropeanTime="FET",a.GalapagosTime="GALT",a.GambierIslandTime="GIT",a.GambierIslandsTime="GAMT",a.GeorgiaStandardTime="GET",a.GilbertIslandTime="GILT",a.GreenwichMeanTime="GMT",a.GulfStandardTime="GST",a.GuyanaTime="GYT",a.HawaiiAleutianDaylightTime="HDT",a.HawaiiAleutianStandardTime="HST",a.HeardAndMcDonaldIslandsTime="HMT",a.HeureAvanceeDEuropeCentraleTime="HAEC",a.HongKongTime="HKT",a.HovdSummerTime="HOVST",a.HovdTime="HOVT",a.IndianOceanTime="IOT",a.IndianStandardTime="IST",a.IndochinaTime="ICT",a.InternationalDayLineWestTime="IDLW",a.IranDaylightTime="IRDT",a.IranStandardTime="IRST",a.IrishStandardTime="IST",a.IrkutskSummerTime="IRKST",a.IrkutskTime="IRKT",a.IsraelDaylightTime="IDT",a.IsraelStandardTime="IST",a.JapanStandardTime="JST",a.KaliningradTime="KALT",a.KamchatkaTime="KAMT",a.KoreaStandardTime="KST",a.KosraeTime="KOST",a.KrasnoyarskSummerTime="KRAST",a.KrasnoyarskTime="KRAT",a.KyrgyzstanTime="KGT",a.LineIslandsTime="LINT",a.KazakhstanStandardTime="KAST",a.LordHoweStandardTime="LHST",a.LordHoweSummerTime="LHST",a.MacquarieIslandStationTime="MIST",a.MagadanTime="MAGT",a.MalaysiaStandardTime="MST",a.MalaysiaTime="MYT",a.MaldivesTime="MVT",a.MarquesasIslandsTime="MART",a.MarshallIslandsTime="MHT",a.MauritiusTime="MUT",a.MawsonStationTime="MAWT",a.MiddleEuropeanSummerTime="MEDT",a.MiddleEuropeanTime="MET",a.MoscowTime="MSK",a.MountainDaylightTime="MDT",a.MountainStandardTime="MST",a.MyanmarStandardTime="MMT",a.NepalTime="NCT",a.NauruTime="NRT",a.NewCaledoniaTime="NCT",a.NewZealandDaylightTime="NZDT",a.NewZealandStandardTime="NZST",a.NewfoundlandDaylightTime="NDT",a.NewfoundlandStandardTime="NST",a.NewfoundlandTime="NT",a.NiueTime="NUT",a.NorfolkIslandTime="NFT",a.NovosibirskTime="NOVT",a.OmskTime="OMST",a.OralTime="ORAT",a.PacificDaylightTime="PDT",a.PacificStandardTime="PST",a.PakistanStandardTime="PKT",a.PalauTime="PWT",a.PapuaNewGuineaTime="PGT",a.ParaguaySummerTime="PYST",a.ParaguayTime="PYT",a.PeruTime="PET",a.PhilippineStandardTime="PHST",a.PhilippineTime="PHT",a.PhoenixIslandTime="PHOT",a.PitcairnTime="PST",a.PohnpeiStandardTime="PONT",a.ReunionTime="RET",a.RotheraResearchStationTime="ROTT",a.SaintPierreAndMiquelonDaylightTime="PMDT",a.SaintPierreAndMiquelonStandardTime="PMST",a.SakhalinIslandTime="SAKT",a.SamaraTime="SAMT",a.SamoaDaylightTime="SDT",a.SamoaStandardTime="SST",a.SeychellesTime="SCT",a.ShowaStationTime="SYOT",a.SingaporeStandardTime="SST",a.SingaporeTime="SGT",a.SolomonIslandsTime="SBT",a.SouthAfricanStandardTime="SAST",a.SouthGeorgiaAndTheSouthSandwichIslandsTime="GST",a.SrednekolymskTime="SRET",a.SriLankaStandardTime="SLST",a.SurinameTime="SRT",a.TahitiTime="TAHT",a.TajikistanTime="TJT",a.ThailandStandardTime="THA",a.TimorLesteTime="TLT",a.TokelauTime="TKT",a.TongaTime="TOT",a.TurkeyTime="TRT",a.TurkmenistanTime="TMT",a.TuvaluTime="TVT",a.UlaanbaatarStandardTime="ULAT",a.UlaanbaatarSummerTime="ULAST",a.UruguayStandardTime="UYT",a.UruguaySummerTime="UYST",a.UzbekistanTime="UZT",a.VanuatuTime="VUT",a.VenezuelaStandardTime="VET",a.VladivostokTime="VLAT",a.VolgogradTime="VOLT",a.VostokStationTime="VOST",a.WakeIslandTime="WAKT",a.WestAfricaSummerTime="WAST",a.WestAfricaTime="WAT",a.WestGreenlandSummerTime="WGST",a.WestGreenlandTime="WGT",a.WestKazakhstanTime="WKT",a.WesternEuropeanSummerTime="WEDT",a.WesternEuropeanTime="WET",a.WesternIndonesianTime="WIT",a.WesternStandardTime="WST",a.YakutskTime="YAKT",a.YekaterinburgTime="YEKT",a))(s||{}),_l={dst:{is:!1,uses:!0},id:"ACT",name:"Acre Time",offset:i.UTC_MINUS_5},pl={dst:{is:!1,uses:!0},id:"AFT",name:"Afghanistan Time",offset:i.UTC_PLUS_4_30},El={dst:{is:!1,uses:!0},id:"DFT",name:"AIX Central European Time",offset:i.UTC_PLUS_1},Sl={dst:{is:!0,uses:!0},id:"AKDT",name:"Alaska Daylight Time",offset:i.UTC_MINUS_8},Tl={dst:{is:!1,uses:!0},id:"AKST",name:"Alaska Standard Time",offset:i.UTC_MINUS_9},vl={dst:{is:!1,uses:!0},id:"ALMT",name:"Alma-Ata Time",offset:i.UTC_PLUS_6},bl={dst:{is:!1,uses:!0},id:"AMST",name:"Amazon Summer Time",offset:i.UTC_MINUS_3},Bl={dst:{is:!1,uses:!0},id:"AMT",name:"Amazon Time",offset:i.UTC_MINUS_4},Ul={dst:{is:!1,uses:!0},id:"ANAT",name:"Anadyr Time",offset:i.UTC_PLUS_12},Nl={dst:{is:!1,uses:!0},id:"AQTT",name:"Aqtobe Time",offset:i.UTC_PLUS_5},yl={dst:{is:!1,uses:!0},id:"AST",name:"Arabia Standard Time",offset:i.UTC_PLUS_3},Dl={dst:{is:!1,uses:!0},id:"ART",name:"Argentina Time",offset:i.UTC_MINUS_3},Pl={dst:{is:!1,uses:!0},id:"AMT",name:"Armenia Time",offset:i.UTC_PLUS_4},Fl={dst:{is:!0,uses:!0},id:"ADT",name:"Atlantic Daylight Time",offset:i.UTC_MINUS_3},Ml={dst:{is:!1,uses:!0},id:"AST",name:"Atlantic Standard Time",offset:i.UTC_MINUS_4},kl={dst:{is:!0,uses:!0},id:"ACDT",name:"Australian Central Daylight Saving Time",offset:i.UTC_PLUS_10_30},Ll={dst:{is:!1,uses:!0},id:"ACST",name:"Australian Central Standard Time",offset:i.UTC_PLUS_9_30},wl={dst:{is:!1,uses:!0},id:"ACWST",name:"Australian Central Western Standard Time",offset:i.UTC_PLUS_8_45},Gl={dst:{is:!0,uses:!0},id:"AEDT",name:"Australian Eastern Daylight Saving Time",offset:i.UTC_PLUS_11},xl={dst:{is:!1,uses:!0},id:"AEST",name:"Australian Eastern Standard Time",offset:i.UTC_PLUS_10},Ol={dst:{is:!1,uses:!0},id:"AET",name:"Australian Eastern Time",offset:i.UTC_PLUS_10},ql={dst:{is:!1,uses:!0},id:"AWST",name:"Australian Western Standard Time",offset:i.UTC_PLUS_8},Kl={dst:{is:!1,uses:!0},id:"AZT",name:"Azerbaijan Time",offset:i.UTC_PLUS_4},jl={dst:{is:!1,uses:!0},id:"AZOT",name:"Azores Standard Time",offset:i.UTC_MINUS_1},Hl={dst:{is:!0,uses:!0},id:"AZOST",name:"Azores Summer Time",offset:i.UTC_0},Rl={dst:{is:!1,uses:!0},id:"BIT",name:"Baker Island Time",offset:i.UTC_MINUS_12},Wl={dst:{is:!1,uses:!0},id:"BST",name:"Bangladesh Standard Time",offset:i.UTC_PLUS_6},Vl={dst:{is:!1,uses:!0},id:"BTT",name:"Bhutan Time",offset:i.UTC_PLUS_6},zl={dst:{is:!1,uses:!0},id:"BOT",name:"Bolivia Time",offset:i.UTC_MINUS_4},Yl={dst:{is:!1,uses:!0},id:"BST",name:"Bougainville Standard Time",offset:i.UTC_PLUS_11},Jl={dst:{is:!0,uses:!0},id:"BRST",name:"Brasilia Summer Time",offset:i.UTC_MINUS_2},$l={dst:{is:!1,uses:!0},id:"BRT",name:"Brasilia Time",offset:i.UTC_MINUS_3},Zl={dst:{is:!1,uses:!0},id:"BIOT",name:"British Indian Ocean Time",offset:i.UTC_PLUS_6},Cl={dst:{is:!0,uses:!0},id:"BST",name:"British Summer Time",offset:i.UTC_PLUS_1},Ql={dst:{is:!1,uses:!0},id:"BNT",name:"Brunei Time",offset:i.UTC_PLUS_8},Xl={dst:{is:!1,uses:!0},id:"CVT",name:"Cape Verde Time",offset:i.UTC_MINUS_1},ao={dst:{is:!1,uses:!0},id:"CAT",name:"Central Africa Time",offset:i.UTC_PLUS_2},eo={dst:{is:!0,uses:!0},id:"CDT",name:"Central Daylight Time",offset:i.UTC_MINUS_5},no={dst:{is:!0,uses:!0},id:"CEST",name:"Central European Summer Time",offset:i.UTC_PLUS_2},io={dst:{is:!1,uses:!0},id:"CET",name:"Central European Time",offset:i.UTC_PLUS_1},so={dst:{is:!1,uses:!0},id:"WITA",name:"Central Indonesia Time",offset:i.UTC_PLUS_8},ro={dst:{is:!1,uses:!0},id:"CST",name:"Central Standard Time",offset:i.UTC_MINUS_6},uo={dst:{is:!1,uses:!0},id:"CT",name:"Central Time",offset:i.UTC_MINUS_5},to={dst:{is:!1,uses:!0},id:"CWST",name:"Central Western Standard Time",offset:i.UTC_PLUS_8_45},lo={dst:{is:!1,uses:!0},id:"CHST",name:"Chamorro Standard Time",offset:i.UTC_PLUS_10},oo={dst:{is:!0,uses:!0},id:"CHADT",name:"Chatham Daylight Time",offset:i.UTC_PLUS_13_45},co={dst:{is:!1,uses:!0},id:"CHAST",name:"Chatham Standard Time",offset:i.UTC_PLUS_12_45},mo={dst:{is:!1,uses:!0},id:"CLT",name:"Chile Standard Time",offset:i.UTC_MINUS_4},Ao={dst:{is:!0,uses:!0},id:"CLST",name:"Chile Summer Time",offset:i.UTC_MINUS_3},fo={dst:{is:!1,uses:!0},id:"CST",name:"China Standard Time",offset:i.UTC_PLUS_8},go={dst:{is:!1,uses:!0},id:"CHOT",name:"Choibalsan Standard Time",offset:i.UTC_PLUS_8},ho={dst:{is:!0,uses:!0},id:"CHOST",name:"Choibalsan Summer Time",offset:i.UTC_PLUS_9},Io={dst:{is:!1,uses:!0},id:"CXT",name:"Christmas Island Time",offset:i.UTC_PLUS_7},_o={dst:{is:!1,uses:!0},id:"CHUT",name:"Chuuk Time",offset:i.UTC_PLUS_10},po={dst:{is:!1,uses:!0},id:"CIST",name:"Clippterton Island Standard Time",offset:i.UTC_MINUS_8},Eo={dst:{is:!1,uses:!0},id:"CCT",name:"Cocos Standard Time",offset:i.UTC_PLUS_6_30},So={dst:{is:!0,uses:!0},id:"COST",name:"Colombia Summer Time",offset:i.UTC_MINUS_4},To={dst:{is:!1,uses:!0},id:"COT",name:"Colombia Time",offset:i.UTC_MINUS_5},vo={dst:{is:!1,uses:!0},id:"CKT",name:"Cook Island Time",offset:i.UTC_MINUS_10},bo={dst:{is:!1,uses:!0},id:"UTC",name:"Coordinated Universal Time",offset:i.UTC_0},Bo={dst:{is:!0,uses:!0},id:"CDT",name:"Cuba Daylight Time",offset:i.UTC_MINUS_4},Uo={dst:{is:!1,uses:!0},id:"CST",name:"Cuba Standard Time",offset:i.UTC_MINUS_5},No={dst:{is:!1,uses:!0},id:"DAVT",name:"Davis Time",offset:i.UTC_PLUS_7},yo={dst:{is:!1,uses:!0},id:"DDUT",name:"Dumont D'Urville Time",offset:i.UTC_PLUS_10},Do={dst:{is:!1,uses:!0},id:"EAT",name:"East Africa Time",offset:i.UTC_PLUS_3},Po={dst:{is:!1,uses:!0},id:"EAST",name:"Easter Island Standard Time",offset:i.UTC_MINUS_6},Fo={dst:{is:!0,uses:!0},id:"EASST",name:"Easter Island Summer Time",offset:i.UTC_MINUS_5},Mo={dst:{is:!1,uses:!0},id:"ECT",name:"Eastern Caribbean Time",offset:i.UTC_MINUS_4},ko={dst:{is:!0,uses:!0},id:"EDT",name:"Eastern Daylight Time",offset:i.UTC_MINUS_4},Lo={dst:{is:!0,uses:!0},id:"EEST",name:"Eastern European Summer Time",offset:i.UTC_PLUS_3},wo={dst:{is:!1,uses:!0},id:"EET",name:"Eastern European Time",offset:i.UTC_PLUS_2},Go={dst:{is:!0,uses:!0},id:"EGST",name:"Eastern Greenland Summer Time",offset:i.UTC_0},xo={dst:{is:!1,uses:!0},id:"EGT",name:"Eastern Greenland Time",offset:i.UTC_MINUS_1},Oo={dst:{is:!1,uses:!0},id:"WIT",name:"Eastern Indonesian Time",offset:i.UTC_PLUS_9},qo={dst:{is:!1,uses:!0},id:"EST",name:"Eastern Standard Time",offset:i.UTC_MINUS_5},Ko={dst:{is:!1,uses:!0},id:"ET",name:"Eastern Time",offset:i.UTC_MINUS_5},jo={dst:{is:!1,uses:!0},id:"ECT",name:"Ecuador Time",offset:i.UTC_MINUS_5},Ho={dst:{is:!0,uses:!0},id:"FKST",name:"Falkland Islands Summer Time",offset:i.UTC_MINUS_3},Ro={dst:{is:!1,uses:!0},id:"FKT",name:"Falkland Islands Time",offset:i.UTC_MINUS_4},Wo={dst:{is:!1,uses:!0},id:"FNT",name:"Fernando de Noronha Time",offset:i.UTC_MINUS_2},Vo={dst:{is:!1,uses:!0},id:"FJT",name:"Fiji Time",offset:i.UTC_PLUS_12},zo={dst:{is:!1,uses:!0},id:"GFT",name:"French Guiana Time",offset:i.UTC_MINUS_3},Yo={dst:{is:!1,uses:!0},id:"TFT",name:"French Southern and Antarctic Time",offset:i.UTC_PLUS_5},Jo={dst:{is:!1,uses:!0},id:"FET",name:"Further Eastern European Time",offset:i.UTC_PLUS_3},$o={dst:{is:!1,uses:!0},id:"GALT",name:"Galapagos Time",offset:i.UTC_MINUS_6},Zo={dst:{is:!1,uses:!0},id:"GIT",name:"Gambier Island Time",offset:i.UTC_MINUS_9},Co={dst:{is:!1,uses:!0},id:"GAMT",name:"Gambier Islands Time",offset:i.UTC_MINUS_9},Qo={dst:{is:!1,uses:!0},id:"GET",name:"Georgia Standard Time",offset:i.UTC_PLUS_4},Xo={dst:{is:!1,uses:!0},id:"GILT",name:"Gilbert Island Time",offset:i.UTC_PLUS_12},a0={dst:{is:!1,uses:!0},id:"GMT",name:"Greenwich Mean Time",offset:i.UTC_0},e0={dst:{is:!1,uses:!0},id:"GST",name:"Gulf Standard Time",offset:i.UTC_PLUS_4},n0={dst:{is:!1,uses:!0},id:"GYT",name:"Guyana Time",offset:i.UTC_MINUS_4},i0={dst:{is:!0,uses:!0},id:"HDT",name:"Hawaii-Aleutian Daylight Time",offset:i.UTC_MINUS_9},s0={dst:{is:!1,uses:!0},id:"HST",name:"Hawaii-Aleutian Standard Time",offset:i.UTC_MINUS_10},r0={dst:{is:!1,uses:!0},id:"HMT",name:"Heard and McDonald Islands Time",offset:i.UTC_PLUS_5},u0={dst:{is:!1,uses:!0},id:"HKT",name:"Hong Kong Time",offset:i.UTC_PLUS_8},t0={dst:{is:!0,uses:!0},id:"HOVST",name:"Hovd Summer Time",offset:i.UTC_PLUS_8},l0={dst:{is:!1,uses:!0},id:"HOVT",name:"Hovd Time",offset:i.UTC_PLUS_7},o0={dst:{is:!1,uses:!0},id:"IOT",name:"Indian Ocean Time",offset:i.UTC_PLUS_3},c0={dst:{is:!1,uses:!0},id:"IST",name:"Indian Standard Time",offset:i.UTC_PLUS_5_30},m0={dst:{is:!1,uses:!0},id:"ICT",name:"Indochina Time",offset:i.UTC_PLUS_7},A0={dst:{is:!1,uses:!0},id:"IDLW",name:"International Day Line West Time",offset:i.UTC_MINUS_12},f0={dst:{is:!0,uses:!0},id:"IRDT",name:"Iran Daylight Time",offset:i.UTC_PLUS_4_30},d0={dst:{is:!1,uses:!0},id:"IRST",name:"Iran Standard Time",offset:i.UTC_PLUS_3_30},g0={dst:{is:!1,uses:!0},id:"IST",name:"Irish Standard Time",offset:i.UTC_PLUS_1},h0={dst:{is:!1,uses:!0},id:"IRKT",name:"Irkutsk Time",offset:i.UTC_PLUS_8},I0={dst:{is:!0,uses:!0},id:"IDT",name:"Israel Daylight Time",offset:i.UTC_PLUS_3},_0={dst:{is:!1,uses:!0},id:"IST",name:"Israel Standard Time",offset:i.UTC_PLUS_2},p0={dst:{is:!1,uses:!0},id:"JST",name:"Japan Standard Time",offset:i.UTC_PLUS_9},E0={dst:{is:!1,uses:!0},id:"KALT",name:"Kaliningrad Time",offset:i.UTC_PLUS_2},S0={dst:{is:!1,uses:!0},id:"KAMT",name:"Kamchatka Time",offset:i.UTC_PLUS_12},T0={dst:{is:!1,uses:!0},id:"KST",name:"Korea Standard Time",offset:i.UTC_PLUS_9},v0={dst:{is:!1,uses:!0},id:"KOST",name:"Kosrae Time",offset:i.UTC_PLUS_11},b0={dst:{is:!1,uses:!0},id:"KRAT",name:"Krasnoyarsk Time",offset:i.UTC_PLUS_7},B0={dst:{is:!1,uses:!0},id:"KGT",name:"Kyrgyzstan Time",offset:i.UTC_PLUS_6},U0={dst:{is:!1,uses:!0},id:"LINT",name:"Line Islands Time",offset:i.UTC_PLUS_14},N0={dst:{is:!1,uses:!0},id:"LHST",name:"Lord Howe Standard Time",offset:i.UTC_PLUS_10_30},y0={dst:{is:!1,uses:!0},id:"LHST",name:"Lord Howe Summer Time",offset:i.UTC_PLUS_11},D0={dst:{is:!1,uses:!0},id:"MIST",name:"Macquarie Island Station Time",offset:i.UTC_PLUS_11},P0={dst:{is:!1,uses:!0},id:"MAGT",name:"Magadan Time",offset:i.UTC_PLUS_12},F0={dst:{is:!1,uses:!0},id:"MST",name:"Malaysia Standard Time",offset:i.UTC_PLUS_8},M0={dst:{is:!1,uses:!0},id:"MYT",name:"Malaysia Time",offset:i.UTC_PLUS_8},k0={dst:{is:!1,uses:!0},id:"MVT",name:"Maldives Time",offset:i.UTC_PLUS_5},L0={dst:{is:!1,uses:!0},id:"MART",name:"Marquesas Islands Time",offset:i.UTC_PLUS_9_30},w0={dst:{is:!1,uses:!0},id:"MHT",name:"Marshall Islands Time",offset:i.UTC_PLUS_12},G0={dst:{is:!1,uses:!0},id:"MUT",name:"Mauritius Time",offset:i.UTC_PLUS_4},x0={dst:{is:!1,uses:!0},id:"MAWT",name:"Mawson Station Time",offset:i.UTC_PLUS_5},O0={dst:{is:!1,uses:!0},id:"MEDT",name:"Middle European Summer Time",offset:i.UTC_PLUS_2},q0={dst:{is:!1,uses:!0},id:"MET",name:"Middle European Time",offset:i.UTC_PLUS_1},K0={dst:{is:!1,uses:!0},id:"MSK",name:"Moscow Time",offset:i.UTC_PLUS_3},j0={dst:{is:!1,uses:!0},id:"MDT",name:"Mountain Daylight Time",offset:i.UTC_MINUS_6},H0={dst:{is:!1,uses:!0},id:"MST",name:"Mountain Standard Time",offset:i.UTC_MINUS_7},R0={dst:{is:!1,uses:!0},id:"MMT",name:"Myanmar Standard Time",offset:i.UTC_PLUS_6_30},W0={dst:{is:!1,uses:!0},id:"NCT",name:"Nepal Time",offset:i.UTC_PLUS_5_45},V0={dst:{is:!1,uses:!0},id:"NRT",name:"Nauru Time",offset:i.UTC_PLUS_12},z0={dst:{is:!1,uses:!0},id:"NCT",name:"New Caledonia Time",offset:i.UTC_PLUS_11},Y0={dst:{is:!1,uses:!0},id:"NZDT",name:"New Zealand Daylight Time",offset:i.UTC_PLUS_13},J0={dst:{is:!1,uses:!0},id:"NZST",name:"New Zealand Standard Time",offset:i.UTC_PLUS_12},$0={dst:{is:!1,uses:!0},id:"NDT",name:"Newfoundland Daylight Time",offset:i.UTC_MINUS_2_30},Z0={dst:{is:!1,uses:!0},id:"NT",name:"Newfoundland Time",offset:i.UTC_MINUS_3_30},C0={dst:{is:!1,uses:!0},id:"NUT",name:"Niue Time",offset:i.UTC_MINUS_11},Q0={dst:{is:!1,uses:!0},id:"NFT",name:"Norfolk Island Time",offset:i.UTC_PLUS_11},X0={dst:{is:!1,uses:!0},id:"NOVT",name:"Novosibirsk Time",offset:i.UTC_PLUS_7},ac={dst:{is:!1,uses:!0},id:"OMST",name:"Omsk Time",offset:i.UTC_PLUS_6},ec={dst:{is:!1,uses:!0},id:"ORAT",name:"Oral Time",offset:i.UTC_PLUS_5},nc={dst:{is:!1,uses:!0},id:"PDT",name:"Pacific Daylight Time",offset:i.UTC_MINUS_7},ic={dst:{is:!1,uses:!0},id:"PST",name:"Pacific Standard Time",offset:i.UTC_MINUS_8},sc={dst:{is:!1,uses:!0},id:"PKT",name:"Pakistan Standard Time",offset:i.UTC_PLUS_5},rc={dst:{is:!1,uses:!0},id:"PWT",name:"Palau Time",offset:i.UTC_PLUS_9},uc={dst:{is:!1,uses:!0},id:"PGT",name:"Papua New Guinea Time",offset:i.UTC_PLUS_10},tc={dst:{is:!1,uses:!0},id:"PYST",name:"Paraguay Summer Time",offset:i.UTC_MINUS_3},lc={dst:{is:!1,uses:!0},id:"PYT",name:"Paraguay Time",offset:i.UTC_MINUS_4},oc={dst:{is:!1,uses:!0},id:"PET",name:"Peru Time",offset:i.UTC_MINUS_5},cc={dst:{is:!1,uses:!0},id:"PHST",name:"Philippine Standard Time",offset:i.UTC_PLUS_8},mc={dst:{is:!1,uses:!0},id:"PHT",name:"Philippine Time",offset:i.UTC_PLUS_8},Ac={dst:{is:!1,uses:!0},id:"PHOT",name:"Phoenix Island Time",offset:i.UTC_PLUS_13},fc={dst:{is:!1,uses:!0},id:"PST",name:"Pitcairn Time",offset:i.UTC_MINUS_8},dc={dst:{is:!1,uses:!0},id:"PONT",name:"Pohnpei Standard Time",offset:i.UTC_PLUS_11},gc={dst:{is:!1,uses:!0},id:"RET",name:"Reunion Time",offset:i.UTC_PLUS_4},hc={dst:{is:!1,uses:!0},id:"ROTT",name:"Rothera Research Station Time",offset:i.UTC_MINUS_3},Ic={dst:{is:!1,uses:!0},id:"PMDT",name:"Saint Pierre and Miquelon Daylight Time",offset:i.UTC_MINUS_2},_c={dst:{is:!1,uses:!0},id:"PMST",name:"Saint Pierre and Miquelon Standard Time",offset:i.UTC_MINUS_3},pc={dst:{is:!1,uses:!0},id:"SAKT",name:"Sakhalin Island Time",offset:i.UTC_PLUS_11},Ec={dst:{is:!1,uses:!0},id:"SAMT",name:"Samara Time",offset:i.UTC_PLUS_4},Sc={dst:{is:!1,uses:!0},id:"SDT",name:"Samoa Daylight Time",offset:i.UTC_MINUS_10},Tc={dst:{is:!1,uses:!0},id:"SST",name:"Samoa Standard Time",offset:i.UTC_MINUS_11},vc={dst:{is:!1,uses:!0},id:"SCT",name:"Seychelles Time",offset:i.UTC_PLUS_4},bc={dst:{is:!1,uses:!0},id:"SYOT",name:"Showa Station Time",offset:i.UTC_PLUS_3},Bc={dst:{is:!1,uses:!0},id:"SST",name:"Singapore Standard Time",offset:i.UTC_PLUS_8},Uc={dst:{is:!1,uses:!0},id:"SGT",name:"Singapore Time",offset:i.UTC_PLUS_8},Nc={dst:{is:!1,uses:!0},id:"SBT",name:"Solomon Islands Time",offset:i.UTC_PLUS_11},yc={dst:{is:!1,uses:!0},id:"SAST",name:"South African Standard Time",offset:i.UTC_PLUS_2},Dc={dst:{is:!1,uses:!0},id:"GST",name:"South Georgia and the South Sandwich Islands Time",offset:i.UTC_MINUS_2},Pc={dst:{is:!1,uses:!0},id:"SRET",name:"Srednekolymsk Time",offset:i.UTC_PLUS_11},Fc={dst:{is:!1,uses:!0},id:"SLST",name:"Sri Lanka Standard Time",offset:i.UTC_PLUS_5_30},Mc={dst:{is:!1,uses:!0},id:"SRT",name:"Suriname Time",offset:i.UTC_MINUS_3},kc={dst:{is:!1,uses:!0},id:"TAHT",name:"Tahiti Time",offset:i.UTC_MINUS_10},Lc={dst:{is:!1,uses:!0},id:"TJT",name:"Tajikistan Time",offset:i.UTC_PLUS_5},wc={dst:{is:!1,uses:!0},id:"THA",name:"Thailand Standard Time",offset:i.UTC_PLUS_7},Gc={dst:{is:!1,uses:!0},id:"TLT",name:"Timor-Leste Time",offset:i.UTC_PLUS_9},xc={dst:{is:!1,uses:!0},id:"TKT",name:"Tokelau Time",offset:i.UTC_PLUS_13},Oc={dst:{is:!1,uses:!0},id:"TOT",name:"Tonga Time",offset:i.UTC_PLUS_13},qc={dst:{is:!1,uses:!0},id:"TRT",name:"Turkey Time",offset:i.UTC_PLUS_3},Kc={dst:{is:!1,uses:!0},id:"TMT",name:"Turkmenistan Time",offset:i.UTC_PLUS_5},jc={dst:{is:!1,uses:!0},id:"TVT",name:"Tuvalu Time",offset:i.UTC_PLUS_12},Hc={dst:{is:!1,uses:!0},id:"ULAT",name:"Ulaanbaatar Standard Time",offset:i.UTC_PLUS_8},Rc={dst:{is:!1,uses:!0},id:"ULAST",name:"Ulaanbaatar Summer Time",offset:i.UTC_PLUS_9},Wc={dst:{is:!1,uses:!0},id:"UYT",name:"Uruguay Standard Time",offset:i.UTC_MINUS_3},Vc={dst:{is:!1,uses:!0},id:"UYST",name:"Uruguay Summer Time",offset:i.UTC_MINUS_2},zc={dst:{is:!1,uses:!0},id:"UZT",name:"Uzbekistan Time",offset:i.UTC_PLUS_5},Yc={dst:{is:!1,uses:!0},id:"VUT",name:"Vanuatu Time",offset:i.UTC_PLUS_11},Jc={dst:{is:!1,uses:!0},id:"VET",name:"Venezuela Standard Time",offset:i.UTC_MINUS_4},$c={dst:{is:!1,uses:!0},id:"VLAT",name:"Vladivostok Time",offset:i.UTC_PLUS_10},Zc={dst:{is:!1,uses:!0},id:"VOLT",name:"Volgograd Time",offset:i.UTC_PLUS_4},Cc={dst:{is:!1,uses:!0},id:"VOST",name:"Vostok Station Time",offset:i.UTC_PLUS_6},Qc={dst:{is:!1,uses:!0},id:"WAKT",name:"Wake Island Time",offset:i.UTC_PLUS_12},Xc={dst:{is:!1,uses:!0},id:"WAST",name:"West Africa Summer Time",offset:i.UTC_PLUS_2},am={dst:{is:!1,uses:!0},id:"WAT",name:"West Africa Time",offset:i.UTC_PLUS_1},em={dst:{is:!1,uses:!0},id:"WGST",name:"West Greenland Summer Time",offset:i.UTC_MINUS_2},nm={dst:{is:!1,uses:!0},id:"WGT",name:"West Greenland Time",offset:i.UTC_MINUS_3},im={dst:{is:!1,uses:!0},id:"WKT",name:"West Kazakhstan Time",offset:i.UTC_PLUS_5},sm={dst:{is:!1,uses:!0},id:"WEDT",name:"Western European Summer Time",offset:i.UTC_PLUS_1},rm={dst:{is:!1,uses:!0},id:"WET",name:"Western European Time",offset:i.UTC_0},um={dst:{is:!1,uses:!0},id:"WIT",name:"Western Indonesian Time",offset:i.UTC_PLUS_7},tm={dst:{is:!1,uses:!0},id:"WST",name:"Western Standard Time",offset:i.UTC_PLUS_8},lm={dst:{is:!1,uses:!0},id:"YAKT",name:"Yakutsk Time",offset:i.UTC_PLUS_9},om={dst:{is:!1,uses:!0},id:"YEKT",name:"Yekaterinburg Time",offset:i.UTC_PLUS_5},Ba=(a=>(a.Africa="Africa",a.Americas="Americas",a.Asia="Asia",a.Europe="Europe",a.Oceania="Oceania",a.Polar="Polar",a))(Ba||{}),Ua=(a=>(a.CentralAmerica="Central America",a.EasternAsia="Eastern Asia",a.EasternEurope="Eastern Europe",a.EasternAfrica="Eastern Africa",a.MiddleAfrica="Middle Africa",a.MiddleEast="Middle East",a.NorthernAfrica="Northern Africa",a.NorthernAmerica="Northern America",a.NorthernEurope="Northern Europe",a.Polynesia="Polynesia",a.SouthAmerica="South America",a.SouthernAfrica="Southern Africa",a.SouthernAsia="Southern Asia",a.SouthernEurope="Southern Europe",a.WesternAfrica="Western Africa",a.WesternAsia="Western Asia",a.WesternEurope="Western Europe",a.WesternAustralia="Western Australia",a))(Ua||{}),cm={Afghanistan:{i18n:{calling_codes:[93],currencies:[$.AfghanistanAfghani],languages:[e.Pashto,e.Dari,e.Turkmen,e.Uzbek],tz:{offsets:[i.UTC_PLUS_4_30],regions:[r.AsiaKabul],timezones:[s.AfghanistanTime]}},id:t.Afghanistan,info:{flag:{emoji:"\u{1F1E6}\u{1F1EB}",emoji_unicode:"U+1F1E6 U+1F1EB",svg:"https://www.countryflags.io/af/flat/64.svg"},tld:[".af"]},iso:{alpha2:t.Afghanistan,alpha3:"AFG",numeric:"004"},name:{alt_spellings:["AF","Af\u0121\u0101nist\u0101n"],demonym:"Afghan",native:{endonym:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},official:"Islamic Republic of Afghanistan",short:"Afghanistan",translations:{[e.Afrikaans]:"Afghanistan",[e.Albanian]:"Shqip\xEBri",[e.Amharic]:"\u12A0\u134D\u130B\u1295",[e.Arabic]:"\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Armenian]:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Basque]:"Afganist\xE1n",[e.Belarusian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Bengali]:"\u0986\u09AB\u0997\u09BE\u09A8\u09BF\u09B8\u09CD\u09A4\u09BE\u09A8",[e.Berber]:"\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Bhutani]:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F51\u0F7C\u0F53\u0F0B\u0F63\u0F7A\u0F0B\u0F66\u0F90\u0F51\u0F0B\u0F46\u0F0D",[e.Bosnian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Breton]:"Afganistan",[e.Bulgarian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Burmese]:"\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A",[e.Catalan]:"Afganistan",[e.Chinese]:"\u963F\u5BCC\u6C57",[e.Croatian]:"Afganistan",[e.Czech]:"Afganistan",[e.Danish]:"Afghanistan",[e.Dutch]:"Afghanistan",[e.English]:"Afghanistan",[e.Esperanto]:"Afganistan",[e.Estonian]:"Afganistan",[e.Finnish]:"Afghanistan",[e.French]:"Afghanistan",[e.Frisian]:"Afghanistan",[e.Galician]:"Afganist\xE1n",[e.Georgian]:"\u10D0\u10D5\u10E6\u10D0\u10DC\u10D4\u10D7\u10D8",[e.German]:"Afghanistan",[e.Greenlandic]:"Afghanistan",[e.Greek]:"\u0391\u03C6\u03B3\u03B1\u03BD\u03B9\u03C3\u03C4\u03AC\u03BD",[e.Gujarati]:"\u0A85\u0AAB\u0A97\u0ABE\u0AA8\u0ABF\u0AB8\u0ACD\u0AA4\u0ABE\u0AA8",[e.Haitian]:"Afghanistan",[e.Hausa]:"Afghanistan",[e.Hebrew]:"\u05D0\u05E4\u05D2\u05E0\u05D9\u05E1\u05D8\u05DF",[e.Hindi]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Hungarian]:"Afganistan",[e.Icelandic]:"Afghanistan",[e.Igbo]:"Afghanistan",[e.Indonesian]:"Afghanistan",[e.Irish]:"Afghanistan",[e.Italian]:"Afghanistan",[e.Japanese]:"\u30A2\u30D5\u30AC\u30CB\u30B9\u30BF\u30F3",[e.Javanese]:"Afghanistan",[e.Kannada]:"\u0C85\u0CAB\u0C97\u0CBE\u0CA8\u0CBF\u0CB8\u0CCD\u0CA4\u0CBE\u0CA8",[e.Kazakh]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Khmer]:"\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17B7\u1780",[e.Korean]:"\uC544\uD504\uAC00\uB2C8\uC2A4\uD0C4",[e.Kurdish]:"Afghanistan",[e.Kyrgyz]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Lao]:"\u0EAD\u0EB2\u0E9F\u0EB2\u0EA5\u0EBD\u0E99",[e.Latin]:"Afghanistan",[e.Latvian]:"Afghanistan",[e.Lithuanian]:"Afganistanas",[e.Luxembourgish]:"Afghanistan",[e.Macedonian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Malagasy]:"Afghanistan",[e.Malay]:"Afghanistan",[e.Malayalam]:"\u0D05\u0D2B\u0D17\u0D3E\u0D28\u0D3F\u0D38\u0D4D\u0D24\u0D3E\u0D28",[e.Maltese]:"Afghanistan",[e.Maori]:"Afghanistan",[e.Marathi]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Mongolian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Nepali]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Norwegian]:"Afghanistan",[e.Pashto]:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Persian]:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Polish]:"Afganistan",[e.Portuguese]:"Afghanistan",[e.Punjabi]:"Afghanistan",[e.Romanian]:"Afghanistan",[e.Polish]:"Afganistan",[e.Russian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Samoan]:"Afghanistan",[e.Sanskrit]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Scots]:"Afghanistan",[e.Serbian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Sesotho]:"Afghanistan",[e.Shona]:"Afghanistan",[e.Sindhi]:"Afghanistan",[e.Sinhala]:"\u0D86\u0D9C\u0DCA\u200D\u0DBB\u0DDC\u0D9A\u0DCA\u0D9A\u0DD2\u0DBA\u0DCF\u0DC0",[e.Slovak]:"Afganistan",[e.Slovenian]:"Afganistan",[e.Somali]:"Afghanistan",[e.Spanish]:"Afganist\xE1n",[e.Sudanese]:"Afghanistan",[e.Swahili]:"Afghanistan",[e.Swedish]:"Afghanistan",[e.Tagalog]:"Afghanistan",[e.Tajik]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Tatar]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Tamil]:"\u0B86\u0BAA\u0BCD\u0BAA\u0B95\u0BBE\u0BA9\u0BBF\u0BB8\u0BCD\u0BA4\u0BBE\u0BA9\u0BCD",[e.Telugu]:"\u0C06\u0C2B\u0C4D\u0C18\u0C28\u0C3F\u0C38\u0C4D\u0C24\u0C3E\u0C28\u0C4D",[e.Thai]:"\u0E2D\u0E31\u0E1F\u0E01\u0E32\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19",[e.Tibetan]:"\u0F68\u0F55\u0F0B\u0F42\u0F7A\u0F0B\u0F53\u0F72\u0F66\u0F72\u0F0B\u0F4F\u0F7A\u0F53\u0F66\u0F72\u0F0D",[e.Turkish]:"Afganistan",[e.Ukrainian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Urdu]:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Uzbek]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Vietnamese]:"Afghanistan",[e.Welsh]:"Afghanistan",[e.Xhosa]:"Afghanistan",[e.Yiddish]:"Afghanistan",[e.Yoruba]:"Afghanistan",[e.Zulu]:"Afghanistan"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Kabul",total:341e5}},geography:{area:652230,region:Ba.Asia,sub_region:Ua.SouthernAsia},government:{capital:"Kabul",type:"Islamic Emirate"}}},Albania:{i18n:{calling_codes:[355],currencies:[$.AlbaniaLek],languages:[e.Albanian,e.Greek,e.Turkish],tz:{offsets:[i.UTC_PLUS_1],regions:[r.EuropeBrussels],timezones:[s.CentralEuropeanTime]}},id:t.Albania,info:{flag:{emoji:"\u{1F1E6}\u{1F1F1}",emoji_unicode:"U+1F1E6 U+1F1F1",svg:"https://www.countryflags.io/al/flat/64.svg"},tld:[".al"]},iso:{alpha2:t.Albania,alpha3:"ALB",numeric:"008"},name:{alt_spellings:["AL","Shqip\xEBri","Shqip\xEBria","Shqipnia"],demonym:"Albanian",native:{endonym:"Shqip\xEBri"},official:"Republic of Albania",short:"Albania",translations:{[e.Afrikaans]:"Albania",[e.Albanian]:"Albania",[e.Amharic]:"\u12A0\u120D\u1263\u1295\u12EB",[e.Arabic]:"\u0623\u0644\u0628\u0627\u0646\u064A\u0627",[e.Armenian]:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Basque]:"Albania",[e.Belarusian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Bengali]:"\u0986\u09B2\u09AC\u09BE\u09A8\u09BF\u09AF\u09BC\u09BE",[e.Berber]:"\u0623\u0644\u0628\u0627\u0646\u064A\u0627",[e.Bhutani]:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B",[e.Bosnian]:"Albanija",[e.Breton]:"Albania",[e.Bulgarian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Burmese]:"\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A",[e.Catalan]:"Alb\xE0nia",[e.Chinese]:"\u963F\u5C14\u5DF4\u5C3C\u4E9A",[e.Croatian]:"Albanija",[e.Czech]:"Alb\xE1nie",[e.Danish]:"Albanien",[e.Dutch]:"Albani\xEB",[e.English]:"Albania",[e.Esperanto]:"Albanio",[e.Estonian]:"Albaania",[e.Finnish]:"Albania",[e.French]:"Albanie",[e.Frisian]:"Albani\xEB",[e.Galician]:"Alb\xE2nia",[e.Georgian]:"\u10D0\u10DA\u10D1\u10D0\u10DC\u10D8\u10D0",[e.German]:"Albanien",[e.Greenlandic]:"Albania",[e.Greek]:"\u0391\u03BB\u03B2\u03B1\u03BD\u03AF\u03B1",[e.Gujarati]:"\u0A85\u0AB2\u0AAC\u0AA8\u0ABF\u0AAF\u0ABE",[e.Haitian]:"Albanais",[e.Hausa]:"Albania",[e.Hebrew]:"\u05D0\u05DC\u05D1\u05E0\u05D9\u05D4",[e.Hindi]:"\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E",[e.Hungarian]:"Alb\xE1nia",[e.Icelandic]:"Alb\xFAnir",[e.Igbo]:"Albania",[e.Indonesian]:"Albania",[e.Irish]:"Alb\xE1in",[e.Italian]:"Albania",[e.Japanese]:"\u30A2\u30EB\u30D0\u30CB\u30A2",[e.Javanese]:"Albania",[e.Kannada]:"\u0C85\u0CB2\u0CCD\u0CAC\u0CBE\u0CA8\u0CBF\u0CAF\u0CBE",[e.Kazakh]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Khmer]:"\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17C1\u179F\u17CA\u17B8",[e.Korean]:"\uC54C\uBC14\uB2C8\uC544",[e.Kurdish]:"\u0622\u0644\u0628\u0627\u0646\u06CC\u0627",[e.Kyrgyz]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Lao]:"\u0EAD\u0EB2\u0EA5\u0EB2\u0E99\u0EB5",[e.Latin]:"Albania",[e.Latvian]:"Alb\u0101nija",[e.Lithuanian]:"Albanija",[e.Luxembourgish]:"Albani\xEB",[e.Macedonian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430",[e.Malagasy]:"Albania",[e.Malay]:"Albania",[e.Malayalam]:"\u0D05\u0D32\u0D4D\u0D2C\u0D3E\u0D28\u0D3F\u0D2F\u0D3E",[e.Maltese]:"Albania",[e.Maori]:"Albania",[e.Marathi]:"\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E",[e.Mongolian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Nepali]:"\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E",[e.Norwegian]:"Albania",[e.Pashto]:"\u0627\u0627\u0644\u0628\u0627\u0646\u06CC",[e.Persian]:"\u0622\u0644\u0628\u0627\u0646\u06CC",[e.Polish]:"Albania",[e.Portuguese]:"Alb\xE2nia",[e.Punjabi]:"\u0A05\u0A32\u0A2C\u0A28\u0A40\u0A06",[e.Romanian]:"Alb\u0103n",[e.Russian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Samoan]:"Albania",[e.Sanskrit]:"Albani",[e.Scots]:"Alb\xE0inia",[e.Serbian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430",[e.Sesotho]:"Albania",[e.Shona]:"Albania",[e.Sindhi]:"Albania",[e.Sinhala]:"\u0D87\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA",[e.Slovak]:"Alb\xE1nsko",[e.Slovenian]:"Albanija",[e.Somali]:"Albania",[e.Spanish]:"Albania",[e.Sudanese]:"Albania",[e.Swahili]:"Albania",[e.Swedish]:"Albanien",[e.Tagalog]:"Albania",[e.Tajik]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Tamil]:"\u0B85\u0BB2\u0BCD\u0BAA\u0BBE\u0BA9\u0BBF\u0BAF\u0BBE",[e.Tatar]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Telugu]:"\u0C05\u0C32\u0C4D\u0C2C\u0C3E\u0C28\u0C3F\u0C2F\u0C3E",[e.Thai]:"\u0E2D\u0E31\u0E25\u0E41\u0E1A\u0E19\u0E34\u0E19\u0E35",[e.Tibetan]:"\u0F68\u0F63\u0F0B\u0F56\u0F72\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F72",[e.Turkish]:"Albaniye",[e.Ukrainian]:"\u0410\u043B\u0431\u0430\u043D\u0456\u044F",[e.Urdu]:"\u0622\u0644\u0628\u0627\u0646\u06CC",[e.Uzbek]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Vietnamese]:"Albanie",[e.Welsh]:"Albania",[e.Xhosa]:"Albania",[e.Yiddish]:"\u05D0\u05DC\u05D1\u05E0\u05D9\u05E9",[e.Yoruba]:"Albania",[e.Zulu]:"Albania"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Tirana",total:2853e3}},geography:{area:28748,region:Ba.Europe,sub_region:Ua.SouthernEurope},government:{capital:"Tirana",type:"Republic"}}},Algeria:{i18n:{calling_codes:[213],currencies:[$.AlgeriaDinar],languages:[e.Arabic,e.French,e.Berber,e.Tamazight],tz:{offsets:[i.UTC_PLUS_1,i.UTC_PLUS_2],regions:[r.AfricaAlgiers],timezones:[s.CentralEuropeanTime]}},id:t.Algeria,info:{flag:{emoji:"\u{1F1E9}\u{1F1FF}",emoji_unicode:"U+1F1E9 U+1F1FF",svg:"https://www.countryflags.io/dz/flat/64.svg"},tld:[".dz",".\u062C\u0632\u0627\u0626\u0631"]},iso:{alpha2:t.Algeria,alpha3:"DZA",numeric:"012"},name:{alt_spellings:["DZ","Dzayer","Alg\xE9rie"],demonym:"Algerian",native:{endonym:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631"},official:"People's Democratic Republic of Algeria",short:"Algeria",translations:{[e.Afrikaans]:"Algerije",[e.Albanian]:"Algeria",[e.Amharic]:"\u12A0\u120D\u1300\u122D\u1235",[e.Arabic]:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631",[e.Armenian]:"\u0531\u056C\u0563\u0578\u0580\u056B\u0561",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043B\u0436\u0438\u0440",[e.Basque]:"Algeria",[e.Belarusian]:"\u0410\u043B\u0436\u0438\u0440",[e.Bengali]:"\u0986\u09B2\u099C\u09C7\u09B0",[e.Berber]:"\u062C\u0632\u0627\u0626\u0631",[e.Bhutani]:"\u0F62\u0FAB\u0F7C\u0F44\u0F0B\u0F41",[e.Bosnian]:"Al\u017Eir",[e.Breton]:"Algeria",[e.Bulgarian]:"\u0410\u043B\u0436\u0438\u0440",[e.Burmese]:"\u1021\u102C\u101B\u1015\u103A",[e.Catalan]:"Alg\xE8ria",[e.Chinese]:"\u963F\u5C14\u53CA\u5229\u4E9A",[e.Croatian]:"Al\u017Eir",[e.Czech]:"Al\u017E\xEDrsko",[e.Danish]:"Algeriet",[e.Dutch]:"Algerije",[e.English]:"Algeria",[e.Esperanto]:"Al\u011Derio",[e.Estonian]:"Al\u017Eira",[e.Finnish]:"Algeria",[e.French]:"Alg\xE9rie",[e.Frisian]:"Algeri\xEB",[e.Galician]:"Alxeria",[e.Georgian]:"\u10D0\u10DA\u10D2\u10D8\u10E3\u10E0\u10D8",[e.German]:"Algerien",[e.Greenlandic]:"Algeria",[e.Greek]:"\u0391\u03BB\u03B3\u03B5\u03C1\u03AF\u03B1",[e.Gujarati]:"\u0A86\u0AB2\u0AC7\u0A97\u0AB0\u0ABF\u0AAF\u0ABE",[e.Haitian]:"Alg\xE9rie",[e.Hausa]:"Algeria",[e.Hebrew]:"\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4",[e.Hindi]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Hungarian]:"Alg\xE1r",[e.Icelandic]:"Alg\xFAra",[e.Igbo]:"Algeria",[e.Indonesian]:"Aljir",[e.Irish]:"Alg\xE9rie",[e.Italian]:"Algeria",[e.Japanese]:"\u30A2\u30EB\u30B8\u30A7\u30EA\u30A2",[e.Javanese]:"Aljir",[e.Kannada]:"\u0C86\u0CB2\u0CCD\u0C97\u0CC7\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD",[e.Kazakh]:"\u0410\u043B\u0436\u0438\u0440",[e.Khmer]:"\u17A2\u17B6\u179B\u17CB\u1794\u17B6\u1793\u17B8",[e.Korean]:"\uC54C\uC81C\uB9AC",[e.Kurdish]:"\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u062C\u0632\u0627\u06CC\u0631",[e.Kyrgyz]:"\u0410\u043B\u0436\u0438\u0440",[e.Lao]:"\u0EAD\u0EB2\u0EA5\u0EB2\u0E88\u0EB5\u0E99",[e.Latin]:"Algeria",[e.Latvian]:"Al\u017E\u012Brija",[e.Lithuanian]:"Al\u017Eyras",[e.Luxembourgish]:"Algeria",[e.Macedonian]:"\u0410\u043B\u0436\u0438\u0440",[e.Malagasy]:"Alg\xE9rie",[e.Malay]:"Aljir",[e.Malayalam]:"\u0D06\u0D32\u0D02\u0D17\u0D47\u0D30\u0D3F\u0D2F\u0D7B",[e.Maltese]:"Alg\xE9rie",[e.Maori]:"Algeria",[e.Marathi]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Mongolian]:"\u0410\u043B\u0436\u0438\u0440",[e.Nepali]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Norwegian]:"Algeria",[e.Pashto]:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631",[e.Persian]:"\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u0639\u0631\u0628",[e.Polish]:"Algieria",[e.Portuguese]:"Alg\xE9ria",[e.Punjabi]:"\u0A06\u0A32\u0A47\u0A17\u0A40\u0A06",[e.Romanian]:"Algeria",[e.Russian]:"\u0410\u043B\u0436\u0438\u0440",[e.Samoan]:"Algeria",[e.Sanskrit]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Scots]:"Algeria",[e.Serbian]:"\u0410\u043B\u0436\u0438\u0440",[e.Sesotho]:"Algeria",[e.Shona]:"Algeria",[e.Sindhi]:"Algeria",[e.Sinhala]:"\u0D86\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA",[e.Slovak]:"Al\u017E\xEDrsko",[e.Slovenian]:"Al\u017Eir",[e.Somali]:"Algeria",[e.Spanish]:"Algeria",[e.Sudanese]:"Aljir",[e.Swahili]:"Aljir",[e.Swedish]:"Algeriet",[e.Tagalog]:"Algeria",[e.Tajik]:"\u0410\u043B\u0436\u0438\u0440",[e.Tamil]:"\u0B86\u0BB2\u0BCD\u0B95\u0BC7\u0BB0\u0BBF\u0BAF\u0BBE",[e.Tatar]:"\u0410\u043B\u0436\u0438\u0440",[e.Telugu]:"\u0C06\u0C32\u0C4D\u0C17\u0C47\u0C30\u0C3F\u0C2F\u0C3E",[e.Thai]:"\u0E2D\u0E32\u0E23\u0E32\u0E01\u0E2D\u0E19",[e.Tibetan]:"\u0F68\u0F63\u0F9F\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F61\u0F72",[e.Turkish]:"Cezayir",[e.Ukrainian]:"\u0410\u043B\u0436\u0438\u0440",[e.Urdu]:"\u0622\u0644\u062C\u06CC\u0631",[e.Uzbek]:"\u0410\u043B\u0436\u0438\u0440",[e.Vietnamese]:"\u1EA2\u0301\u1EA1\u1EA3\u1EAD\u1EB5",[e.Welsh]:"Algeria",[e.Xhosa]:"Algeria",[e.Yiddish]:"\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4",[e.Yoruba]:"Algeria",[e.Zulu]:"Algeria"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Oran",total:371e5}},geography:{area:2381740,region:Ba.Africa,sub_region:Ua.NorthernAfrica},government:{capital:"Algiers",type:"Republic"}}},AmericanSamoa:{i18n:{calling_codes:[1684],currencies:[$.AmericanSamoaTala],languages:[e.English,e.Samoan],tz:{offsets:[i.UTC_MINUS_11],regions:[r.PacificSamoa],timezones:[s.SamoaStandardTime]}},id:t.AmericanSamoa,info:{flag:{emoji:"\u{1F1E6}\u{1F1F8}",emoji_unicode:"U+1F1E6 U+1F1F8",svg:"https://www.countryflags.io/as/flat/64.svg"},tld:[".as"]},iso:{alpha2:t.AmericanSamoa,alpha3:"ASM",numeric:"016"},name:{alt_spellings:["AS","Amerika S\u0101moa","Amelika S\u0101moa","S\u0101moa Amelika"],demonym:"American Samoan",native:{endonym:"American Samoa"},official:"American Samoa",short:"American Samoa",translations:{[e.Afrikaans]:"Amerikaans Samoa",[e.Albanian]:"Samoa Amerikane",[e.Amharic]:"\u1233\u121E\u12A0\u122D",[e.Arabic]:"\u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629",[e.Armenian]:"\u054D\u0561\u0570\u0561\u0574\u0561\u056C\u056B\u0561",[e.Azerbaijani]:"Samoa Amerikana",[e.Bashkir]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0421\u0430\u043C\u043E\u0430",[e.Basque]:"Samoa Amerikana",[e.Belarusian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430",[e.Bengali]:"\u0986\u09AE\u09C7\u09B0\u09BF\u0995\u09BE\u09A8 \u09B8\u09BE\u09AE\u09CB\u09AF\u09BC\u09BE",[e.Berber]:"\u062C\u0632\u0631 \u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629",[e.Bhutani]:"\u0F68\u0F62\u0F92\u0FB1\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F58\u0F44\u0F66\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F66\u0F90\u0F56\u0F66\u0F0B\u0F62\u0F92\u0FB1\u0F74\u0F51\u0F0B\u0F46\u0F7A\u0F53\u0F0B\u0F54\u0F7C\u0F0D",[e.Bosnian]:"Ameri\u010Dka Samoa",[e.Breton]:"Samoa Amerikan",[e.Bulgarian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Burmese]:"\u1021\u1019\u1039\u1038\u1019\u101B\u102D\u102F\u1018\u102C\u101E\u102C",[e.Catalan]:"Samoa Americana",[e.Chinese]:"\u7F8E\u5C5E\u8428\u6469\u4E9A",[e.Croatian]:"Ameri\u010Dka Samoa",[e.Czech]:"Americk\xE1 Samoa",[e.Danish]:"Amerikansk Samoa",[e.Dutch]:"Amerikaans Samoa",[e.English]:"American Samoa",[e.Esperanto]:"Samoa Amerika",[e.Estonian]:"Ameerika Samoa",[e.Finnish]:"Amerikka Samoa",[e.French]:"American Samoa",[e.Frisian]:"Amerikaans Samoa",[e.Galician]:"Samoa Americana",[e.Georgian]:"\u10D0\u10DB\u10D4\u10E0\u10D8\u10D9\u10D8\u10E1 \u10E1\u10D0\u10DB\u10DD\u10D0",[e.German]:"Amerikanisch-Samoa",[e.Greenlandic]:"Amerikaans Samoa",[e.Greek]:"\u0391\u03BC\u03B5\u03C1\u03B9\u03BA\u03B1\u03BD\u03B9\u03BA\u03AE \u03A3\u03B1\u03BC\u03CC\u03B1",[e.Gujarati]:"\u0A86\u0AAE\u0AC7\u0AB0\u0ABF\u0A95\u0AA8 \u0AB8\u0ABE\u0AAE\u0ACB\u0AAF\u0ABE",[e.Haitian]:"Amerikaans Samoa",[e.Hausa]:"Amerikaans Samoa",[e.Hebrew]:"\u05D0\u05DE\u05E8\u05D9\u05E7\u05E0\u05D9\u05D4 \u05E1\u05DE\u05D5\u05D0\u05D4",[e.Hindi]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Hungarian]:"Amerikai Szamoa",[e.Icelandic]:"Amerikai Szamoa",[e.Igbo]:"Ikina Amerika",[e.Indonesian]:"Samoa Amerika",[e.Irish]:"Samoa Amerikana",[e.Italian]:"Samoa Americane",[e.Japanese]:"\u30A2\u30E1\u30EA\u30AB\u9818\u30B5\u30E2\u30A2",[e.Javanese]:"Samoa Amerika",[e.Kannada]:"\u0C85\u0CAE\u0CC7\u0CB0\u0CBF\u0C95\u0CA8\u0CCD \u0CB8\u0CAE\u0CCB\u0C86",[e.Kazakh]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430",[e.Khmer]:"\u17A2\u17B6\u1798\u17C9\u17B6\u179A\u17B8\u179F\u17D2\u178F\u1784\u17CB",[e.Korean]:"\uC544\uBA54\uB9AC\uCE74 \uC0AC\uBAA8\uC544",[e.Kurdish]:"Amerikaans Samoa",[e.Kyrgyz]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430",[e.Lao]:"\u0EAD\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94",[e.Latin]:"Samoa Amerikana",[e.Latvian]:"Amerikas Samoa",[e.Lithuanian]:"Amerikos Samoa",[e.Luxembourgish]:"Amerikaans Samoa",[e.Macedonian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Malagasy]:"Samoa Amerika",[e.Malay]:"Amerika Samo",[e.Malayalam]:"\u0D05\u0D2E\u0D47\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D28\u0D4D\u0D31\u0D4D \u0D38\u0D2E\u0D4B\u0D06",[e.Maltese]:"Samoa Amerika",[e.Maori]:"Samoa Amerika",[e.Marathi]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Mongolian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430",[e.Nepali]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Norwegian]:"Amerikansk Samoa",[e.Pashto]:"\u0627\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627",[e.Persian]:"\u0622\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627",[e.Polish]:"Samoa Ameryka\u0144skie",[e.Portuguese]:"Samoa Americana",[e.Punjabi]:"\u0A05\u0A2E\u0A30\u0A40\u0A15\u0A40 \u0A38\u0A3E\u0A2E\u0A4B\u0A06",[e.Romanian]:"Samoa americane",[e.Russian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430",[e.Samoan]:"Samoa Amerika",[e.Sanskrit]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Scots]:"Amerikaans Samoa",[e.Serbian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Sesotho]:"Amerikaans Samoa",[e.Shona]:"Amerikaans Samoa",[e.Sindhi]:"Amerikaans Samoa",[e.Sinhala]:"\u0D86\u0DBB\u0DCA\u0DA2\u0DD2\u0DB1\u0DCF\u0DB1\u0DD4 \u0DC3\u0DD0\u0DB8\u0DD0\u0DBD\u0DCA\u0DC0",[e.Slovak]:"Amerikaans Samoa",[e.Slovenian]:"Amerikaans Samoa",[e.Somali]:"Amerikaans Samoa",[e.Spanish]:"Samoa Americana",[e.Sudanese]:"Amerikaans Samoa",[e.Swahili]:"Amerikaans Samoa",[e.Swedish]:"Amerikansk Samoa",[e.Tagalog]:"Amerikaans Samoa",[e.Tajik]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430",[e.Tamil]:"\u0B85\u0BAE\u0BC6\u0BB0\u0BBF\u0B95\u0BCD \u0B9A\u0BAE\u0BCB\u0BB5\u0BBE",[e.Tatar]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430",[e.Telugu]:"\u0C05\u0C2E\u0C46\u0C30\u0C3F\u0C15\u0C4D \u0C38\u0C2E\u0C4B\u0C35\u0C3E",[e.Thai]:"\u0E2A\u0E2B\u0E23\u0E32\u0E0A\u0E2D\u0E32\u0E13\u0E32\u0E08\u0E31\u0E01\u0E23\u0E41\u0E2D\u0E1F\u0E23\u0E34\u0E01\u0E32",[e.Tibetan]:"\u0F68\u0F7A\u0F0B\u0F62\u0F72\u0F0B\u0F40\u0F0B\u0F68\u0F7A\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F74\u0F0B\u0F61\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F40",[e.Turkish]:"Amerikan Samoas\u0131",[e.Ukrainian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u044C\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Urdu]:"\u0627\u0645\u0631\u06CC\u06A9\u06CC \u0633\u0645\u0648\u0627",[e.Uzbek]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430",[e.Vietnamese]:"Amerikaans Samoa",[e.Welsh]:"Amerikaans Samoa",[e.Xhosa]:"Amerikaans Samoa",[e.Yiddish]:"Amerikaans Samoa",[e.Yoruba]:"Amerikaans Samoa",[e.Zulu]:"Amerikaans Samoa"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Pago Pago",total:558e3}},geography:{area:199,region:Ba.Oceania,sub_region:Ua.Polynesia},government:{capital:"Pago Pago",type:"Nonmetropolitan Territory of the US"}}},Andorra:{i18n:{calling_codes:[376],currencies:[$.Euro],languages:[e.Catalan,e.Spanish],tz:{offsets:[i.UTC_PLUS_1,i.UTC_PLUS_2],regions:[r.EuropeAndorra],timezones:[s.CentralEuropeanTime]}},id:t.Andorra,info:{flag:{emoji:"\u{1F1E6}\u{1F1F4}",emoji_unicode:"U+1F1E6 U+1F1F4",svg:"https://www.countryflags.io/ad/flat/64.svg"},tld:[".ad"]},iso:{alpha2:t.Andorra,alpha3:"AND",numeric:"020"},name:{alt_spellings:["AD","Principality of Andorra","Principat d'Andorra"],demonym:"Andorran",native:{endonym:"Andorra"},official:"Principality of Andorra",short:"Andorra",translations:{[e.Afrikaans]:"Andorra",[e.Albanian]:"Andorra",[e.Amharic]:"\u12A0\u1295\u12F6\u122B",[e.Arabic]:"\u0623\u0646\u062F\u0648\u0631\u0627",[e.Armenian]:"\u0540\u0561\u0576\u0564\u0561\u0580\u0561\u057E\u0561\u0575\u0584",[e.Azerbaijani]:"Andorra",[e.Bashkir]:"\u0410\u043D\u0434\u043E\u0440\u0430",[e.Basque]:"Andorra",[e.Belarusian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Bengali]:"\u0985\u09A8\u09CD\u09A1\u09CB\u09B0\u09BE",[e.Berber]:"\u0623\u0646\u062F\u0648\u0631\u0627",[e.Bhutani]:"\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B",[e.Bosnian]:"Andora",[e.Breton]:"Andorra",[e.Bulgarian]:"\u0410\u043D\u0434\u043E\u0440\u0430",[e.Burmese]:"\u1021\u1014\u1039\u1010\u102C\u101B\u102D\u102F\u1038",[e.Catalan]:"Andorra",[e.Chinese]:"\u5B89\u9053\u5C14",[e.Croatian]:"Andora",[e.Czech]:"Andorra",[e.Danish]:"Andorra",[e.Dutch]:"Andorra",[e.English]:"Andorra",[e.Esperanto]:"Andora",[e.Estonian]:"Andorra",[e.Finnish]:"Andorra",[e.French]:"Andorra",[e.Frisian]:"Andorra",[e.Galician]:"Andorra",[e.Georgian]:"\u12A0\u1295\u12F6\u122B",[e.German]:"Andorra",[e.Greek]:"\u0391\u03BD\u03B4\u03CC\u03C1\u03B1",[e.Hebrew]:"\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4",[e.Hindi]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Hungarian]:"Andorra",[e.Icelandic]:"Andorra",[e.Igbo]:"Andorra",[e.Indonesian]:"Andorra",[e.Irish]:"Andorra",[e.Italian]:"Andorra",[e.Japanese]:"\u30A2\u30F3\u30C9\u30E9",[e.Javanese]:"Andorra",[e.Kannada]:"\u0C85\u0C82\u0CA1\u0CCB\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD",[e.Kazakh]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Khmer]:"\u17A2\u1784\u17CB\u178A\u17B6\u179A\u17B6",[e.Korean]:"\uC548\uB3C4\uB77C",[e.Kurdish]:"Andorra",[e.Kyrgyz]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Lao]:"\u0EAD\u0EB1\u0E99\u0EC2\u0E94\u0EA3\u0EB2",[e.Latin]:"Andorra",[e.Latvian]:"Andora",[e.Lithuanian]:"Andora",[e.Luxembourgish]:"Andorra",[e.Macedonian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Malagasy]:"Andorra",[e.Malay]:"Andorra",[e.Malayalam]:"\u0D05\u0D02\u0D21\u0D4B\u0D30\u0D3F\u0D2F\u0D28\u0D4D",[e.Maltese]:"Andorra",[e.Maori]:"Andorra",[e.Marathi]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Mongolian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Nepali]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Norwegian]:"Andorra",[e.Pashto]:"\u0622\u0646\u062F\u0648\u0631\u0627",[e.Persian]:"\u0622\u0646\u062F\u0648\u0631\u0627",[e.Polish]:"Andora",[e.Portuguese]:"Andorra",[e.Punjabi]:"\u0A05\u0A70\u0A21\u0A4B\u0A30\u0A3E",[e.Romanian]:"Andorra",[e.Russian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Samoan]:"Andorra",[e.Sanskrit]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Scots]:"Andorra",[e.Serbian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Sesotho]:"Andorra",[e.Shona]:"Andorra",[e.Sindhi]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Sinhala]:"\u0D86\u0DB1\u0DCA\u0DAF\u0DDA",[e.Slovak]:"Andorra",[e.Slovenian]:"Andora",[e.Somali]:"Andorra",[e.Spanish]:"Andorra",[e.Sudanese]:"Andorra",[e.Swahili]:"Andorra",[e.Swedish]:"Andorra",[e.Tagalog]:"Andorra",[e.Tajik]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Tamil]:"\u0B85\u0BA9\u0BCB\u0BB0\u0BCD\u0B9F\u0BBE",[e.Tatar]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Telugu]:"\u0C05\u0C02\u0C21\u0C4B\u0C30\u0C4D\u0C30\u0C3E",[e.Thai]:"\u0E2D\u0E31\u0E19\u0E14\u0E2D\u0E23\u0E4C\u0E23\u0E32",[e.Tibetan]:"\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B",[e.Turkish]:"Andora",[e.Ukrainian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Urdu]:"\u0622\u0646\u062F\u0648\u0631\u0627",[e.Uzbek]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Vietnamese]:"Andorra",[e.Welsh]:"Andorra",[e.Xhosa]:"Andorra",[e.Yiddish]:"\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4",[e.Yoruba]:"Andorra",[e.Zulu]:"Andorra"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Andorra la Vella",total:78e3}},geography:{area:468,region:Ba.Europe,sub_region:Ua.SouthernEurope},government:{capital:"Andorra la Vella",type:"Constitutional Monarchy"}}},Angola:{i18n:{calling_codes:[244],currencies:[$.AngolaKwanza],languages:[e.Portuguese,e.Spanish,e.French,e.Italian,e.German,e.English],tz:{offsets:[i.UTC_0,i.UTC_PLUS_1,i.UTC_PLUS_2],regions:[r.AfricaLuanda],timezones:[s.WestAfricaTime]}},id:t.Angola,info:{flag:{emoji:"\u{1F1E6}\u{1F1EC}",emoji_unicode:"U+1F1E6 U+1F1EC",svg:"https://www.countryflags.io/ao/flat/64.svg"},tld:[".ao"]},iso:{alpha2:t.Angola,alpha3:"AGO",numeric:"024"},name:{alt_spellings:["AO","Rep\xFAblica de Angola","\u0281\u025Bpublika de an"],demonym:"Angolan",native:{endonym:"Angola"},official:"Republic of Angola",short:"Angola",translations:{[e.Afrikaans]:"Angola",[e.Albanian]:"Ang\xF2la",[e.Amharic]:"\u12A0\u1295\u130E\u120A\u12EB",[e.Arabic]:"\u0623\u0646\u063A\u0648\u0644\u0627",[e.Armenian]:"\u0540\u0561\u0576\u0563\u0561\u056C\u0561\u056F\u0561",[e.Azerbaijani]:"Ang\u0259l",[e.Bashkir]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Basque]:"Angola",[e.Belarusian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Bengali]:"\u0985\u0999\u09CD\u0997\u09B2\u09BE",[e.Berber]:"Angola",[e.Bhutani]:"\u0F60\u0F56\u0FB2\u0F74\u0F42",[e.Bosnian]:"Angola",[e.Breton]:"Angola",[e.Bulgarian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Burmese]:"\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A",[e.Catalan]:"Angola",[e.Chinese]:"\u5B89\u54E5\u62C9",[e.Croatian]:"Angola",[e.Czech]:"Angola",[e.Danish]:"Angola",[e.Dutch]:"Angola",[e.English]:"Angola",[e.Esperanto]:"Angolo",[e.Estonian]:"Angola",[e.Finnish]:"Angola",[e.French]:"Angola",[e.Frisian]:"Angola",[e.Galician]:"Angola",[e.Georgian]:"\u10D0\u10DC\u10D2\u10DD\u10DA\u10D0",[e.German]:"Angola",[e.Greenlandic]:"Angola",[e.Greek]:"\u0391\u03B3\u03BA\u03CC\u03BB\u03B1",[e.Gujarati]:"\u0A85\u0A82\u0A97\u0ACB\u0AB2\u0ABE",[e.Haitian]:"Angola",[e.Hausa]:"Angola",[e.Hebrew]:"\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4",[e.Hindi]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Hungarian]:"Angola",[e.Icelandic]:"Angola",[e.Igbo]:"Angola",[e.Indonesian]:"Angola",[e.Irish]:"Angola",[e.Italian]:"Angola",[e.Japanese]:"\u30A2\u30F3\u30B4\u30E9",[e.Javanese]:"Anggol",[e.Kannada]:"\u0C85\u0C82\u0C97\u0CCB\u0CB2\u0CBE",[e.Kazakh]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Khmer]:"\u17A2\u1784\u17CB\u1780\u17B6\u179B\u17A2\u1784\u17CB\u1782\u17D2\u179B\u17C1\u179F",[e.Korean]:"\uC559\uACE8\uB77C",[e.Kurdish]:"Angola",[e.Kyrgyz]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Lao]:"\u0EAD\u0EB0\u0E99\u0EB2\u0E94\u0EB2",[e.Latin]:"Angola",[e.Latvian]:"Angola",[e.Lithuanian]:"Angola",[e.Luxembourgish]:"Angola",[e.Macedonian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Malagasy]:"Angola",[e.Malay]:"Angola",[e.Malayalam]:"\u0D05\u0D02\u0D17\u0D4B\u0D33\u0D3E",[e.Maltese]:"Angola",[e.Maori]:"Angola",[e.Marathi]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Mongolian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Nepali]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Norwegian]:"Angola",[e.Pashto]:"\u0627\u0646\u06AB\u0648\u0644\u0627",[e.Persian]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Polish]:"Angola",[e.Portuguese]:"Angola",[e.Punjabi]:"\u0A05\u0A19\u0A4D\u0A17\u0A4B\u0A32\u0A3E",[e.Romanian]:"Angole",[e.Russian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Samoan]:"Angola",[e.Sanskrit]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Scots]:"Angola",[e.Serbian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Sesotho]:"Angola",[e.Shona]:"Angola",[e.Sindhi]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Sinhala]:"\u0D86\u0D9C\u0DBD\u0DD2\u0DBA\u0DCF\u0DC0",[e.Slovak]:"Angola",[e.Slovenian]:"Angola",[e.Somali]:"Angola",[e.Spanish]:"Angola",[e.Sudanese]:"Angola",[e.Swahili]:"Angola",[e.Swedish]:"Angola",[e.Tagalog]:"Angola",[e.Tajik]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Tamil]:"\u0B85\u0B99\u0BCD\u0B95\u0BCB\u0BB2\u0BBE",[e.Tatar]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Telugu]:"\u0C05\u0C02\u0C17\u0C4B\u0C32\u0C3E",[e.Thai]:"\u0E2D\u0E07\u0E04\u0E4C\u0E01\u0E32\u0E23\u0E2D\u0E32\u0E19\u0E32\u0E21\u0E34\u0E2A\u0E16\u0E32\u0E19",[e.Tibetan]:"\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B",[e.Turkish]:"Angola",[e.Ukrainian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Urdu]:"\u0627\u0646\u06AF\u0648\u0644\u0627",[e.Uzbek]:"Angola",[e.Vietnamese]:"Angola",[e.Xhosa]:"Angola",[e.Welsh]:"Angola",[e.Yiddish]:"\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4",[e.Yoruba]:"Angola",[e.Zulu]:"Angola"}}},Anguilla:{i18n:{calling_codes:[1264],currencies:[$.DominicaDollar,$.EastCaribbeanDollar,$.Euro,$.UnitedStatesDollar,$.BritishPound],languages:[e.English,e.Spanish],tz:{offsets:[i.UTC_MINUS_4],regions:[r.AmericaAnguilla],timezones:[s.AtlanticStandardTime]}},id:t.Anguilla,info:{flag:{emoji:"\u{1F1E6}\u{1F1EC}",emoji_unicode:"U+1F1E6 U+1F1EC",svg:"https://www.countryflags.io/ai/flat/64.svg"},tld:[".ai"]},iso:{alpha2:t.Anguilla,alpha3:"AIA",numeric:"660"},name:{alt_spellings:["AI"],demonym:"Anguillian",native:{endonym:"Anguilla"},official:"Anguilla",short:"Anguilla",translations:{[e.Afrikaans]:"Anguilla",[e.Albanian]:"Anguilla",[e.Amharic]:"\u12A0\u1295\u1309\u120B",[e.Arabic]:"\u0623\u0646\u063A\u0648\u064A\u0644\u0627",[e.Armenian]:"\u0531\u0576\u0563\u056B\u056C\u0561",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Basque]:"Angila",[e.Belarusian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Bengali]:"\u0985\u0999\u09CD\u0997\u09C0\u09B2\u09BE",[e.Berber]:"\u0623\u0646\u063A\u0648\u064A\u0644\u0627",[e.Bhutani]:"\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B",[e.Bosnian]:"Angila",[e.Breton]:"Angila",[e.Bulgarian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Burmese]:"\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A",[e.Catalan]:"Angilla",[e.Chinese]:"\u5B89\u572D\u62C9",[e.Croatian]:"Angila",[e.Czech]:"Anguilla",[e.Danish]:"Anguilla",[e.Dutch]:"Anguilla",[e.English]:"Anguilla",[e.Esperanto]:"Angila",[e.Estonian]:"Anguilla",[e.Finnish]:"Anguilla",[e.French]:"Anguilla",[e.Frisian]:"Angila",[e.Galician]:"Anguilla",[e.Georgian]:"\u10D0\u10DC\u10D2\u10D8\u10DA\u10D0",[e.German]:"Anguilla",[e.Greenlandic]:"Anguilla",[e.Greek]:"\u0391\u03BD\u03B3\u03BA\u03C5\u03BB\u03AC",[e.Gujarati]:"\u0A85\u0A82\u0A97\u0ACD\u0AAF\u0ABE\u0AB2\u0ABE",[e.Haitian]:"Anguilla",[e.Hausa]:"Anguilla",[e.Hebrew]:"\u05D0\u05E0\u05D2\u05D5\u05D9\u05D0\u05DC\u05D4",[e.Hindi]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Hungarian]:"Anguilla",[e.Icelandic]:"Anguilla",[e.Igbo]:"Anguilla",[e.Indonesian]:"Anguilla",[e.Irish]:"Anguilla",[e.Italian]:"Anguilla",[e.Japanese]:"\u30A2\u30F3\u30AE\u30E9",[e.Javanese]:"Anguilla",[e.Kannada]:"\u0C85\u0C82\u0C97\u0CCD\u0CB5\u0CC7\u0CB2\u0CBE",[e.Kazakh]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Khmer]:"\u17A2\u1784\u17CB\u1780\u17B6\u179A\u17A0\u17D2\u1782\u17B8\u1798",[e.Korean]:"\uC575\uADC8\uB77C",[e.Kurdish]:"Anguilla",[e.Kyrgyz]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Lao]:"\u0EAD\u0EB0\u0E99\u0EB0\u0E88\u0EB3",[e.Latin]:"Anguilla",[e.Latvian]:"Anguilla",[e.Lithuanian]:"Anguilla",[e.Luxembourgish]:"Angilla",[e.Macedonian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Malagasy]:"Angila",[e.Malay]:"Anguilla",[e.Malayalam]:"\u0D05\u0D02\u0D17\u0D4D\u0D35\u0D47\u0D32\u0D3E",[e.Maltese]:"Anguilla",[e.Maori]:"Anguilla",[e.Marathi]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Mongolian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Nepali]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Norwegian]:"Anguilla",[e.Pashto]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Persian]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Polish]:"Anguilla",[e.Portuguese]:"Anguilla",[e.Punjabi]:"\u0A05\u0A02\u0A17\u0A40\u0A32\u0A3E",[e.Romanian]:"Anguilla",[e.Russian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Samoan]:"Anguilla",[e.Sanskrit]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Scots]:"Anguilla",[e.Serbian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Sesotho]:"Anguilla",[e.Shona]:"Anguilla",[e.Sindhi]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Sinhala]:"\u0D86\u0D82\u0D9C\u0DD2\u0DBD\u0DCF\u0DC0",[e.Slovak]:"Anguilla",[e.Slovenian]:"Anguilla",[e.Somali]:"Anguilla",[e.Spanish]:"Anguilla",[e.Sudanese]:"Anguilla",[e.Swahili]:"Anguilla",[e.Swedish]:"Anguilla",[e.Tagalog]:"Anguilla",[e.Tajik]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Tamil]:"\u0B85\u0B99\u0BCD\u0B95\u0BC8\u0BB2\u0BBE",[e.Tatar]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Telugu]:"\u0C05\u0C02\u0C17\u0C4D\u0C35\u0C47\u0C32\u0C3E",[e.Thai]:"\u0E2D\u0E31\u0E07\u0E01\u0E32\u0E25\u0E32",[e.Tibetan]:"\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B",[e.Turkish]:"Anguilla",[e.Ukrainian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Urdu]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Uzbek]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Vietnamese]:"Anguilla",[e.Welsh]:"Anguilla",[e.Xhosa]:"Anguilla",[e.Yiddish]:"Anguilla",[e.Yoruba]:"Anguilla",[e.Zulu]:"Anguilla"}}},Antarctica:{i18n:{calling_codes:[672],currencies:[$.UnitedStatesDollar,$.Euro],languages:[e.English,e.Spanish,e.French,e.Portuguese,e.Italian,e.Dutch,e.German,e.Swedish,e.Norwegian,e.Danish,e.Finnish],tz:{offsets:[i.UTC_PLUS_1,i.UTC_PLUS_2],regions:[r.AntarcticaCasey,r.AntarcticaDavis,r.AntarcticaMcMurdo,r.AntarcticaPalmer,r.AntarcticaRothera],timezones:[s.AtlanticStandardTime,s.CentralTime,s.EasternTime,s.AtlanticStandardTime,s.AzoresStandardTime,s.NewfoundlandStandardTime]}},id:t.Antarctica,info:{flag:{emoji:"\u{1F1E6}\u{1F1F6}",emoji_unicode:"U+1F1E6 U+1F1F6",svg:"https://www.countryflags.io/aq/flat/64.svg"},tld:[".aq"]},iso:{alpha2:t.Antarctica,alpha3:"ATA",numeric:"010"},name:{alt_spellings:["AQ"],demonym:"Antarctican",native:{endonym:"Antarctica"},official:"Antarctica",short:"Antarctica",translations:{[e.Afrikaans]:"Antarctica",[e.Albanian]:"Antarktika",[e.Amharic]:"\u12A0\u1295\u1272\u120D\u12AB\u1293",[e.Arabic]:"\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627",[e.Armenian]:"\u0540\u0561\u0576\u0561\u0580\u0561\u057F\u056F\u0578",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Basque]:"Antarktika",[e.Belarusian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Bengali]:"\u0985\u09A8\u09CD\u09A4\u09B0\u09BE\u09B6\u09CD\u09AC\u09C0",[e.Berber]:"\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627",[e.Bhutani]:"\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B",[e.Bosnian]:"Antarktika",[e.Breton]:"Antarktika",[e.Bulgarian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Burmese]:"\u1021\u1014\u1039\u1010\u102C\u101B\u102E\u1038\u101A\u102C\u1038",[e.Catalan]:"Ant\xE0rtida",[e.Chinese]:"\u5357\u6781\u6D32",[e.Croatian]:"Antarktika",[e.Czech]:"Antarktida",[e.Danish]:"Antarktis",[e.Dutch]:"Antarctica",[e.English]:"Antarctica",[e.Esperanto]:"Antarktika",[e.Estonian]:"Antarktika",[e.Finnish]:"Antarktis",[e.French]:"Antarctica",[e.Frisian]:"Antarktis",[e.Galician]:"Ant\xE1rtida",[e.Georgian]:"\u10D0\u10DC\u10E2\u10D0\u10E0\u10E5\u10E2\u10D8\u10D9\u10D0",[e.German]:"Antarktis",[e.Greenlandic]:"Antarktis",[e.Greek]:"\u0391\u03BD\u03C4\u03B1\u03C1\u03BA\u03C4\u03B9\u03BA\u03AE",[e.Gujarati]:"\u0A85\u0AA8\u0ACD\u0AA4\u0AB0\u0ABE\u0AB6\u0ACD\u0AB5\u0AC0",[e.Haitian]:"Antarctica",[e.Hausa]:"Antarktika",[e.Hebrew]:"\u05D0\u05E0\u05D8\u05E8\u05E7\u05D8\u05D9\u05E7\u05D4",[e.Hindi]:"\u0905\u0928\u094D\u0924\u0930\u0915\u094D\u0937\u0947\u0924\u094D\u0930",[e.Hungarian]:"Antarktika",[e.Icelandic]:"Antarktis",[e.Igbo]:"Antarktika",[e.Indonesian]:"Antarktika",[e.Irish]:"Antarktika",[e.Italian]:"Antartide",[e.Japanese]:"\u5357\u6975",[e.Javanese]:"Antarktika",[e.Kannada]:"\u0C85\u0CA8\u0CCD\u0CA4\u0CB0\u0CBE\u0CB6\u0CCD\u0CB5\u0CBF",[e.Kazakh]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Khmer]:"\u17A2\u1784\u17CB\u179F\u17D2\u1780\u179A\u17A2\u17B6\u1798\u17C9\u17BB\u1799",[e.Korean]:"\uC564\uD2F0\uCE74\uD1A0\uB2C9",[e.Kurdish]:"Antarktika",[e.Kyrgyz]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Lao]:"\u0EAD\u0EB0\u0E99\u0EAD\u0EA5\u0EB2\u0E81\u0EB4\u0EAA\u0EB0",[e.Latin]:"Antarctica",[e.Latvian]:"Antarktika",[e.Lithuanian]:"Antarktis",[e.Luxembourgish]:"Antarktis",[e.Macedonian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Malagasy]:"Antarctica",[e.Malay]:"Antarktika",[e.Malayalam]:"\u0D05\u0D28\u0D4D\u0D24\u0D30\u0D3E\u0D36\u0D4D\u0D35\u0D3F",[e.Maltese]:"Antarktika",[e.Maori]:"Antarktika",[e.Marathi]:"\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E",[e.Mongolian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Nepali]:"\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E",[e.Norwegian]:"Antarktis",[e.Pashto]:"\u0627\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627",[e.Persian]:"\u0622\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627",[e.Polish]:"Antarktyka",[e.Portuguese]:"Ant\xE1rtida",[e.Punjabi]:"\u0A05\u0A28\u0A4D\u0A24\u0A30\u0A3E\u0A36\u0A3F\u0A15\u0A3E",[e.Romanian]:"Antarctica",[e.Russian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Samoan]:"Antarktika",[e.Sanskrit]:"\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E",[e.Scots]:"Antarktika",[e.Serbian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Sesotho]:"Antarktika",[e.Shona]:"Antarktika",[e.Sindhi]:"Antarktika",[e.Sinhala]:"\u0D86\u0DB1\u0DCA\u0DA7\u0DCA\u0DA7\u0DD2\u0D9A\u0DCF\u0DC0",[e.Slovak]:"Antarktika",[e.Slovenian]:"Antarktika",[e.Somali]:"Antarktika",[e.Spanish]:"Ant\xE1rtida",[e.Sudanese]:"Antarktika",[e.Swahili]:"Antarktika",[e.Swedish]:"Antarktis",[e.Tagalog]:"Antarktika",[e.Tajik]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Tamil]:"\u0B85\u0BA9\u0BCD\u0BA4\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BBF\u0B95\u0BCD",[e.Tatar]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Telugu]:"\u0C05\u0C28\u0C4D\u0C24\u0C30\u0C3E\u0C36\u0C4D\u0C35\u0C3F\u0C15\u0C3E",[e.Thai]:"\u0E20\u0E39\u0E21\u0E34\u0E20\u0E32\u0E04\u0E2D\u0E32\u0E19\u0E31\u0E19\u0E15\u0E34\u0E01\u0E32",[e.Tibetan]:"\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72\u0F0B\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72",[e.Turkish]:"Antarktika",[e.Ukrainian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Urdu]:"\u0627\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627",[e.Uzbek]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Vietnamese]:"\u0110\u1EA5t Antarktik",[e.Welsh]:"Antarktika",[e.Xhosa]:"Antarktika",[e.Yiddish]:"Antarktika",[e.Yoruba]:"Antarktika",[e.Zulu]:"Antarktika"}}},Armenia:{i18n:{calling_codes:[374],currencies:[$.ArmeniaDram],languages:[e.Armenian],tz:{offsets:[i.UTC_PLUS_4],regions:[r.AsiaJakarta],timezones:[s.ArmeniaTime]}},id:t.Armenia,info:{flag:{emoji:"\u{1F1E6}\u{1F1F2}",emoji_unicode:"U+1F1E6 U+1F1F2",svg:"https://www.countryflags.io/am/flat/64.svg"},tld:[".am"]},iso:{alpha2:t.Armenia,alpha3:"ARM",numeric:"051"},name:{alt_spellings:["AM","Hayastan","Republic of Armenia","\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"],demonym:"Armenian",native:{endonym:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"},official:"Republic of Armenia",short:"Armenia",translations:{[e.Afrikaans]:"Armeni\xEB",[e.Albanian]:"Armenia",[e.Amharic]:"\u12A0\u121B\u122D\u129B",[e.Arabic]:"\u0623\u0631\u0645\u064A\u0646\u064A\u0627",[e.Armenian]:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Basque]:"Arm\xE9nia",[e.Belarusian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Bengali]:"\u0986\u09B0\u09CD\u09AE\u09C7\u09A8\u09BF",[e.Berber]:"\u0623\u0631\u0645\u064A\u0646\u064A\u0627",[e.Bhutani]:"\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42",[e.Bosnian]:"Armenija",[e.Breton]:"Armeni\xEB",[e.Bulgarian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Burmese]:"\u1021\u102C\u1019\u1010\u102D\u1010\u1039",[e.Catalan]:"Arm\xE8nia",[e.Chinese]:"\u4E9A\u7F8E\u5C3C\u4E9A",[e.Croatian]:"Armenija",[e.Czech]:"Arm\xE9nie",[e.Danish]:"Armenien",[e.Dutch]:"Armeni\xEB",[e.English]:"Armenia",[e.Esperanto]:"Armenia",[e.Estonian]:"Armeenia",[e.Finnish]:"Armenia",[e.French]:"Armenia",[e.Frisian]:"Armeenia",[e.Galician]:"Arm\xE9nia",[e.Georgian]:"\u10D0\u10E0\u10DB\u10DD\u10DC\u10D8",[e.German]:"Armenien",[e.Greenlandic]:"Armenia",[e.Greek]:"\u0391\u03C1\u03BC\u03B5\u03BD\u03AF\u03B1",[e.Gujarati]:"\u0A85\u0AB0\u0ACD\u0AAE\u0AC7\u0AA8\u0ABF",[e.Haitian]:"Armenia",[e.Hausa]:"Armenia",[e.Hebrew]:"\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4",[e.Hindi]:"\u0905\u05E8\u05DE\u05E0\u093F\u092F\u093E",[e.Hungarian]:"\xD6rm\xE9nyorsz\xE1g",[e.Icelandic]:"Armenia",[e.Igbo]:"Armenia",[e.Indonesian]:"Armenia",[e.Irish]:"Armenia",[e.Italian]:"Armenia",[e.Japanese]:"\u30A2\u30EB\u30E1\u30CB\u30A2",[e.Javanese]:"Armenia",[e.Kannada]:"\u0C85\u0CB0\u0CCD\u0CAE\u0CC7\u0CA8\u0CBF",[e.Kazakh]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Khmer]:"\u17A2\u17B6\u1798\u17C9\u17C1\u179A\u17B8",[e.Korean]:"\uC544\uB974\uBA54\uB2C8\uC544",[e.Kurdish]:"Armenia",[e.Kyrgyz]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Lao]:"\u0EAD\u0EB2\u0EAB\u0EBC\u0E99\u0EB2",[e.Latin]:"Armenia",[e.Latvian]:"Armeenia",[e.Lithuanian]:"Arm\u0117nija",[e.Luxembourgish]:"Armenien",[e.Macedonian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430",[e.Malagasy]:"Armenia",[e.Malay]:"Armenia",[e.Malayalam]:"\u0D05\u0D30\u0D4D\u200D\u0D2E\u0D47\u0D28\u0D3F",[e.Maltese]:"Armenia",[e.Maori]:"Armenia",[e.Marathi]:"\u0905\u0930\u094D\u092E\u0947\u0928\u093F",[e.Mongolian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Nepali]:"\u0905\u0930\u094D\u092E\u0947\u0928\u093F",[e.Norwegian]:"Armenia",[e.Pashto]:"\u0622\u0631\u0645\u06CC\u0646\u06CC\u0627",[e.Persian]:"\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646",[e.Polish]:"Armenia",[e.Portuguese]:"Armenia",[e.Punjabi]:"\u0A05\u0A30\u0A2E\u0A40\u0A28\u0A40",[e.Romanian]:"Armenia",[e.Russian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Samoan]:"Armenia",[e.Sanskrit]:"Armenia",[e.Scots]:"Armenia",[e.Serbian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430",[e.Sesotho]:"Armenia",[e.Shona]:"Armenia",[e.Sindhi]:"Armenia",[e.Sinhala]:"\u0D86\u0DBB\u0DCA\u0DB8\u0DD3\u0DB1\u0DD2",[e.Slovak]:"Armenia",[e.Slovenian]:"Armenija",[e.Somali]:"Armenia",[e.Spanish]:"Armenia",[e.Sudanese]:"Armenia",[e.Swahili]:"Armenia",[e.Swedish]:"Armenien",[e.Tagalog]:"Armenia",[e.Tajik]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Tamil]:"\u0B85\u0BB0\u0BCD\u0BAE\u0BC7\u0BA9\u0BBF\u0BAF\u0BA9\u0BCD",[e.Tatar]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Telugu]:"\u0C05\u0C30\u0C4D\u0C2E\u0C47\u0C28\u0C3F",[e.Thai]:"\u0E2D\u0E32\u0E23\u0E4C\u0E40\u0E21\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19",[e.Tibetan]:"\u0F68\u0F62\u0F0B\u0F58\u0F7A\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F74\u0F0D",[e.Turkish]:"Ermenistan",[e.Ukrainian]:"\u0410\u0440\u043C\u0435\u043D\u0456\u044F",[e.Urdu]:"\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646",[e.Uzbek]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Vietnamese]:"Armenia",[e.Welsh]:"Armenia",[e.Xhosa]:"Armenia",[e.Yiddish]:"\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4",[e.Yoruba]:"Armenia",[e.Zulu]:"Armenia"}}},SomeCountry:{i18n:{calling_codes:[],currencies:[],languages:[],tz:{offsets:[],regions:[],timezones:[]}},id:t.AmericanSamoa,info:{flag:{emoji:"",emoji_unicode:"",svg:""},tld:[]},iso:{alpha2:t.AmericanSamoa,alpha3:"",numeric:""},name:{alt_spellings:[],demonym:"",native:{endonym:""},official:"",short:"",translations:{[e.Afrikaans]:"",[e.Albanian]:"",[e.Amharic]:"",[e.Arabic]:"",[e.Armenian]:"",[e.Azerbaijani]:"",[e.Bashkir]:"",[e.Basque]:"",[e.Belarusian]:"",[e.Bengali]:"",[e.Berber]:"",[e.Bhutani]:"",[e.Bosnian]:"",[e.Breton]:"",[e.Bulgarian]:"",[e.Burmese]:"",[e.Catalan]:"",[e.Chinese]:"",[e.Croatian]:"",[e.Czech]:"",[e.Danish]:"",[e.Dutch]:"",[e.English]:"",[e.Esperanto]:"",[e.Estonian]:"",[e.Finnish]:"",[e.French]:"",[e.Frisian]:"",[e.Galician]:"",[e.Georgian]:"",[e.German]:"",[e.Greenlandic]:"",[e.Greek]:"",[e.Gujarati]:"",[e.Haitian]:"",[e.Hausa]:"",[e.Hebrew]:"",[e.Hindi]:"",[e.Hungarian]:"",[e.Icelandic]:"",[e.Igbo]:"",[e.Indonesian]:"",[e.Irish]:"",[e.Italian]:"",[e.Japanese]:"",[e.Javanese]:"",[e.Kannada]:"",[e.Kazakh]:"",[e.Khmer]:"",[e.Korean]:"",[e.Kurdish]:"",[e.Kyrgyz]:"",[e.Lao]:"",[e.Latin]:"",[e.Latvian]:"",[e.Lithuanian]:"",[e.Luxembourgish]:"",[e.Macedonian]:"",[e.Malagasy]:"",[e.Malay]:"",[e.Malayalam]:"",[e.Maltese]:"",[e.Maori]:"",[e.Marathi]:"",[e.Mongolian]:"",[e.Nepali]:"",[e.Norwegian]:"",[e.Pashto]:"",[e.Persian]:"",[e.Polish]:"",[e.Portuguese]:"",[e.Punjabi]:"",[e.Romanian]:"",[e.Russian]:"",[e.Samoan]:"",[e.Sanskrit]:"",[e.Scots]:"",[e.Serbian]:"",[e.Sesotho]:"",[e.Shona]:"",[e.Sindhi]:"",[e.Sinhala]:"",[e.Slovak]:"",[e.Slovenian]:"",[e.Somali]:"",[e.Spanish]:"",[e.Sudanese]:"",[e.Swahili]:"",[e.Swedish]:"",[e.Tagalog]:"",[e.Tajik]:"",[e.Tamil]:"",[e.Tatar]:"",[e.Telugu]:"",[e.Thai]:"",[e.Tibetan]:"",[e.Turkish]:"",[e.Ukrainian]:"",[e.Urdu]:"",[e.Uzbek]:"",[e.Vietnamese]:"",[e.Welsh]:"",[e.Xhosa]:"",[e.Yiddish]:"",[e.Yoruba]:"",[e.Zulu]:""}}}},mm={id:e.Afrikaans,language:{code:o.Afrikaans,name:"Afrikaans",native:"Afrikaans"},name:"Afrikaans",native_name:"Afrikaans",rtl:!1},Am={country:{code:t.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.AfrikaansSouthAfrica,language:{code:o.Afrikaans,name:"Afrikaans",native:"Afrikaans"},name:"Afrikaans (South Africa)",native_name:"Afrikaans (Suid-Afrika)",rtl:!1},fm={id:e.Albanian,language:{code:o.Albanian,name:"Albanian",native:"Shqip"},name:"Albanian",native_name:"Shqip",rtl:!1},dm={country:{code:t.Albania,name:"Albania",native:"Shqip\xEBria"},id:e.AlbanianAlbania,language:{code:o.Albanian,name:"Albanian",native:"Shqip"},name:"Albanian (Albania)",native_name:"Shqip (Shqip\xEBria)",rtl:!1},gm={id:e.Amharic,language:{code:o.Amharic,name:"Amharic",native:"\u12A0\u121B\u122D\u129B"},name:"Amharic",native_name:"\u12A0\u121B\u122D\u129B",rtl:!1},hm={country:{code:t.Ethiopia,name:"Ethiopia",native:"\u12A2\u1275\u12EE\u1335\u12EB"},id:e.AmharicEthiopia,language:{code:o.Amharic,name:"Amharic",native:"\u12A0\u121B\u122D\u129B"},name:"Amharic (Ethiopia)",native_name:"\u12A0\u121B\u122D\u129B (\u12A2\u1275\u12EE\u1335\u12EB)",rtl:!1},Im={id:e.Arabic,language:{code:o.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629",rtl:!0},_m={country:{code:t.Algeria,name:"Algeria",native:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631"},id:e.ArabicAlgeria,language:{code:o.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Algeria)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u062C\u0632\u0627\u0626\u0631)",rtl:!0},pm={country:{code:t.Bahrain,name:"Bahrain",native:"\u0627\u0644\u0628\u062D\u0631\u064A\u0646"},id:e.ArabicBahrain,language:{code:o.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Bahrain)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0628\u062D\u0631\u064A\u0646)",rtl:!0},Em={country:{code:t.Egypt,name:"Egypt",native:"\u0645\u0635\u0631"},id:e.ArabicEgypt,language:{code:o.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Egypt)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0645\u0635\u0631)",rtl:!0},Sm={country:{code:t.Iraq,name:"Iraq",native:"\u0627\u0644\u0639\u0631\u0627\u0642"},id:e.ArabicIraq,language:{code:o.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Iraq)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0639\u0631\u0627\u0642)",rtl:!0},Tm={country:{code:t.Jordan,name:"Jordan",native:"\u0627\u0644\u0623\u0631\u062F\u0646"},id:e.ArabicJordan,language:{code:o.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Jordan)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0623\u0631\u062F\u0646)",rtl:!0},vm={country:{code:t.Kuwait,name:"Kuwait",native:"\u0627\u0644\u0643\u0648\u064A\u062A"},id:e.ArabicKuwait,language:{code:o.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Kuwait)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0643\u0648\u064A\u062A)",rtl:!0},bm={country:{code:t.Lebanon,name:"Lebanon",native:"\u0644\u0628\u0646\u0627\u0646"},id:e.ArabicLebanon,language:{code:o.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Lebanon)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u0628\u0646\u0627\u0646)",rtl:!0},Bm={country:{code:t.Libya,name:"Libya",native:"\u0644\u064A\u0628\u064A\u0627"},id:e.ArabicLibya,language:{code:o.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Libya)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u064A\u0628\u064A\u0627)",rtl:!0},Um={country:{code:t.Morocco,name:"Morocco",native:"\u0627\u0644\u0645\u063A\u0631\u0628"},id:e.ArabicMorocco,language:{code:o.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Morocco)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u063A\u0631\u0628)",rtl:!0},Nm={country:{code:t.Oman,name:"Oman",native:"\u0639\u0645\u0627\u0646"},id:e.ArabicOman,language:{code:o.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Oman)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0639\u0645\u0627\u0646)",rtl:!0},ym={country:{code:t.Qatar,name:"Qatar",native:"\u0642\u0637\u0631"},id:e.ArabicQatar,language:{code:o.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Qatar)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0642\u0637\u0631)",rtl:!0},Dm={country:{code:t.SaudiArabia,name:"Saudi Arabia",native:"\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629"},id:e.ArabicSaudiArabia,language:{code:o.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Saudi Arabia)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629)",rtl:!0},Pm={country:{code:t.Tunisia,name:"Tunisia",native:"\u062A\u0648\u0646\u0633"},id:e.ArabicTunisia,language:{code:o.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Tunisia)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u062A\u0648\u0646\u0633)",rtl:!0},Fm={country:{code:t.UnitedArabEmirates,name:"United Arab Emirates",native:"\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629"},id:e.ArabicUnitedArabEmirates,language:{code:o.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (United Arab Emirates)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629)",rtl:!0},Mm={country:{code:t.Yemen,name:"Yemen",native:"\u0627\u0644\u064A\u0645\u0646"},id:e.ArabicYemen,language:{code:o.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Yemen)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u064A\u0645\u0646)",rtl:!0},km={id:e.Armenian,language:{code:o.Armenian,name:"Armenian",native:"\u0540\u0561\u0575\u0565\u0580\u0565\u0576"},name:"Armenian",native_name:"\u0540\u0561\u0575\u0565\u0580\u0565\u0576",rtl:!1},Lm={country:{code:t.Armenia,name:"Armenia",native:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"},id:e.ArmenianArmenia,language:{code:o.Armenian,name:"Armenian",native:"\u0570\u0561\u0575\u0565\u0580\u0565\u0576"},name:"Armenian (Armenia)",native_name:"\u0570\u0561\u0575\u0565\u0580\u0565\u0576 (\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576)",rtl:!1},wm={id:e.Azerbaijani,language:{code:o.Azerbaijani,name:"Azeribaijani",native:"Az\u0259rbaycan"},name:"Azeri",native_name:"Az\u0259rbaycan",rtl:!1},Gm={country:{code:t.Azerbaijan,name:"Azerbaijan",native:"Az\u0259rbaycan"},id:e.AzerbaijaniAzerbaijan,language:{code:o.Azerbaijani,name:"Azerbaijani",native:"Az\u0259rbaycan"},name:"Azeri (Azerbaijan)",native_name:"Az\u0259rbaycan (Az\u0259rbaycan)",rtl:!1},xm={id:e.Basque,language:{code:o.Basque,name:"Basque",native:"Euskara"},name:"Basque",native_name:"Euskara",rtl:!1},Om={country:{code:t.Spain,name:"Spain",native:"Espa\xF1a"},id:e.BasqueSpain,language:{code:o.Basque,name:"Basque",native:"Euskara"},name:"Basque (Spain)",native_name:"Euskara (Espa\xF1a)",rtl:!1},qm={id:e.Belarusian,language:{code:o.Belarusian,name:"Belarusian",native:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F"},name:"Belarusian",native_name:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F",rtl:!1},Km={country:{code:t.Belarus,name:"Belarus",native:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C"},id:e.BelarusianBelarus,language:{code:o.Belarusian,name:"Belarusian",native:"\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F"},name:"Belarusian (Belarus)",native_name:"\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F (\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C)",rtl:!1},jm={id:e.Bengali,language:{code:o.Bengali,name:"Bengali",native:"\u09AC\u09BE\u0982\u09B2\u09BE"},name:"Bengali",native_name:"\u09AC\u09BE\u0982\u09B2\u09BE",rtl:!1},Hm={country:{code:t.Bangladesh,name:"Bangladesh",native:"\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6"},id:e.BengaliBangladesh,language:{code:o.Bengali,name:"Bengali",native:"\u09AC\u09BE\u0982\u09B2\u09BE"},name:"Bengali (Bangladesh)",native_name:"\u09AC\u09BE\u0982\u09B2\u09BE (\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6)",rtl:!1},Rm={id:e.Bhutani,language:{code:o.Bhutani,name:"Bhutani",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Bhutani",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42",rtl:!1},Wm={country:{code:t.Bhutan,name:"Bhutan",native:"\u0F60\u0F56\u0FB2\u0F74\u0F42"},id:e.BhutaniBhutan,language:{code:o.Bhutani,name:"Bhutani",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Bhutani (Bhutan)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42)",rtl:!1},Vm={id:e.Bulgarian,language:{code:o.Bulgarian,name:"Bulgarian",native:"\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438"},name:"Bulgarian",native_name:"\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438",rtl:!1},zm={country:{code:t.Bulgaria,name:"Bulgaria",native:"\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F"},id:e.BulgarianBulgaria,language:{code:o.Bulgarian,name:"Bulgarian",native:"\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438"},name:"Bulgarian (Bulgaria)",native_name:"\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438 (\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F)",rtl:!1},Ym={id:e.Burmese,language:{code:o.Burmese,name:"Burmese",native:"\u1017\u1019\u102C\u1005\u102C"},name:"Burmese",native_name:"\u1017\u1019\u102C\u1005\u102C",rtl:!1},Jm={country:{code:t.Myanmar,name:"Myanmar",native:"\u1019\u103C\u1014\u103A\u1019\u102C"},id:e.BurmeseMyanmar,language:{code:o.Burmese,name:"Burmese",native:"\u1017\u1019\u102C\u1005\u102C"},name:"Burmese (Myanmar)",native_name:"\u1017\u1019\u102C\u1005\u102C (\u1019\u103C\u1014\u103A\u1019\u102C)",rtl:!1},$m={id:e.Cantonese,language:{code:o.Cantonese,name:"Cantonese",native:"\u5EE3\u6771\u8A71"},name:"Cantonese",native_name:"\u5EE3\u6771\u8A71",rtl:!1},Zm={country:{code:t.HongKong,name:"Hong Kong",native:"\u9999\u6E2F"},id:e.CantoneseHongKong,language:{code:o.Cantonese,name:"Cantonese",native:"\u5EE3\u6771\u8A71"},name:"Cantonese (Hong Kong)",native_name:"\u5EE3\u6771\u8A71 (\u9999\u6E2F)",rtl:!1},Cm={id:e.Catalan,language:{code:o.Catalan,name:"Catalan",native:"Catal\xE0"},name:"Catalan",native_name:"Catal\xE0",rtl:!1},Qm={country:{code:t.Spain,name:"Spain",native:"Espa\xF1a"},id:e.CatalanSpain,language:{code:o.Catalan,name:"Catalan",native:"Catal\xE0"},name:"Catalan (Spain)",native_name:"Catal\xE0 (Espanya)",rtl:!1},Xm={id:e.ChineseSimplified,language:{code:o.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified)",native_name:"\u4E2D\u6587",rtl:!1},aA={country:{code:t.China,name:"China",native:"\u4E2D\u56FD"},id:e.ChineseSimplifiedChina,language:{code:o.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/China)",native_name:"\u4E2D\u6587 (\u4E2D\u56FD)",rtl:!1},eA={country:{code:t.HongKong,name:"Hong Kong",native:"\u9999\u6E2F"},id:e.ChineseSimplifiedHongKong,language:{code:o.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/Hong Kong)",native_name:"\u4E2D\u6587 (\u9999\u6E2F)",rtl:!1},nA={country:{code:t.Macau,name:"Macau",native:"\u6FB3\u9580"},id:e.ChineseSimplifiedMacau,language:{code:o.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/Macau)",native_name:"\u4E2D\u6587 (\u6FB3\u9580)",rtl:!1},iA={country:{code:t.Singapore,name:"Singapore",native:"\u65B0\u52A0\u5761"},id:e.ChineseSimplifiedSingapore,language:{code:o.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/Singapore)",native_name:"\u4E2D\u6587 (\u65B0\u52A0\u5761)",rtl:!1},sA={id:e.ChineseTraditional,language:{code:o.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Traditional)",native_name:"\u4E2D\u6587",rtl:!1},rA={country:{code:t.HongKong,name:"Hong Kong",native:"\u9999\u6E2F"},id:e.ChineseTraditionalHongKong,language:{code:o.Chinese,name:"Chinese (Traditional/Hong Kong)",native:"\u4E2D\u6587"},name:"Chinese (Hong Kong)",native_name:"\u4E2D\u6587 (\u9999\u6E2F)",rtl:!1},uA={country:{code:t.Macau,name:"Macau",native:"\u6FB3\u9580"},id:e.ChineseTraditionalMacau,language:{code:o.Chinese,name:"Chinese (Traditional/Macau)",native:"\u4E2D\u6587"},name:"Chinese (Macau)",native_name:"\u4E2D\u6587 (\u6FB3\u9580)",rtl:!1},tA={country:{code:t.Singapore,name:"Singapore",native:"\u65B0\u52A0\u5761"},id:e.ChineseTraditionalSingapore,language:{code:o.Chinese,name:"Chinese (Traditional/Singapore)",native:"\u4E2D\u6587"},name:"Chinese (Singapore)",native_name:"\u4E2D\u6587 (\u65B0\u52A0\u5761)",rtl:!1},lA={id:e.Croatian,language:{code:o.Croatian,name:"Croatian",native:"Hrvatski"},name:"Croatian",native_name:"Hrvatski",rtl:!1},oA={country:{code:t.BosniaAndHerzegovina,name:"Bosnia and Herzegovina",native:"Bosna i Hercegovina"},id:e.CroatianBosniaAndHerzegovina,language:{code:o.Croatian,name:"Croatian",native:"Hrvatski"},name:"Croatian (Bosnia and Herzegovina)",native_name:"Hrvatski (Bosna i Hercegovina)",rtl:!1},cA={country:{code:t.Croatia,name:"Croatia",native:"Hrvatska"},id:e.CroatianCroatia,language:{code:o.Croatian,name:"Croatian",native:"Hrvatski"},name:"Croatian (Croatia)",native_name:"Hrvatski (Hrvatska)",rtl:!1},mA={id:e.Czech,language:{code:o.Czech,name:"Czech",native:"\u010Ce\u0161tina"},name:"Czech",native_name:"\u010Ce\u0161tina",rtl:!1},AA={country:{code:t.CzechRepublic,name:"Czech Republic",native:"\u010Cesk\xE1 republika"},id:e.CzechCzechRepublic,language:{code:o.Czech,name:"Czech",native:"\u010Ce\u0161tina"},name:"Czech (Czech Republic)",native_name:"\u010Ce\u0161tina (\u010Cesk\xE1 republika)",rtl:!1},fA={id:e.Danish,language:{code:o.Danish,name:"Danish",native:"Dansk"},name:"Danish",native_name:"Dansk",rtl:!1},dA={country:{code:t.Denmark,name:"Denmark",native:"Danmark"},id:e.DanishDenmark,language:{code:o.Danish,name:"Danish",native:"Dansk"},name:"Danish (Denmark)",native_name:"Dansk (Danmark)",rtl:!1},gA={id:e.Divehi,language:{code:o.Divehi,name:"Divehi",native:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0"},name:"Divehi",native_name:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0",rtl:!0},hA={country:{code:t.Maldives,name:"Maldives",native:"\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC"},id:e.DivehiMaldives,language:{code:o.Divehi,name:"Divehi",native:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0"},name:"Divehi (Maldives)",native_name:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0 (\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC)",rtl:!0},IA={id:e.Dutch,language:{code:o.Dutch,name:"Dutch",native:"Nederlands"},name:"Dutch",native_name:"Nederlands",rtl:!1},_A={country:{code:t.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.DutchBelgium,language:{code:o.Dutch,name:"Dutch",native:"Nederlands"},name:"Dutch (Belgium)",native_name:"Nederlands (Belgi\xEB)",rtl:!1},pA={country:{code:t.Netherlands,name:"Netherlands",native:"Nederland"},id:e.DutchNetherlands,language:{code:o.Dutch,name:"Dutch",native:"Nederlands"},name:"Dutch (Netherlands)",native_name:"Nederlands (Nederland)",rtl:!1},EA={id:e.English,language:{code:o.English,name:"English",native:"English"},name:"English",native_name:"English",rtl:!1},SA={country:{code:t.Australia,name:"Australia",native:"Australia"},id:e.EnglishAustralia,language:{code:o.English,name:"English",native:"English"},name:"English (Australia)",native_name:"English (Australia)",rtl:!1},TA={country:{code:t.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.EnglishBelgium,language:{code:o.English,name:"English",native:"English"},name:"English (Belgium)",native_name:"English (Belgi\xEB)",rtl:!1},vA={country:{code:t.Canada,name:"Canada",native:"Canada"},id:e.EnglishCanada,language:{code:o.English,name:"English",native:"English"},name:"English (Canada)",native_name:"English (Canada)",rtl:!1},bA={country:{code:t.Ireland,name:"Ireland",native:"\xC9ire"},id:e.EnglishIreland,language:{code:o.English,name:"English",native:"English"},name:"English (Ireland)",native_name:"English (\xC9ire)",rtl:!1},BA={country:{code:t.Jamaica,name:"Jamaica",native:"Jamaica"},id:e.EnglishJamaica,language:{code:o.English,name:"English",native:"English"},name:"English (Jamaica)",native_name:"English (Jamaica)",rtl:!1},UA={country:{code:t.NewZealand,name:"New Zealand",native:"New Zealand"},id:e.EnglishNewZealand,language:{code:o.English,name:"English",native:"English"},name:"English (New Zealand)",native_name:"English (New Zealand)",rtl:!1},NA={country:{code:t.Philippines,name:"Philippines",native:"Philippines"},id:e.EnglishPhilippines,language:{code:o.English,name:"English",native:"English"},name:"English (Philippines)",native_name:"English (Philippines)",rtl:!1},yA={country:{code:t.Singapore,name:"Singapore",native:"Singapore"},id:e.EnglishSingapore,language:{code:o.English,name:"English",native:"English"},name:"English (Singapore)",native_name:"English (Singapore)",rtl:!1},DA={country:{code:t.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.EnglishSouthAfrica,language:{code:o.English,name:"English",native:"English"},name:"English (South Africa)",native_name:"English (South Africa)",rtl:!1},PA={country:{code:t.TrinidadAndTobago,name:"Trinidad and Tobago",native:"Trinidad and Tobago"},id:e.EnglishTrinidadAndTobago,language:{code:o.English,name:"English",native:"English"},name:"English (Trinidad and Tobago)",native_name:"English (Trinidad and Tobago)",rtl:!1},FA={country:{code:t.UnitedKingdom,name:"United Kingdom",native:"United Kingdom"},id:e.EnglishUnitedKingdom,language:{code:o.English,name:"English",native:"English"},name:"English (United Kingdom)",native_name:"English (United Kingdom)",rtl:!1},MA={country:{code:t.UnitedStates,name:"United States",native:"United States"},id:e.EnglishUnitedStates,language:{code:o.English,name:"English",native:"English"},name:"English (United States)",native_name:"English (United States)",rtl:!1},kA={country:{code:t.Zimbabwe,name:"Zimbabwe",native:"Zimbabwe"},id:e.EnglishZimbabwe,language:{code:o.English,name:"English",native:"English"},name:"English (Zimbabwe)",native_name:"English (Zimbabwe)",rtl:!1},LA={id:e.Esperanto,language:{code:o.Esperanto,name:"Esperanto",native:"Esperanto"},name:"Esperanto",native_name:"Esperanto",rtl:!1},wA={id:e.Estonian,language:{code:o.Estonian,name:"Estonian",native:"Eesti"},name:"Estonian",native_name:"Eesti",rtl:!1},GA={country:{code:t.Estonia,name:"Estonia",native:"Eesti"},id:e.EstonianEstonia,language:{code:o.Estonian,name:"Estonian",native:"Eesti"},name:"Estonian (Estonia)",native_name:"Eesti (Eesti)",rtl:!1},xA={id:e.Faroese,language:{code:o.Faroese,name:"Faroese",native:"F\xF8royskt"},name:"Faroese",native_name:"F\xF8royskt",rtl:!1},OA={country:{code:t.FaroeIslands,name:"Faroe Islands",native:"F\xF8royar"},id:e.FaroeseFaroeIslands,language:{code:o.Faroese,name:"Faroese",native:"F\xF8royskt"},name:"Faroese (Faroe Islands)",native_name:"F\xF8royskt (F\xF8royar)",rtl:!1},qA={id:e.Farsi,language:{code:o.Farsi,name:"Farsi",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Farsi",native_name:"\u0641\u0627\u0631\u0633\u06CC",rtl:!0},KA={country:{code:t.Iran,name:"Iran",native:"\u0627\u06CC\u0631\u0627\u0646"},id:e.FarsiIran,language:{code:o.Farsi,name:"Farsi",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Farsi (Iran)",native_name:"\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)",rtl:!0},jA={id:e.Filipino,language:{code:o.Filipino,name:"Filipino",native:"Filipino"},name:"Filipino",native_name:"Filipino",rtl:!1},HA={country:{code:t.Philippines,name:"Philippines",native:"Pilipinas"},id:e.FilipinoPhilippines,language:{code:o.Filipino,name:"Filipino",native:"Filipino"},name:"Filipino (Philippines)",native_name:"Filipino (Pilipinas)",rtl:!1},RA={id:e.Finnish,language:{code:o.Finnish,name:"Finnish",native:"Suomi"},name:"Finnish",native_name:"Suomi",rtl:!1},WA={country:{code:t.Finland,name:"Finland",native:"Suomi"},id:e.FinnishFinland,language:{code:o.Finnish,name:"Finnish",native:"Suomi"},name:"Finnish (Finland)",native_name:"Suomi (Suomi)",rtl:!1},VA={id:e.French,language:{code:o.French,name:"French",native:"Fran\xE7ais"},name:"French",native_name:"Fran\xE7ais",rtl:!1},zA={country:{code:t.Belgium,name:"Belgium",native:"Belgique"},id:e.FrenchBelgium,language:{code:o.French,name:"French",native:"Fran\xE7ais"},name:"French (Belgium)",native_name:"Fran\xE7ais (Belgique)",rtl:!1},YA={country:{code:t.Canada,name:"Canada",native:"Canada"},id:e.FrenchCanada,language:{code:o.French,name:"French",native:"Fran\xE7ais"},name:"French (Canada)",native_name:"Fran\xE7ais (Canada)",rtl:!1},JA={country:{code:t.France,name:"France",native:"France"},id:e.FrenchFrance,language:{code:o.French,name:"French",native:"Fran\xE7ais"},name:"French (France)",native_name:"Fran\xE7ais (France)",rtl:!1},$A={country:{code:t.Luxembourg,name:"Luxembourg",native:"Luxembourg"},id:e.FrenchLuxembourg,language:{code:o.French,name:"French",native:"Fran\xE7ais"},name:"French (Luxembourg)",native_name:"Fran\xE7ais (Luxembourg)",rtl:!1},ZA={country:{code:t.Monaco,name:"Monaco",native:"Monaco"},id:e.FrenchMonaco,language:{code:o.French,name:"French",native:"Fran\xE7ais"},name:"French (Monaco)",native_name:"Fran\xE7ais (Monaco)",rtl:!1},CA={country:{code:t.Reunion,name:"Reunion",native:"La R\xE9union"},id:e.FrenchReunion,language:{code:o.French,name:"French",native:"Fran\xE7ais"},name:"French (Reunion)",native_name:"Fran\xE7ais (La R\xE9union)",rtl:!1},QA={country:{code:t.Switzerland,name:"Switzerland",native:"Suisse"},id:e.FrenchSwitzerland,language:{code:o.French,name:"French",native:"Fran\xE7ais"},name:"French (Switzerland)",native_name:"Fran\xE7ais (Suisse)",rtl:!1},XA={id:e.Frisian,language:{code:o.Frisian,name:"Frisian",native:"Frysk"},name:"Frisian",native_name:"Frysk",rtl:!1},af={country:{code:t.Netherlands,name:"Netherlands",native:"Nederland"},id:e.FrisianNetherlands,language:{code:o.Frisian,name:"Frisian",native:"Frysk"},name:"Frisian (Netherlands)",native_name:"Frysk (Nederland)",rtl:!1},ef={id:e.Galician,language:{code:o.Galician,name:"Galician",native:"Galego"},name:"Galician",native_name:"Galego",rtl:!1},nf={country:{code:t.Spain,name:"Spain",native:"Espa\xF1a"},id:e.GalicianSpain,language:{code:o.Galician,name:"Galician",native:"Galego"},name:"Galician (Spain)",native_name:"Galego (Espa\xF1a)",rtl:!1},sf={id:e.Georgian,language:{code:o.Georgian,name:"Georgian",native:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8"},name:"Georgian",native_name:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8",rtl:!1},rf={country:{code:t.Georgia,name:"Georgia",native:"\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD"},id:e.GeorgianGeorgia,language:{code:o.Georgian,name:"Georgian",native:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8"},name:"Georgian (Georgia)",native_name:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8 (\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD)",rtl:!1},uf={id:e.German,language:{code:o.German,name:"German",native:"Deutsch"},name:"German",native_name:"Deutsch",rtl:!1},tf={country:{code:t.Austria,name:"Austria",native:"\xD6sterreich"},id:e.GermanAustria,language:{code:o.German,name:"German",native:"Deutsch"},name:"German (Austria)",native_name:"Deutsch (\xD6sterreich)",rtl:!1},lf={country:{code:t.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.GermanBelgium,language:{code:o.German,name:"German",native:"Deutsch"},name:"German (Belgium)",native_name:"Deutsch (Belgi\xEB)",rtl:!1},of={country:{code:t.Switzerland,name:"Switzerland",native:"Suisse"},id:e.GermanSwitzerland,language:{code:o.German,name:"German",native:"Deutsch"},name:"German (Switzerland)",native_name:"Deutsch (Suisse)",rtl:!1},cf={country:{code:t.Liechtenstein,name:"Liechtenstein",native:"Liechtenstein"},id:e.GermanLiechtenstein,language:{code:o.German,name:"German",native:"Deutsch"},name:"German (Liechtenstein)",native_name:"Deutsch (Liechtenstein)",rtl:!1},mf={country:{code:t.Luxembourg,name:"Luxembourg",native:"Luxembourg"},id:e.GermanLuxembourg,language:{code:o.German,name:"German",native:"Deutsch"},name:"German (Luxembourg)",native_name:"Deutsch (Luxembourg)",rtl:!1},Af={id:e.Greek,language:{code:o.Greek,name:"Greek",native:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC"},name:"Greek",native_name:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC",rtl:!1},ff={country:{code:t.Greece,name:"Greece",native:"\u0395\u03BB\u03BB\u03AC\u03B4\u03B1"},id:e.GreekGreece,language:{code:o.Greek,name:"Greek",native:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC"},name:"Greek (Greece)",native_name:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC (\u0395\u03BB\u03BB\u03AC\u03B4\u03B1)",rtl:!1},df={id:e.Greenlandic,language:{code:o.Greenlandic,name:"Greenlandic",native:"Kalaallisut"},name:"Greenlandic",native_name:"Kalaallisut",rtl:!1},gf={country:{code:t.Greenland,name:"Greenland",native:"Kalaallit Nunaat"},id:e.GreenlandicGreenland,language:{code:o.Greenlandic,name:"Greenlandic",native:"Kalaallisut"},name:"Greenlandic (Greenland)",native_name:"Kalaallisut (Kalaallit Nunaat)",rtl:!1},hf={id:e.Gujarati,language:{code:o.Gujarati,name:"Gujarati",native:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0"},name:"Gujarati",native_name:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0",rtl:!1},If={country:{code:t.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.GujaratiIndia,language:{code:o.Gujarati,name:"Gujarati",native:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0"},name:"Gujarati (India)",native_name:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0 (\u092D\u093E\u0930\u0924)",rtl:!1},_f={id:e.Hausa,language:{code:o.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E",rtl:!1},pf={country:{code:t.Ghana,name:"Ghana",native:"Ghana"},id:e.HausaGhana,language:{code:o.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa (Ghana)",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E (Ghana)",rtl:!1},Ef={country:{code:t.Niger,name:"Niger",native:"Niger"},id:e.HausaNiger,language:{code:o.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa (Niger)",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E (Niger)",rtl:!1},Sf={country:{code:t.Nigeria,name:"Nigeria",native:"Nigeria"},id:e.HausaNigeria,language:{code:o.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa (Nigeria)",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E (Nigeria)",rtl:!1},Tf={id:e.Hebrew,language:{code:o.Hebrew,name:"Hebrew",native:"\u05E2\u05D1\u05E8\u05D9\u05EA"},name:"Hebrew",native_name:"\u05E2\u05D1\u05E8\u05D9\u05EA",rtl:!0},vf={country:{code:t.Israel,name:"Hebrew",native:""},id:e.HebrewIsrael,language:{code:o.Hebrew,name:"Hebrew",native:""},name:"Hebrew (Israel)",native_name:"",rtl:!0},bf={id:e.Hindi,language:{code:o.Hindi,name:"Hindi",native:"\u0939\u093F\u0928\u094D\u0926\u0940"},name:"Hindi",native_name:"\u0939\u093F\u0928\u094D\u0926\u0940",rtl:!1},Bf={country:{code:t.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.HindiIndia,language:{code:o.Hindi,name:"Hindi",native:"\u092D\u093E\u0930\u0924\u0940\u092F"},name:"Hindi (India)",native_name:"\u092D\u093E\u0930\u0924\u0940\u092F",rtl:!1},Uf={id:e.Hungarian,language:{code:o.Hungarian,name:"Hungarian",native:"Magyar"},name:"Hungarian",native_name:"Magyar",rtl:!1},Nf={country:{code:t.Hungary,name:"Hungary",native:"Magyarorsz\xE1g"},id:e.HungarianHungary,language:{code:o.Hungarian,name:"Hungarian",native:"Magyar"},name:"Hungarian (Hungary)",native_name:"Magyar (Magyarorsz\xE1g)",rtl:!1},yf={id:e.Icelandic,language:{code:o.Icelandic,name:"Icelandic",native:"\xCDslenska"},name:"Icelandic",native_name:"\xCDslenska",rtl:!1},Df={country:{code:t.Iceland,name:"Iceland",native:"\xCDsland"},id:e.IcelandicIceland,language:{code:o.Icelandic,name:"Icelandic",native:"\xCDslenska"},name:"Icelandic (Iceland)",native_name:"\xCDslenska (\xCDsland)",rtl:!1},Pf={id:e.Igbo,language:{code:o.Igbo,name:"Igbo",native:"Igbo"},name:"Igbo",native_name:"Igbo",rtl:!1},Ff={id:e.Indonesian,language:{code:o.Indonesian,name:"Indonesian",native:"Bahasa Indonesia"},name:"Indonesian",native_name:"Bahasa Indonesia",rtl:!1},Mf={country:{code:t.Indonesia,name:"Indonesia",native:"Indonesia"},id:e.IndonesianIndonesia,language:{code:o.Indonesian,name:"Indonesian",native:"Bahasa Indonesia"},name:"Indonesian (Indonesia)",native_name:"Bahasa Indonesia (Indonesia)",rtl:!1},kf={id:e.Irish,language:{code:o.Irish,name:"Irish",native:"Gaeilge"},name:"Irish",native_name:"Gaeilge",rtl:!1},Lf={country:{code:t.Ireland,name:"Ireland",native:"\xC9ire"},id:e.IrishIreland,language:{code:o.Irish,name:"Irish",native:"Gaeilge"},name:"Irish (Ireland)",native_name:"Gaeilge (\xC9ire)",rtl:!1},wf={id:e.Italian,language:{code:o.Italian,name:"Italian",native:"Italiano"},name:"Italian",native_name:"Italiano",rtl:!1},Gf={country:{code:t.Italy,name:"Italy",native:"Italia"},id:e.ItalianItaly,language:{code:o.Italian,name:"Italian",native:"Italiano"},name:"Italian (Italy)",native_name:"Italiano (Italia)",rtl:!1},xf={country:{code:t.Switzerland,name:"Switzerland",native:"Schweiz"},id:e.ItalianSwitzerland,language:{code:o.Italian,name:"Italian",native:"Italiano"},name:"Italian (Switzerland)",native_name:"Italiano (Svizzera)",rtl:!1},Of={id:e.Japanese,language:{code:o.Japanese,name:"Japanese",native:"\u65E5\u672C\u8A9E"},name:"Japanese",native_name:"\u65E5\u672C\u8A9E",rtl:!1},qf={country:{code:t.Japan,name:"Japan",native:"\u65E5\u672C"},id:e.JapaneseJapan,language:{code:o.Japanese,name:"Japanese",native:"\u65E5\u672C\u8A9E"},name:"Japanese (Japan)",native_name:"\u65E5\u672C\u8A9E (\u65E5\u672C)",rtl:!1},Kf={id:e.Kannada,language:{code:o.Kannada,name:"Kannada",native:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1"},name:"Kannada",native_name:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1",rtl:!1},jf={country:{code:t.India,name:"India",native:"\u0CAD\u0CBE\u0CB0\u0CA4"},id:e.KannadaIndia,language:{code:o.Kannada,name:"Kannada",native:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1"},name:"Kannada (India)",native_name:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1 (\u0CAD\u0CBE\u0CB0\u0CA4)",rtl:!1},Hf={id:e.Kazakh,language:{code:o.Kazakh,name:"Kazakh",native:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456"},name:"Kazakh",native_name:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456",rtl:!1},Rf={country:{code:t.Kazakhstan,name:"Kazakhstan",native:"\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D"},id:e.KazakhKazakhstan,language:{code:o.Kazakh,name:"Kazakh",native:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456"},name:"Kazakh (Kazakhstan)",native_name:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)",rtl:!1},Wf={id:e.Khmer,language:{code:o.Khmer,name:"Khmer",native:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A"},name:"Khmer",native_name:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A",rtl:!1},Vf={country:{code:t.Cambodia,name:"Cambodia",native:"\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6"},id:e.KhmerCambodia,language:{code:o.Khmer,name:"Khmer",native:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A"},name:"Khmer (Cambodia)",native_name:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A (\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6)",rtl:!1},zf={id:e.Konkani,language:{code:o.Konkani,name:"Konkani",native:"\u0915\u094B\u0902\u0915\u0923\u0940"},name:"Konkani",native_name:"\u0915\u094B\u0902\u0915\u0923\u0940",rtl:!1},Yf={country:{code:t.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.KonkaniIndia,language:{code:o.Konkani,name:"Konkani",native:"\u0915\u094B\u0902\u0915\u0923\u0940"},name:"Konkani (India)",native_name:"\u0915\u094B\u0902\u0915\u0923\u0940 (\u092D\u093E\u0930\u0924)",rtl:!1},Jf={id:e.Korean,language:{code:o.Korean,name:"Korean",native:"\uD55C\uAD6D\uC5B4"},name:"Korean",native_name:"\uD55C\uAD6D\uC5B4",rtl:!1},$f={country:{code:t.SouthKorea,name:"South Korea",native:"\uB300\uD55C\uBBFC\uAD6D"},id:e.KoreanSouthKorea,language:{code:o.Korean,name:"Korean",native:"\uD55C\uAD6D\uC5B4"},name:"Korean (South Korea)",native_name:"\uD55C\uAD6D\uC5B4 (\uB300\uD55C\uBBFC\uAD6D)",rtl:!1},Zf={id:e.Kurdish,language:{code:o.Kurdish,name:"Kurdish",native:"Kurd\xEE"},name:"Kurdish",native_name:"Kurd\xEE",rtl:!1},Cf={country:{code:t.Iraq,name:"Iraq",native:"\u0627\u0644\u0639\u0631\u0627\u0642"},id:e.KurdishIraq,language:{code:o.Kurdish,name:"Kurdish",native:"Kurd\xEE"},name:"Kurdish (Iraq)",native_name:"Kurd\xEE (\u0627\u0644\u0639\u0631\u0627\u0642)",rtl:!1},Qf={country:{code:t.Turkey,name:"Turkey",native:"T\xFCrkiye"},id:e.KurdishTurkey,language:{code:o.Kurdish,name:"Kurdish",native:"Kurd\xEE"},name:"Kurdish (Turkey)",native_name:"Kurd\xEE (T\xFCrkiye)",rtl:!1},Xf={id:e.Kyrgyz,language:{code:o.Kyrgyz,name:"Kyrgyz",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},name:"Kyrgyz",native_name:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430",rtl:!1},ad={country:{code:t.Kyrgyzstan,name:"Kyrgyzstan",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D"},id:e.KyrgyzKyrgyzstan,language:{code:o.Kyrgyz,name:"Kyrgyz",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},name:"Kyrgyz (Kyrgyzstan)",native_name:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430 (\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D)",rtl:!1},ed={id:e.Lao,language:{code:o.Lao,name:"Lao",native:"\u0EA5\u0EB2\u0EA7"},name:"Lao",native_name:"\u0EA5\u0EB2\u0EA7",rtl:!1},nd={country:{code:t.Laos,name:"Laos",native:"\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95"},id:e.LaoLaos,language:{code:o.Lao,name:"Lao",native:"\u0EA5\u0EB2\u0EA7"},name:"Lao (Laos)",native_name:"\u0EA5\u0EB2\u0EA7 (\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95)",rtl:!1},id={id:e.Latvian,language:{code:o.Latvian,name:"Latvian",native:"Latvie\u0161u"},name:"Latvian",native_name:"Latvie\u0161u",rtl:!1},sd={country:{code:t.Latvia,name:"Latvia",native:"Latvija"},id:e.LatvianLatvia,language:{code:o.Latvian,name:"Latvian",native:"Latvie\u0161u"},name:"Latvian (Latvia)",native_name:"Latvie\u0161u (Latvija)",rtl:!1},rd={id:e.Lithuanian,language:{code:o.Lithuanian,name:"Lithuanian",native:"Lietuvi\u0173"},name:"Lithuanian",native_name:"Lietuvi\u0173",rtl:!1},ud={country:{code:t.Lithuania,name:"Lithuania",native:"Lietuva"},id:e.LithuanianLithuania,language:{code:o.Lithuanian,name:"Lithuanian",native:"Lietuvi\u0173"},name:"Lithuanian (Lithuania)",native_name:"Lietuvi\u0173 (Lietuva)",rtl:!1},td={id:e.Luxembourgish,language:{code:o.Luxembourgish,name:"Luxembourgish",native:"L\xEBtzebuergesch"},name:"Luxembourgish",native_name:"L\xEBtzebuergesch",rtl:!1},ld={country:{code:t.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.LuxembourgishBelgium,language:{code:o.Luxembourgish,name:"Luxembourgish",native:"L\xEBtzebuergesch"},name:"Luxembourgish (Belgium)",native_name:"L\xEBtzebuergesch (Belgi\xEB)",rtl:!1},od={country:{code:t.Luxembourg,name:"Luxembourg",native:"Luxembourg"},id:e.LuxembourgishLuxembourg,language:{code:o.Luxembourgish,name:"Luxembourgish",native:"L\xEBtzebuergesch"},name:"Luxembourgish (Luxembourg)",native_name:"L\xEBtzebuergesch (Luxembourg)",rtl:!1},cd={id:e.Macedonian,language:{code:o.Macedonian,name:"Macedonian",native:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438"},name:"Macedonian",native_name:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438",rtl:!1},md={country:{code:t.NorthMacedonia,name:"Macedonia",native:"\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430"},id:e.MacedonianNorthMacedonia,language:{code:o.Macedonian,name:"Macedonian",native:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438"},name:"Macedonian (North Macedonia)",native_name:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438 (\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430)",rtl:!1},Ad={id:e.Malay,language:{code:o.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay",native_name:"Bahasa Melayu",rtl:!1},fd={country:{code:t.Brunei,name:"Brunei",native:"Negara Brunei Darussalam"},id:e.MalayBrunei,language:{code:o.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (Brunei)",native_name:"Bahasa Melayu (Negara Brunei Darussalam)",rtl:!1},dd={country:{code:t.Malaysia,name:"Malaysia",native:"Malaysia"},id:e.MalayMalaysia,language:{code:o.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (Malaysia)",native_name:"Bahasa Melayu (Malaysia)",rtl:!1},gd={country:{code:t.Singapore,name:"Singapore",native:"Singapore"},id:e.MalaySingapore,language:{code:o.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (Singapore)",native_name:"Bahasa Melayu (Singapore)",rtl:!1},hd={country:{code:t.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.MalayIndia,language:{code:o.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (India)",native_name:"Bahasa Melayu (\u092D\u093E\u0930\u0924)",rtl:!1},Id={id:e.Maltese,language:{code:o.Maltese,name:"Maltese",native:"Malti"},name:"Maltese",native_name:"Malti",rtl:!1},_d={country:{code:t.Malta,name:"Malta",native:"Malta"},id:e.MalteseMalta,language:{code:o.Maltese,name:"Maltese",native:"Malti"},name:"Maltese (Malta)",native_name:"Malti (Malta)",rtl:!1},pd={id:e.Maori,language:{code:o.Maori,name:"Maori",native:"M\u0101ori"},name:"Maori",native_name:"M\u0101ori",rtl:!1},Ed={country:{code:t.NewZealand,name:"New Zealand",native:"New Zealand"},id:e.MaoriNewZealand,language:{code:o.Maori,name:"Maori",native:"M\u0101ori"},name:"Maori (New Zealand)",native_name:"M\u0101ori (New Zealand)",rtl:!1},Sd={id:e.Marathi,language:{code:o.Marathi,name:"Marathi",native:"\u092E\u0930\u093E\u0920\u0940"},name:"Marathi",native_name:"\u092E\u0930\u093E\u0920\u0940",rtl:!1},Td={country:{code:t.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.MarathiIndia,language:{code:o.Marathi,name:"Marathi",native:"\u092E\u0930\u093E\u0920\u0940"},name:"Marathi (India)",native_name:"\u092E\u0930\u093E\u0920\u0940 (\u092D\u093E\u0930\u0924)",rtl:!1},vd={id:e.Mongolian,language:{code:o.Mongolian,name:"Mongolian",native:"\u041C\u043E\u043D\u0433\u043E\u043B"},name:"Mongolian",native_name:"\u041C\u043E\u043D\u0433\u043E\u043B",rtl:!1},bd={country:{code:t.Mongolia,name:"Mongolia",native:"\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441"},id:e.MongolianMongolia,language:{code:o.Mongolian,name:"Mongolian",native:"\u041C\u043E\u043D\u0433\u043E\u043B"},name:"Mongolian (Mongolia)",native_name:"\u041C\u043E\u043D\u0433\u043E\u043B (\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441)",rtl:!1},Bd={id:e.Montenegrin,language:{code:o.Montenegrin,name:"Montenegrin",native:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A"},name:"Montenegrin",native_name:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A",rtl:!1},Ud={country:{code:t.Montenegro,name:"Montenegro",native:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A"},id:e.MontenegrinMontenegro,language:{code:o.Montenegrin,name:"Montenegrin",native:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A"},name:"Montenegrin (Montenegro)",native_name:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A (\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A)",rtl:!1},Nd={id:e.Nepali,language:{code:o.Nepali,name:"Nepali",native:"\u0928\u0947\u092A\u093E\u0932\u0940"},name:"Nepali",native_name:"\u0928\u0947\u092A\u093E\u0932\u0940",rtl:!1},yd={country:{code:t.Nepal,name:"Nepal",native:"\u0928\u0947\u092A\u093E\u0932"},id:e.NepaliNepal,language:{code:o.Nepali,name:"Nepali",native:"\u0928\u0947\u092A\u093E\u0932\u0940"},name:"Nepali (Nepal)",native_name:"\u0928\u0947\u092A\u093E\u0932\u0940 (\u0928\u0947\u092A\u093E\u0932)",rtl:!1},Dd={id:e.NorthernSotho,language:{code:o.NorthernSotho,name:"Northern Sotho",native:"Sesotho sa Leboa"},name:"Northern Sotho",native_name:"Sesotho sa Leboa",rtl:!1},Pd={country:{code:t.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.NorthernSothoSouthAfrica,language:{code:o.NorthernSotho,name:"Northern Sotho",native:"Sesotho sa Leboa"},name:"Northern Sotho (South Africa)",native_name:"Sesotho sa Leboa (South Africa)",rtl:!1},Fd={id:e.Norwegian,language:{code:o.Norwegian,name:"Norwegian",native:"Norsk"},name:"Norwegian",native_name:"Norsk",rtl:!1},Md={country:{code:t.Norway,name:"Norway",native:"Norge"},id:e.NorwegianBokmalNorway,language:{code:o.NorwegianBokmal,name:"Norwegian",native:"Norsk"},name:"Norwegian (Bokmal)",native_name:"Norsk (Bokm\xE5l)",rtl:!1},kd={country:{code:t.Norway,name:"Norway",native:"Norge"},id:e.NorwegianNynorskNorway,language:{code:o.NorwegianNynorsk,name:"Norwegian",native:"Norsk"},name:"Norwegian (Nynorsk)",native_name:"Norsk (Nynorsk)",rtl:!1},Ld={id:e.Oriya,language:{code:o.Oriya,name:"Oriya",native:"\u0B13\u0B21\u0B3C\u0B3F\u0B06"},name:"Oriya",native_name:"\u0B13\u0B21\u0B3C\u0B3F\u0B06",rtl:!1},wd={country:{code:t.India,name:"India",native:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"},id:e.OriyaIndia,language:{code:o.Oriya,name:"Oriya",native:"\u0B13\u0B21\u0B3C\u0B3F\u0B06"},name:"Oriya (India)",native_name:"\u0B13\u0B21\u0B3C\u0B3F\u0B06 (\u0B2D\u0B3E\u0B30\u0B24)",rtl:!1},Gd={id:e.Pashto,language:{code:o.Pashto,name:"Pashto",native:"\u067E\u069A\u062A\u0648"},name:"Pashto",native_name:"\u067E\u069A\u062A\u0648",rtl:!0},xd={country:{code:t.Afghanistan,name:"Afghanistan",native:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},id:e.PashtoAfghanistan,language:{code:o.Pashto,name:"Pashto",native:"\u067E\u069A\u062A\u0648"},name:"Pashto (Afghanistan)",native_name:"\u067E\u069A\u062A\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)",rtl:!0},Od={id:e.Persian,language:{code:o.Persian,name:"Persian",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Persian",native_name:"\u0641\u0627\u0631\u0633\u06CC",rtl:!0},qd={country:{code:t.Iran,name:"Iran",native:"\u0627\u06CC\u0631\u0627\u0646"},id:e.PersianIran,language:{code:o.Persian,name:"Persian",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Persian (Iran)",native_name:"\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)",rtl:!0},Kd={id:e.Polish,language:{code:o.Polish,name:"Polish",native:"Polski"},name:"Polish",native_name:"Polski",rtl:!1},jd={country:{code:t.Poland,name:"Poland",native:"Polska"},id:e.PolishPoland,language:{code:o.Polish,name:"Polish",native:"Polski"},name:"Polish (Poland)",native_name:"Polski (Polska)",rtl:!1},Hd={id:e.Portuguese,language:{code:o.Portuguese,name:"Portuguese",native:"Portugu\xEAs"},name:"Portuguese",native_name:"Portugu\xEAs",rtl:!1},Rd={country:{code:t.Brazil,name:"Brazil",native:"Brasil"},id:e.PortugueseBrazil,language:{code:o.Portuguese,name:"Portuguese",native:"Portugu\xEAs"},name:"Portuguese (Brazil)",native_name:"Portugu\xEAs (Brasil)",rtl:!1},Wd={country:{code:t.Portugal,name:"Portugal",native:"Portugal"},id:e.PortuguesePortugal,language:{code:o.Portuguese,name:"Portuguese",native:"Portugu\xEAs"},name:"Portuguese (Portugal)",native_name:"Portugu\xEAs (Portugal)",rtl:!1},Vd={id:e.Punjabi,language:{code:o.Punjabi,name:"Punjabi",native:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},name:"Punjabi",native_name:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40",rtl:!0},zd={country:{code:t.Pakistan,name:"Pakistan",native:"\u067E\u0627\u06A9\u0633\u062A\u0627\u0646"},id:e.PunjabiPakistan,language:{code:o.Punjabi,name:"Punjabi",native:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},name:"Punjabi (Pakistan)",native_name:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)",rtl:!0},Yd={country:{code:t.India,name:"India",native:"\u0A2D\u0A3E\u0A30\u0A24"},id:e.PunjabiIndia,language:{code:o.Punjabi,name:"Punjabi",native:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},name:"Punjabi (India)",native_name:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u0A2D\u0A3E\u0A30\u0A24)",rtl:!0},Jd={id:e.Quechua,language:{code:o.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua",native_name:"Runa Simi",rtl:!1},$d={country:{code:t.Bolivia,name:"Bolivia",native:"Bolivia"},id:e.QuechuaBolivia,language:{code:o.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua (Bolivia)",native_name:"Runa Simi (Bolivia)",rtl:!1},Zd={country:{code:t.Ecuador,name:"Ecuador",native:"Ecuador"},id:e.QuechuaEcuador,language:{code:o.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua (Ecuador)",native_name:"Runa Simi (Ecuador)",rtl:!1},Cd={country:{code:t.Peru,name:"Peru",native:"Per\xFA"},id:e.QuechuaPeru,language:{code:o.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua (Peru)",native_name:"Runa Simi (Per\xFA)",rtl:!1},Qd={id:e.Romanian,language:{code:o.Romanian,name:"Romanian",native:"Rom\xE2n\u0103"},name:"Romanian",native_name:"Rom\xE2n\u0103",rtl:!1},Xd={country:{code:t.Romania,name:"Romania",native:"Rom\xE2nia"},id:e.RomanianRomania,language:{code:o.Romanian,name:"Romanian",native:"Rom\xE2n\u0103"},name:"Romanian (Romania)",native_name:"Rom\xE2n\u0103 (Rom\xE2nia)",rtl:!1},ag={id:e.Russian,language:{code:o.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439",rtl:!1},eg={country:{code:t.RussianFederation,name:"Russian Federation",native:"\u0420\u043E\u0441\u0441\u0438\u044F"},id:e.RussianRussia,language:{code:o.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Russia)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0420\u043E\u0441\u0441\u0438\u044F)",rtl:!1},ng={country:{code:t.Ukraine,name:"Ukraine",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0430"},id:e.RussianUkraine,language:{code:o.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Ukraine)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)",rtl:!1},ig={country:{code:t.Kazakhstan,name:"Kazakhstan",native:"\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D"},id:e.RussianKazakhstan,language:{code:o.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Kazakhstan)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)",rtl:!1},sg={country:{code:t.Kyrgyzstan,name:"Kyrgyzstan",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},id:e.RussianKyrgyzstan,language:{code:o.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Kyrgyzstan)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430)",rtl:!1},rg={id:e.Sanskrit,language:{code:o.Sanskrit,name:"Sanskrit",native:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D"},name:"Sanskrit",native_name:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D",rtl:!1},ug={country:{code:t.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.SanskritIndia,language:{code:o.Sanskrit,name:"Sanskrit",native:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D"},name:"Sanskrit (India)",native_name:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D (\u092D\u093E\u0930\u0924)",rtl:!1},tg={id:e.Sami,language:{code:o.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami",native_name:"S\xE1megiella",rtl:!1},lg={country:{code:t.Finland,name:"Finland",native:"Suomi"},id:e.SamiFinland,language:{code:o.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami (Finland)",native_name:"S\xE1megiella (Suomi)",rtl:!1},og={country:{code:t.Norway,name:"Norway",native:"Norge"},id:e.SamiNorway,language:{code:o.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami (Norway)",native_name:"S\xE1megiella (Norge)",rtl:!1},cg={country:{code:t.Sweden,name:"Sweden",native:"Sverige"},id:e.SamiSweden,language:{code:o.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami (Sweden)",native_name:"S\xE1megiella (Sverige)",rtl:!1},mg={id:e.Samoan,language:{code:o.Samoan,name:"Samoan",native:"Gagana fa\u2019a S\u0101moa"},name:"Samoan",native_name:"Gagana fa\u2019a S\u0101moa",rtl:!1},Ag={country:{code:t.Samoa,name:"Samoa",native:"Samoa"},id:e.SamoanSamoa,language:{code:o.Samoan,name:"Samoan",native:"Gagana fa\u2019a S\u0101moa"},name:"Samoan (Samoa)",native_name:"Gagana fa\u2019a S\u0101moa (Samoa)",rtl:!1},fg={id:e.Serbian,language:{code:o.Serbian,name:"Serbian (Latin)",native:"Srpski (Latinica)"},name:"Serbian (Latin)",native_name:"Srpski (Latinica)",rtl:!1},dg={country:{code:t.BosniaAndHerzegovina,name:"Bosnia and Herzegovina",native:"Bosna i Hercegovina"},id:e.SerbianBosniaAndHerzegovina,language:{code:o.Serbian,name:"Serbian (Latin)",native:"Srpski (Latinica)"},name:"Serbian (Latin) (Bosnia and Herzegovina)",native_name:"Srpski (Latinica) (Bosna i Hercegovina)",rtl:!1},gg={country:{code:t.SerbiaAndMontenegro,name:"Serbia and Montenegro",native:"Srbija i Crna Gora"},id:e.SerbianSerbiaAndMontenegro,language:{code:o.Serbian,name:"Serbian (Latin)",native:"Srpski (Latinica)"},name:"Serbian (Latin) (Serbia and Montenegro)",native_name:"Srpski (Latinica) (Srbija i Crna Gora)",rtl:!1},hg={id:e.SerbianCyrillic,language:{code:o.SerbianCyrillic,name:"Serbian",native:"\u0421\u0440\u043F\u0441\u043A\u0438"},name:"Serbian (Cyrillic)",native_name:"\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430)",rtl:!1},Ig={country:{code:t.BosniaAndHerzegovina,name:"Bosnia and Herzegovina",native:"\u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430"},id:e.SerbianCyrillicBosniaAndHerzegovina,language:{code:o.SerbianCyrillic,name:"Serbian",native:"\u0421\u0440\u043F\u0441\u043A\u0438"},name:"Serbian (Cyrillic, Bosnia and Herzegovina)",native_name:"\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430)",rtl:!1},_g={country:{code:t.SerbiaAndMontenegro,name:"Serbia and Montenegro",native:"\u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430"},id:e.SerbianCyrillicSerbiaAndMontenegro,language:{code:o.SerbianCyrillic,name:"Serbian",native:"\u0421\u0440\u043F\u0441\u043A\u0438"},name:"Serbian (Cyrillic, Serbia and Montenegro)",native_name:"\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430)",rtl:!1},pg={id:e.Slovak,language:{code:o.Slovak,name:"Slovak",native:"Sloven\u010Dina"},name:"Slovak",native_name:"Sloven\u010Dina",rtl:!1},Eg={country:{code:t.Slovakia,name:"Slovakia",native:"Slovensko"},id:e.SlovakSlovakia,language:{code:o.Slovak,name:"Slovak",native:"Sloven\u010Dina"},name:"Slovak (Slovakia)",native_name:"Sloven\u010Dina (Slovensko)",rtl:!1},Sg={id:e.Slovenian,language:{code:o.Slovenian,name:"Slovenian",native:"Sloven\u0161\u010Dina"},name:"Slovenian",native_name:"Sloven\u0161\u010Dina",rtl:!1},Tg={country:{code:t.Slovenia,name:"Slovenia",native:"Slovenija"},id:e.SlovenianSlovenia,language:{code:o.Slovenian,name:"Slovenian",native:"Sloven\u0161\u010Dina"},name:"Slovenian (Slovenia)",native_name:"Sloven\u0161\u010Dina (Slovenija)",rtl:!1},vg={id:e.Somali,language:{code:o.Somali,name:"Somali",native:"Soomaaliga"},name:"Somali",native_name:"Soomaaliga",rtl:!0},bg={country:{code:t.Somalia,name:"Somalia",native:"Soomaaliya"},id:e.SomaliSomalia,language:{code:o.Somali,name:"Somali",native:"Soomaaliga"},name:"Somali (Somalia)",native_name:"Soomaaliga (Soomaaliya)",rtl:!0},Bg={id:e.Spanish,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish",native_name:"Espa\xF1ol",rtl:!1},Ug={country:{code:t.Argentina,name:"Argentina",native:"Argentina"},id:e.SpanishArgentina,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Argentina)",native_name:"Espa\xF1ol (Argentina)",rtl:!1},Ng={country:{code:t.Bolivia,name:"Bolivia",native:"Bolivia"},id:e.SpanishBolivia,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Bolivia)",native_name:"Espa\xF1ol (Bolivia)",rtl:!1},yg={country:{code:t.Chile,name:"Chile",native:"Chile"},id:e.SpanishChile,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Chile)",native_name:"Espa\xF1ol (Chile)",rtl:!1},Dg={country:{code:t.Colombia,name:"Colombia",native:"Colombia"},id:e.SpanishColombia,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Colombia)",native_name:"Espa\xF1ol (Colombia)",rtl:!1},Pg={country:{code:t.CostaRica,name:"Costa Rica",native:"Costa Rica"},id:e.SpanishCostaRica,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Costa Rica)",native_name:"Espa\xF1ol (Costa Rica)",rtl:!1},Fg={country:{code:t.Cuba,name:"Cuba",native:"Cuba"},id:e.SpanishCuba,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Cuba)",native_name:"Espa\xF1ol (Cuba)",rtl:!1},Mg={country:{code:t.DominicanRepublic,name:"Dominican Republic",native:"Rep\xFAblica Dominicana"},id:e.SpanishDominicanRepublic,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Dominican Republic)",native_name:"Espa\xF1ol (Rep\xFAblica Dominicana)",rtl:!1},kg={country:{code:t.Ecuador,name:"Ecuador",native:"Ecuador"},id:e.SpanishEcuador,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Ecuador)",native_name:"Espa\xF1ol (Ecuador)",rtl:!1},Lg={country:{code:t.ElSalvador,name:"El Salvador",native:"El Salvador"},id:e.SpanishElSalvador,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (El Salvador)",native_name:"Espa\xF1ol (El Salvador)",rtl:!1},wg={country:{code:t.EquatorialGuinea,name:"Equatorial Guinea",native:"Guinea Ecuatorial"},id:e.SpanishEquatorialGuinea,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Equatorial Guinea)",native_name:"Espa\xF1ol (Guinea Ecuatorial)",rtl:!1},Gg={country:{code:t.Guatemala,name:"Guatemala",native:"Guatemala"},id:e.SpanishGuatemala,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Guatemala)",native_name:"Espa\xF1ol (Guatemala)",rtl:!1},xg={country:{code:t.Honduras,name:"Honduras",native:"Honduras"},id:e.SpanishHonduras,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Honduras)",native_name:"Espa\xF1ol (Honduras)",rtl:!1},Og={country:{code:t.Mexico,name:"Mexico",native:"M\xE9xico"},id:e.SpanishMexico,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Mexico)",native_name:"Espa\xF1ol (M\xE9xico)",rtl:!1},qg={country:{code:t.Nicaragua,name:"Nicaragua",native:"Nicaragua"},id:e.SpanishNicaragua,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Nicaragua)",native_name:"Espa\xF1ol (Nicaragua)",rtl:!1},Kg={country:{code:t.Panama,name:"Panama",native:"Panam\xE1"},id:e.SpanishPanama,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Panama)",native_name:"Espa\xF1ol (Panam\xE1)",rtl:!1},jg={country:{code:t.Paraguay,name:"Paraguay",native:"Paraguay"},id:e.SpanishParaguay,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Paraguay)",native_name:"Espa\xF1ol (Paraguay)",rtl:!1},Hg={country:{code:t.Peru,name:"Peru",native:"Per\xFA"},id:e.SpanishPeru,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Peru)",native_name:"Espa\xF1ol (Per\xFA)",rtl:!1},Rg={country:{code:t.PuertoRico,name:"Puerto Rico",native:"Puerto Rico"},id:e.SpanishPuertoRico,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Puerto Rico)",native_name:"Espa\xF1ol (Puerto Rico)",rtl:!1},Wg={country:{code:t.Uruguay,name:"Uruguay",native:"Uruguay"},id:e.SpanishUruguay,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Uruguay)",native_name:"Espa\xF1ol (Uruguay)",rtl:!1},Vg={country:{code:t.Venezuela,name:"Venezuela",native:"Venezuela"},id:e.SpanishVenezuela,language:{code:o.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Venezuela)",native_name:"Espa\xF1ol (Venezuela)",rtl:!1},zg={country:{code:t.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.SutuSouthAfrica,language:{code:o.Sutu,name:"Sutu",native:"Sesotho"},name:"Sutu (South Africa)",native_name:"Sesotho (Afrika Borwa)",rtl:!1},Yg={id:e.Swahili,language:{code:o.Swahili,name:"Swahili",native:"Kiswahili"},name:"Swahili",native_name:"Kiswahili",rtl:!1},Jg={country:{code:t.Kenya,name:"Kenya",native:"Kenya"},id:e.SwahiliKenya,language:{code:o.Swahili,name:"Swahili",native:"Kiswahili"},name:"Swahili (Kenya)",native_name:"Kiswahili (Kenya)",rtl:!1},$g={id:e.Swedish,language:{code:o.Swedish,name:"Swedish",native:"Svenska"},name:"Swedish",native_name:"Svenska",rtl:!1},Zg={country:{code:t.Finland,name:"Finland",native:"Suomi"},id:e.SwedishFinland,language:{code:o.Swedish,name:"Swedish",native:"Svenska"},name:"Swedish (Finland)",native_name:"Svenska (Finland)",rtl:!1},Cg={country:{code:t.Sweden,name:"Sweden",native:"Sverige"},id:e.SwedishSweden,language:{code:o.Swedish,name:"Swedish",native:"Svenska"},name:"Swedish (Sweden)",native_name:"Svenska (Sverige)",rtl:!1},Qg={id:e.Syriac,language:{code:o.Syriac,name:"Syriac",native:"\u0723\u0718\u072A\u071D\u071D\u0710"},name:"Syriac",native_name:"\u0723\u0718\u072A\u071D\u071D\u0710",rtl:!0},Xg={country:{code:t.Syria,name:"Syria",native:"\u0633\u0648\u0631\u064A\u0627"},id:e.SyriacSyria,language:{code:o.Syriac,name:"Syriac",native:"\u0723\u0718\u072A\u071D\u071D\u0710"},name:"Syriac (Syria)",native_name:"\u0723\u0718\u072A\u071D\u071D\u0710 (\u0633\u0648\u0631\u064A\u0627)",rtl:!0},ah={id:e.Tajik,language:{code:o.Tajik,name:"Tajik",native:"\u0422\u043E\u04B7\u0438\u043A\u04E3"},name:"Tajik",native_name:"\u0422\u043E\u04B7\u0438\u043A\u04E3",rtl:!1},eh={country:{code:t.Tajikistan,name:"Tajikistan",native:"\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D"},id:e.TajikTajikistan,language:{code:o.Tajik,name:"Tajik",native:"\u0422\u043E\u04B7\u0438\u043A\u04E3"},name:"Tajik (Tajikistan)",native_name:"\u0422\u043E\u04B7\u0438\u043A\u04E3 (\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D)",rtl:!1},nh={id:e.Tagalog,language:{code:o.Tagalog,name:"Tagalog",native:"Tagalog"},name:"Tagalog",native_name:"Tagalog",rtl:!1},ih={country:{code:t.Philippines,name:"Philippines",native:"Pilipinas"},id:e.TagalogPhilippines,language:{code:o.Tagalog,name:"Tagalog",native:"Tagalog"},name:"Tagalog (Philippines)",native_name:"Tagalog (Pilipinas)",rtl:!1},sh={id:e.Tamil,language:{code:o.Tamil,name:"Tamil",native:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD"},name:"Tamil",native_name:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD",rtl:!1},rh={country:{code:t.India,name:"India",native:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"},id:e.TamilIndia,language:{code:o.Tamil,name:"Tamil",native:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD"},name:"Tamil (India)",native_name:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)",rtl:!1},uh={id:e.Telugu,language:{code:o.Telugu,name:"Telugu",native:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41"},name:"Telugu",native_name:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41",rtl:!1},th={country:{code:t.India,name:"India",native:"\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02"},id:e.TeluguIndia,language:{code:o.Telugu,name:"Telugu",native:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41"},name:"Telugu (India)",native_name:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41 (\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02)",rtl:!1},lh={id:e.Thai,language:{code:o.Thai,name:"Thai",native:"\u0E44\u0E17\u0E22"},name:"Thai",native_name:"\u0E44\u0E17\u0E22",rtl:!1},oh={country:{code:t.Thailand,name:"Thailand",native:"\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22"},id:e.ThaiThailand,language:{code:o.Thai,name:"Thai",native:"\u0E44\u0E17\u0E22"},name:"Thai (Thailand)",native_name:"\u0E44\u0E17\u0E22 (\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22)",rtl:!1},ch={id:e.Tibetan,language:{code:o.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42",rtl:!1},mh={country:{code:t.China,name:"China",native:"\u4E2D\u56FD"},id:e.TibetanChina,language:{code:o.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan (China)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42)",rtl:!1},Ah={country:{code:t.Bhutan,name:"Bhutan",native:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D"},id:e.TibetanBhutan,language:{code:o.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan (Bhutan)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D)",rtl:!1},fh={country:{code:t.India,name:"India",native:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"},id:e.TibetanIndia,language:{code:o.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan (India)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)",rtl:!1},dh={id:e.Tsonga,language:{code:o.Tsonga,name:"Tsonga",native:"Xitsonga"},name:"Tsonga",native_name:"Xitsonga",rtl:!1},gh={id:e.Tswana,language:{code:o.Tswana,name:"Tswana",native:"Setswana"},name:"Tswana",native_name:"Setswana",rtl:!1},hh={country:{code:t.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.TswanaSouthAfrica,language:{code:o.Tswana,name:"Tswana",native:"Setswana"},name:"Tswana (South Africa)",native_name:"Setswana (South Africa)",rtl:!1},Ih={id:e.Turkish,language:{code:o.Turkish,name:"Turkish",native:"T\xFCrk\xE7e"},name:"Turkish",native_name:"T\xFCrk\xE7e",rtl:!1},_h={country:{code:t.Turkey,name:"Turkey",native:"T\xFCrkiye"},id:e.TurkishTurkey,language:{code:o.Turkish,name:"Turkish",native:"T\xFCrk\xE7e"},name:"Turkish (Turkey)",native_name:"T\xFCrk\xE7e (T\xFCrkiye)",rtl:!1},ph={id:e.Ukrainian,language:{code:o.Ukrainian,name:"Ukrainian",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430"},name:"Ukrainian",native_name:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430",rtl:!1},Eh={country:{code:t.Ukraine,name:"Ukraine",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0430"},id:e.UkrainianUkraine,language:{code:o.Ukrainian,name:"Ukrainian",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430"},name:"Ukrainian (Ukraine)",native_name:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)",rtl:!1},Sh={id:e.Urdu,language:{code:o.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu",native_name:"\u0627\u0631\u062F\u0648",rtl:!0},Th={country:{code:t.Afghanistan,name:"Afghanistan",native:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},id:e.UrduAfghanistan,language:{code:o.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu (Afghanistan)",native_name:"\u0627\u0631\u062F\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)",rtl:!0},vh={country:{code:t.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.UrduIndia,language:{code:o.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu (India)",native_name:"\u0627\u0631\u062F\u0648 (\u092D\u093E\u0930\u0924)",rtl:!0},bh={country:{code:t.Pakistan,name:"Pakistan",native:"\u067E\u0627\u06A9\u0633\u062A\u0627\u0646"},id:e.UrduPakistan,language:{code:o.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu (Pakistan)",native_name:"\u0627\u0631\u062F\u0648 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)",rtl:!0},Bh={id:e.Uzbek,language:{code:o.Uzbek,name:"Uzbek",native:"O\u02BBzbekcha"},name:"Uzbek",native_name:"O\u02BBzbekcha",rtl:!1},Uh={country:{code:t.Uzbekistan,name:"Uzbekistan",native:"O\u02BBzbekiston"},id:e.UzbekUzbekistan,language:{code:o.Uzbek,name:"Uzbek",native:"O\u02BBzbekcha"},name:"Uzbek (Latin, Uzbekistan)",native_name:"O\u02BBzbekcha (O\u02BBzbekiston)",rtl:!1},Nh={country:{code:t.Uzbekistan,name:"Uzbekistan",native:"\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D"},id:e.UzbekCyrillic,language:{code:o.Uzbek,name:"Uzbek",native:"\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D"},name:"Uzbek (Cyrillic)",native_name:"\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D (\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D)",rtl:!1},yh={id:e.Vietnamese,language:{code:o.Vietnamese,name:"Vietnamese",native:"Ti\u1EBFng Vi\u1EC7t"},name:"Vietnamese",native_name:"Ti\u1EBFng Vi\u1EC7t",rtl:!1},Dh={country:{code:t.Vietnam,name:"Vietnam",native:"Vi\u1EC7t Nam"},id:e.VietnameseVietnam,language:{code:o.Vietnamese,name:"Vietnamese",native:"Ti\u1EBFng Vi\u1EC7t"},name:"Vietnamese (Vietnam)",native_name:"Ti\u1EBFng Vi\u1EC7t (Vi\u1EC7t Nam)",rtl:!1},Ph={id:e.Welsh,language:{code:o.Welsh,name:"Welsh",native:"Cymraeg"},name:"Welsh",native_name:"Cymraeg",rtl:!1},Fh={country:{code:t.UnitedKingdom,name:"United Kingdom",native:"United Kingdom"},id:e.WelshUnitedKingdom,language:{code:o.Welsh,name:"Welsh",native:"Cymraeg"},name:"Welsh (United Kingdom)",native_name:"Cymraeg (United Kingdom)",rtl:!1},Mh={id:e.Xhosa,language:{code:o.Xhosa,name:"Xhosa",native:"isiXhosa"},name:"Xhosa",native_name:"isiXhosa",rtl:!1},kh={country:{code:t.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.XhosaSouthAfrica,language:{code:o.Xhosa,name:"Xhosa",native:"isiXhosa"},name:"Xhosa (South Africa)",native_name:"isiXhosa (South Africa)",rtl:!1},Lh={id:e.Yiddish,language:{code:o.Yiddish,name:"Yiddish",native:"\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9"},name:"Yiddish",native_name:"\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9",rtl:!1},wh={id:e.Yoruba,language:{code:o.Yoruba,name:"Yoruba",native:"Yor\xF9b\xE1"},name:"Yoruba",native_name:"Yor\xF9b\xE1",rtl:!1},Gh={country:{code:t.Nigeria,name:"Nigeria",native:"Nigeria"},id:e.YorubaNigeria,language:{code:o.Yoruba,name:"Yoruba",native:"Yor\xF9b\xE1"},name:"Yoruba (Nigeria)",native_name:"Yor\xF9b\xE1 (Nigeria)",rtl:!1},xh={id:e.Zulu,language:{code:o.Zulu,name:"Zulu",native:"isiZulu"},name:"Zulu",native_name:"isiZulu",rtl:!1},Oh={country:{code:t.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.ZuluSouthAfrica,language:{code:o.Zulu,name:"Zulu",native:"isiZulu"},name:"Zulu (South Africa)",native_name:"isiZulu (South Africa)",rtl:!1},qh={id:r.AfricaAbidjan,name:"Africa/Abidjan",offset:i.UTC_0,timezone:s.CoordinatedUniversalTime},Kh={id:r.AfricaAccra,name:"Africa/Accra",offset:i.UTC_0,timezone:s.CoordinatedUniversalTime},jh={id:r.AfricaAddisAbaba,name:"Africa/Addis_Ababa",offset:i.UTC_PLUS_3,timezone:s.EastAfricaTime},Hh={id:r.AfricaAlgiers,name:"Africa/Algiers",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},Rh={id:r.AfricaAsmara,name:"Africa/Asmara",offset:i.UTC_PLUS_3,timezone:s.EastAfricaTime},Wh={id:r.AfricaBamako,name:"Africa/Bamako",offset:i.UTC_0,timezone:s.CoordinatedUniversalTime},Vh={id:r.AfricaBangui,name:"Africa/Bangui",offset:i.UTC_PLUS_1,timezone:s.WestAfricaTime},zh={id:r.AfricaBanjul,name:"Africa/Banjul",offset:i.UTC_0,timezone:s.CoordinatedUniversalTime},Yh={id:r.AfricaBissau,name:"Africa/Bissau",offset:i.UTC_0,timezone:s.CoordinatedUniversalTime},Jh={id:r.AfricaBlantyre,name:"Africa/Blantyre",offset:i.UTC_PLUS_2,timezone:s.CentralAfricaTime},$h={id:r.AfricaBrazzaville,name:"Africa/Brazzaville",offset:i.UTC_PLUS_1,timezone:s.WestAfricaTime},Zh={id:r.AfricaBujumbura,name:"Africa/Bujumbura",offset:i.UTC_PLUS_2,timezone:s.CentralAfricaTime},Ch={id:r.AfricaCairo,name:"Africa/Cairo",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},Qh={id:r.AfricaCasablanca,name:"Africa/Casablanca",offset:i.UTC_PLUS_1,timezone:s.WesternEuropeanTime},Xh={id:r.AfricaCeuta,name:"Africa/Ceuta",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},aI={id:r.AfricaConakry,name:"Africa/Conakry",offset:i.UTC_0,timezone:s.CoordinatedUniversalTime},eI={id:r.AfricaDakar,name:"Africa/Dakar",offset:i.UTC_0,timezone:s.CoordinatedUniversalTime},nI={id:r.AfricaDarEsSalaam,name:"Africa/Dar_es_Salaam",offset:i.UTC_PLUS_3,timezone:s.EastAfricaTime},iI={id:r.AfricaDjibouti,name:"Africa/Djibouti",offset:i.UTC_PLUS_3,timezone:s.EastAfricaTime},sI={id:r.AfricaDouala,name:"Africa/Douala",offset:i.UTC_PLUS_1,timezone:s.WestAfricaTime},rI={id:r.AfricaElAaiun,name:"Africa/El_Aaiun",offset:i.UTC_PLUS_1,timezone:s.WestAfricaTime},uI={id:r.AfricaFreetown,name:"Africa/Freetown",offset:i.UTC_0,timezone:s.CoordinatedUniversalTime},tI={id:r.AfricaGaborone,name:"Africa/Gaborone",offset:i.UTC_PLUS_2,timezone:s.CentralAfricaTime},lI={id:r.AfricaHarare,name:"Africa/Harare",offset:i.UTC_PLUS_2,timezone:s.CentralAfricaTime},oI={id:r.AfricaJohannesburg,name:"Africa/Johannesburg",offset:i.UTC_PLUS_2,timezone:s.SouthAfricanStandardTime},cI={id:r.AfricaJuba,name:"Africa/Juba",offset:i.UTC_PLUS_3,timezone:s.EastAfricaTime},mI={id:r.AfricaKampala,name:"Africa/Kampala",offset:i.UTC_PLUS_3,timezone:s.EastAfricaTime},AI={id:r.AfricaKhartoum,name:"Africa/Khartoum",offset:i.UTC_PLUS_2,timezone:s.EastAfricaTime},fI={id:r.AfricaKigali,name:"Africa/Kigali",offset:i.UTC_PLUS_2,timezone:s.CentralAfricaTime},dI={id:r.AfricaKinshasa,name:"Africa/Kinshasa",offset:i.UTC_PLUS_1,timezone:s.WestAfricaTime},gI={id:r.AfricaLagos,name:"Africa/Lagos",offset:i.UTC_PLUS_1,timezone:s.WestAfricaTime},hI={id:r.AfricaLibreville,name:"Africa/Libreville",offset:i.UTC_PLUS_1,timezone:s.WestAfricaTime},II={id:r.AfricaLome,name:"Africa/Lome",offset:i.UTC_0,timezone:s.CoordinatedUniversalTime},_I={id:r.AfricaLuanda,name:"Africa/Luanda",offset:i.UTC_PLUS_1,timezone:s.WestAfricaTime},pI={id:r.AfricaLubumbashi,name:"Africa/Lubumbashi",offset:i.UTC_PLUS_2,timezone:s.CentralAfricaTime},EI={id:r.AfricaLusaka,name:"Africa/Lusaka",offset:i.UTC_PLUS_2,timezone:s.CentralAfricaTime},SI={id:r.AfricaMalabo,name:"Africa/Malabo",offset:i.UTC_PLUS_1,timezone:s.WestAfricaTime},TI={id:r.AfricaMaputo,name:"Africa/Maputo",offset:i.UTC_PLUS_2,timezone:s.CentralAfricaTime},vI={id:r.AfricaMaseru,name:"Africa/Maseru",offset:i.UTC_PLUS_2,timezone:s.SouthAfricanStandardTime},bI={id:r.AfricaMbabane,name:"Africa/Mbabane",offset:i.UTC_PLUS_2,timezone:s.SouthAfricanStandardTime},BI={id:r.AfricaMogadishu,name:"Africa/Mogadishu",offset:i.UTC_PLUS_3,timezone:s.EastAfricaTime},UI={id:r.AfricaMonrovia,name:"Africa/Monrovia",offset:i.UTC_0,timezone:s.CoordinatedUniversalTime},NI={id:r.AfricaNairobi,name:"Africa/Nairobi",offset:i.UTC_PLUS_3,timezone:s.EastAfricaTime},yI={id:r.AfricaNdjamena,name:"Africa/Ndjamena",offset:i.UTC_PLUS_1,timezone:s.WestAfricaTime},DI={id:r.AfricaNiamey,name:"Africa/Niamey",offset:i.UTC_PLUS_1,timezone:s.WestAfricaTime},PI={id:r.AfricaNouakchott,name:"Africa/Nouakchott",offset:i.UTC_0,timezone:s.GreenwichMeanTime},FI={id:r.AfricaOuagadougou,name:"Africa/Ouagadougou",offset:i.UTC_0,timezone:s.CoordinatedUniversalTime},MI={id:r.AfricaPortoNovo,name:"Africa/Porto-Novo",offset:i.UTC_PLUS_1,timezone:s.WestAfricaTime},kI={id:r.AfricaSaoTome,name:"Africa/SaoTome",offset:i.UTC_0,timezone:s.CoordinatedUniversalTime},LI={id:r.AfricaTripoli,name:"Africa/Tripoli",offset:i.UTC_0,timezone:s.CoordinatedUniversalTime},wI={id:r.AfricaTunis,name:"Africa/Tunis",offset:i.UTC_0,timezone:s.CoordinatedUniversalTime},GI={id:r.AfricaWindhoek,name:"Africa/Windhoek",offset:i.UTC_PLUS_2,timezone:s.WestAfricaTime},xI={id:r.AmericaAdak,name:"America/Adak",offset:i.UTC_PLUS_10,timezone:s.HawaiiAleutianStandardTime},OI={id:r.AmericaAnchorage,name:"America/Anchorage",offset:i.UTC_PLUS_9,timezone:s.AlaskaStandardTime},qI={id:r.AmericaAnguilla,name:"America/Anguilla",offset:i.UTC_0,timezone:s.AtlanticStandardTime},KI={id:r.AmericaAntigua,name:"America/Antigua",offset:i.UTC_0,timezone:s.AtlanticStandardTime},jI={id:r.AmericaAraguaina,name:"America/Araguaina",offset:i.UTC_MINUS_3,timezone:s.BrasiliaTime},HI={id:r.AmericaArgentinaBuenosAires,name:"America/Argentina/Buenos_Aires",offset:i.UTC_MINUS_3,timezone:s.ArgentinaTime},RI={id:r.AmericaArgentinaCatamarca,name:"America/Argentina/Catamarca",offset:i.UTC_MINUS_3,timezone:s.ArgentinaTime},WI={id:r.AmericaArgentinaCordoba,name:"America/Argentina/Cordoba",offset:i.UTC_MINUS_3,timezone:s.ArgentinaTime},VI={id:r.AmericaArgentinaJujuy,name:"America/Argentina/Jujuy",offset:i.UTC_MINUS_3,timezone:s.ArgentinaTime},zI={id:r.AmericaArgentinaLaRioja,name:"America/Argentina/La_Rioja",offset:i.UTC_MINUS_3,timezone:s.ArgentinaTime},YI={id:r.AmericaArgentinaMendoza,name:"America/Argentina/Mendoza",offset:i.UTC_MINUS_3,timezone:s.ArgentinaTime},JI={id:r.AmericaArgentinaRioGallegos,name:"America/Argentina/Rio_Gallegos",offset:i.UTC_MINUS_3,timezone:s.ArgentinaTime},$I={id:r.AmericaArgentinaSalta,name:"America/Argentina/Salta",offset:i.UTC_MINUS_3,timezone:s.ArgentinaTime},ZI={id:r.AmericaArgentinaSanJuan,name:"America/Argentina/San_Juan",offset:i.UTC_MINUS_3,timezone:s.ArgentinaTime},CI={id:r.AmericaArgentinaSanLuis,name:"America/Argentina/San_Luis",offset:i.UTC_MINUS_3,timezone:s.ArgentinaTime},QI={id:r.AmericaArgentinaTucuman,name:"America/Argentina/Tucuman",offset:i.UTC_MINUS_3,timezone:s.ArgentinaTime},XI={id:r.AmericaArgentinaUshuaia,name:"America/Argentina/Ushuaia",offset:i.UTC_MINUS_3,timezone:s.ArgentinaTime},a4={id:r.AmericaAruba,name:"America/Aruba",offset:i.UTC_0,timezone:s.AtlanticStandardTime},e4={id:r.AmericaAsuncion,name:"America/Asuncion",offset:i.UTC_MINUS_4,timezone:s.ParaguayTime},n4={id:r.AmericaAtikokan,name:"America/Atikokan",offset:i.UTC_0,timezone:s.EasternStandardTime},i4={id:r.AmericaAtka,name:"America/Atka",offset:i.UTC_MINUS_10,timezone:s.HawaiiAleutianStandardTime},s4={id:r.AmericaBahia,name:"America/Bahia",offset:i.UTC_MINUS_3,timezone:s.BrasiliaTime},r4={id:r.AmericaBahiaBanderas,name:"America/Bahia_Banderas",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},u4={id:r.AmericaBarbados,name:"America/Barbados",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},t4={id:r.AmericaBelem,name:"America/Belem",offset:i.UTC_MINUS_3,timezone:s.BrasiliaTime},l4={id:r.AmericaBelize,name:"America/Belize",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},o4={id:r.AmericaBlancSablon,name:"America/Blanc-Sablon",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},c4={id:r.AmericaBoaVista,name:"America/Boa_Vista",offset:i.UTC_MINUS_4,timezone:s.AmazonTime},m4={id:r.AmericaBogota,name:"America/Bogota",offset:i.UTC_MINUS_5,timezone:s.ColombiaTime},A4={id:r.AmericaBoise,name:"America/Boise",offset:i.UTC_MINUS_7,timezone:s.MountainStandardTime},f4={id:r.AmericaCambridgeBay,name:"America/Cambridge_Bay",offset:i.UTC_MINUS_7,timezone:s.MountainStandardTime},d4={id:r.AmericaCampoGrande,name:"America/Campo_Grande",offset:i.UTC_MINUS_4,timezone:s.AmazonTime},g4={id:r.AmericaCancun,name:"America/Cancun",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},h4={id:r.AmericaCaracas,name:"America/Caracas",offset:i.UTC_MINUS_4,timezone:s.VenezuelaStandardTime},I4={id:r.AmericaCayenne,name:"America/Cayenne",offset:i.UTC_MINUS_3,timezone:s.FrenchGuianaTime},_4={id:r.AmericaCayman,name:"America/Cayman",offset:i.UTC_0,timezone:s.AtlanticStandardTime},p4={id:r.AmericaChicago,name:"America/Chicago",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},E4={id:r.AmericaChihuahua,name:"America/Chihuahua",offset:i.UTC_MINUS_7,timezone:s.MountainStandardTime},S4={id:r.AmericaCoralHarbour,name:"America/Coral_Harbour",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},T4={id:r.AmericaCordoba,name:"America/Cordoba",offset:i.UTC_MINUS_3,timezone:s.ArgentinaTime},v4={id:r.AmericaCostaRica,name:"America/Costa_Rica",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},b4={id:r.AmericaCreston,name:"America/Creston",offset:i.UTC_MINUS_7,timezone:s.MountainStandardTime},B4={id:r.AmericaCuiaba,name:"America/Cuiaba",offset:i.UTC_MINUS_4,timezone:s.AmazonTime},U4={id:r.AmericaCuracao,name:"America/Curacao",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},N4={id:r.AmericaDanmarkshavn,name:"America/Danmarkshavn",offset:i.UTC_0,timezone:s.GreenwichMeanTime},y4={id:r.AmericaDawson,name:"America/Dawson",offset:i.UTC_MINUS_8,timezone:s.PacificStandardTime},D4={id:r.AmericaDawsonCreek,name:"America/Dawson_Creek",offset:i.UTC_MINUS_8,timezone:s.PacificStandardTime},P4={id:r.AmericaDenver,name:"America/Denver",offset:i.UTC_MINUS_7,timezone:s.MountainStandardTime},F4={id:r.AmericaDetroit,name:"America/Detroit",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},M4={id:r.AmericaDominica,name:"America/Dominica",offset:i.UTC_0,timezone:s.AtlanticStandardTime},k4={id:r.AmericaEdmonton,name:"America/Edmonton",offset:i.UTC_MINUS_7,timezone:s.MountainStandardTime},L4={id:r.AmericaEirunepe,name:"America/Eirunepe",offset:i.UTC_MINUS_5,timezone:s.AcreTime},w4={id:r.AmericaElSalvador,name:"America/El_Salvador",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},G4={id:r.AmericaFortaleza,name:"America/Fortaleza",offset:i.UTC_MINUS_3,timezone:s.BrasiliaTime},x4={id:r.AmericaGlaceBay,name:"America/Glace_Bay",offset:i.UTC_0,timezone:s.AtlanticStandardTime},O4={id:r.AmericaGodthab,name:"America/Godthab",offset:i.UTC_MINUS_3,timezone:s.WestGreenlandTime},q4={id:r.AmericaGooseBay,name:"America/Goose_Bay",offset:i.UTC_0,timezone:s.AtlanticStandardTime},K4={id:r.AmericaGrandTurk,name:"America/Grand_Turk",offset:i.UTC_0,timezone:s.AtlanticStandardTime},j4={id:r.AmericaGrenada,name:"America/Grenada",offset:i.UTC_0,timezone:s.AtlanticStandardTime},H4={id:r.AmericaGuadeloupe,name:"America/Guadeloupe",offset:i.UTC_0,timezone:s.AtlanticStandardTime},R4={id:r.AmericaGuatemala,name:"America/Guatemala",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},W4={id:r.AmericaGuayaquil,name:"America/Guayaquil",offset:i.UTC_MINUS_5,timezone:s.EcuadorTime},V4={id:r.AmericaGuyana,name:"America/Guyana",offset:i.UTC_0,timezone:s.AtlanticStandardTime},z4={id:r.AmericaHalifax,name:"America/Halifax",offset:i.UTC_0,timezone:s.AtlanticStandardTime},Y4={id:r.AmericaHavana,name:"America/Havana",offset:i.UTC_MINUS_5,timezone:s.CubaStandardTime},J4={id:r.AmericaHermosillo,name:"America/Hermosillo",offset:i.UTC_MINUS_7,timezone:s.MountainStandardTime},$4={id:r.AmericaIndianaIndianapolis,name:"America/Indiana/Indianapolis",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},Z4={id:r.AmericaIndianaKnox,name:"America/Indiana/Knox",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},C4={id:r.AmericaIndianaMarengo,name:"America/Indiana/Marengo",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},Q4={id:r.AmericaIndianaPetersburg,name:"America/Indiana/Petersburg",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},X4={id:r.AmericaIndianaTellCity,name:"America/Indiana/Tell_City",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},a_={id:r.AmericaIndianaVevay,name:"America/Indiana/Vevay",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},e_={id:r.AmericaIndianaVincennes,name:"America/Indiana/Vincennes",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},n_={id:r.AmericaIndianaWinamac,name:"America/Indiana/Winamac",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},i_={id:r.AmericaInuvik,name:"America/Inuvik",offset:i.UTC_MINUS_7,timezone:s.MountainStandardTime},s_={id:r.AmericaIqaluit,name:"America/Iqaluit",offset:i.UTC_0,timezone:s.EasternStandardTime},r_={id:r.AmericaJamaica,name:"America/Jamaica",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},u_={id:r.AmericaJuneau,name:"America/Juneau",offset:i.UTC_MINUS_9,timezone:s.AlaskaStandardTime},t_={id:r.AmericaKentuckyLouisville,name:"America/Kentucky/Louisville",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},l_={id:r.AmericaKentuckyMonticello,name:"America/Kentucky/Monticello",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},o_={id:r.AmericaKralendijk,name:"America/Kralendijk",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},c_={id:r.AmericaLaPaz,name:"America/La_Paz",offset:i.UTC_MINUS_4,timezone:s.BoliviaTime},m_={id:r.AmericaLima,name:"America/Lima",offset:i.UTC_MINUS_5,timezone:s.PeruTime},A_={id:r.AmericaLosAngeles,name:"America/Los_Angeles",offset:i.UTC_MINUS_8,timezone:s.PacificStandardTime},f_={id:r.AmericaLouisville,name:"America/Louisville",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},d_={id:r.AmericaLowerPrinces,name:"America/Lower_Princes",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},g_={id:r.AmericaMaceio,name:"America/Maceio",offset:i.UTC_MINUS_3,timezone:s.BrasiliaTime},h_={id:r.AmericaManagua,name:"America/Managua",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},I_={id:r.AmericaManaus,name:"America/Manaus",offset:i.UTC_MINUS_4,timezone:s.AmazonTime},__={id:r.AmericaMarigot,name:"America/Marigot",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},p_={id:r.AmericaMartinique,name:"America/Martinique",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},E_={id:r.AmericaMatamoros,name:"America/Matamoros",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},S_={id:r.AmericaMazatlan,name:"America/Mazatlan",offset:i.UTC_MINUS_7,timezone:s.MountainStandardTime},T_={id:r.AmericaMenominee,name:"America/Menominee",offset:i.UTC_MINUS_5,timezone:s.CentralStandardTime},v_={id:r.AmericaMerida,name:"America/Merida",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},b_={id:r.AmericaMetlakatla,name:"America/Metlakatla",offset:i.UTC_MINUS_9,timezone:s.AlaskaStandardTime},B_={id:r.AmericaMexicoCity,name:"America/Mexico_City",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},U_={id:r.AmericaMiquelon,name:"America/Miquelon",offset:i.UTC_MINUS_3,timezone:s.SaintPierreAndMiquelonStandardTime},N_={id:r.AmericaMoncton,name:"America/Moncton",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},y_={id:r.AmericaMonterrey,name:"America/Monterrey",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},D_={id:r.AmericaMontevideo,name:"America/Montevideo",offset:i.UTC_MINUS_3,timezone:s.UruguayStandardTime},P_={id:r.AmericaMontreal,name:"America/Montreal",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},F_={id:r.AmericaMontserrat,name:"America/Montserrat",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},M_={id:r.AmericaNassau,name:"America/Nassau",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},k_={id:r.AmericaNewYork,name:"America/New_York",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},L_={id:r.AmericaNipigon,name:"America/Nipigon",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},w_={id:r.AmericaNome,name:"America/Nome",offset:i.UTC_MINUS_9,timezone:s.AlaskaStandardTime},G_={id:r.AmericaNoronha,name:"America/Noronha",offset:i.UTC_MINUS_2,timezone:s.FernandoDeNoronhaTime},x_={id:r.AmericaNorthDakotaBeulah,name:"America/North_Dakota/Beulah",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},O_={id:r.AmericaNorthDakotaCenter,name:"America/North_Dakota/Center",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},q_={id:r.AmericaNorthDakotaNewSalem,name:"America/North_Dakota/New_Salem",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},K_={id:r.AmericaOjinaga,name:"America/Ojinaga",offset:i.UTC_MINUS_7,timezone:s.MountainStandardTime},j_={id:r.AmericaPanama,name:"America/Panama",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},H_={id:r.AmericaPangnirtung,name:"America/Pangnirtung",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},R_={id:r.AmericaParamaribo,name:"America/Paramaribo",offset:i.UTC_MINUS_3,timezone:s.SurinameTime},W_={id:r.AmericaPhoenix,name:"America/Phoenix",offset:i.UTC_MINUS_7,timezone:s.MountainStandardTime},V_={id:r.AmericaPortAuPrince,name:"America/Port-au-Prince",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},z_={id:r.AmericaPortOfSpain,name:"America/Port_of_Spain",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},Y_={id:r.AmericaPortoVelho,name:"America/Porto_Velho",offset:i.UTC_MINUS_4,timezone:s.AmazonTime},J_={id:r.AmericaPuertoRico,name:"America/Puerto_Rico",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},$_={id:r.AmericaRainyRiver,name:"America/Rainy_River",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},Z_={id:r.AmericaRankinInlet,name:"America/Rankin_Inlet",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},C_={id:r.AmericaRecife,name:"America/Recife",offset:i.UTC_MINUS_3,timezone:s.BrasiliaTime},Q_={id:r.AmericaRegina,name:"America/Regina",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},X_={id:r.AmericaResolute,name:"America/Resolute",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},ap={id:r.AmericaRioBranco,name:"America/Rio_Branco",offset:i.UTC_MINUS_5,timezone:s.AcreTime},ep={id:r.AmericaSantaIsabel,name:"America/Santa_Isabel",offset:i.UTC_MINUS_8,timezone:s.PacificStandardTime},np={id:r.AmericaSantarem,name:"America/Santarem",offset:i.UTC_MINUS_3,timezone:s.BrasiliaTime},ip={id:r.AmericaSantiago,name:"America/Santiago",offset:i.UTC_MINUS_4,timezone:s.ChileStandardTime},sp={id:r.AmericaSantoDomingo,name:"America/Santo_Domingo",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},rp={id:r.AmericaSaoPaulo,name:"America/Sao_Paulo",offset:i.UTC_MINUS_3,timezone:s.BrasiliaTime},up={id:r.AmericaScoresbysund,name:"America/Scoresbysund",offset:i.UTC_MINUS_1,timezone:s.EasternGreenlandTime},tp={id:r.AmericaShiprock,name:"America/Shiprock",offset:i.UTC_MINUS_7,timezone:s.MountainStandardTime},lp={id:r.AmericaSitka,name:"America/Sitka",offset:i.UTC_MINUS_9,timezone:s.AlaskaStandardTime},op={id:r.AmericaStBarthelemy,name:"America/St_Barthelemy",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},cp={id:r.AmericaStJohns,name:"America/St_Johns",offset:i.UTC_MINUS_3,timezone:s.NewfoundlandStandardTime},mp={id:r.AmericaStKitts,name:"America/St_Kitts",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},Ap={id:r.AmericaStLucia,name:"America/St_Lucia",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},fp={id:r.AmericaStThomas,name:"America/St_Thomas",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},dp={id:r.AmericaStVincent,name:"America/St_Vincent",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},gp={id:r.AmericaSwiftCurrent,name:"America/Swift_Current",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},hp={id:r.AmericaTegucigalpa,name:"America/Tegucigalpa",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},Ip={id:r.AmericaThule,name:"America/Thule",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},_p={id:r.AmericaThunderBay,name:"America/Thunder_Bay",offset:i.UTC_MINUS_4,timezone:s.EasternStandardTime},pp={id:r.AmericaTijuana,name:"America/Tijuana",offset:i.UTC_MINUS_8,timezone:s.PacificStandardTime},Ep={id:r.AmericaToronto,name:"America/Toronto",offset:i.UTC_MINUS_5,timezone:s.EasternStandardTime},Sp={id:r.AmericaTortola,name:"America/Tortola",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},Tp={id:r.AmericaVancouver,name:"America/Vancouver",offset:i.UTC_MINUS_8,timezone:s.PacificStandardTime},vp={id:r.AmericaWhitehorse,name:"America/Whitehorse",offset:i.UTC_MINUS_8,timezone:s.PacificStandardTime},bp={id:r.AmericaWinnipeg,name:"America/Winnipeg",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},Bp={id:r.AmericaYakutat,name:"America/Yakutat",offset:i.UTC_MINUS_9,timezone:s.AlaskaStandardTime},Up={id:r.AmericaYellowknife,name:"America/Yellowknife",offset:i.UTC_MINUS_6,timezone:s.MountainStandardTime},Np={id:r.AntarcticaCasey,name:"Antarctica/Casey",offset:i.UTC_MINUS_8,timezone:s.WesternStandardTime},yp={id:r.AntarcticaDavis,name:"Antarctica/Davis",offset:i.UTC_MINUS_7,timezone:s.NewfoundlandStandardTime},Dp={id:r.AntarcticaDumontDUrville,name:"Antarctica/DumontDUrville",offset:i.UTC_MINUS_10,timezone:s.CentralStandardTime},Pp={id:r.AntarcticaMacquarie,name:"Antarctica/Macquarie",offset:i.UTC_MINUS_11,timezone:s.CentralStandardTime},Fp={id:r.AntarcticaMawson,name:"Antarctica/Mawson",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},Mp={id:r.AntarcticaMcMurdo,name:"Antarctica/McMurdo",offset:i.UTC_MINUS_12,timezone:s.NewZealandStandardTime},kp={id:r.AntarcticaPalmer,name:"Antarctica/Palmer",offset:i.UTC_MINUS_4,timezone:s.ChathamStandardTime},Lp={id:r.AntarcticaRothera,name:"Antarctica/Rothera",offset:i.UTC_MINUS_3,timezone:s.RotheraResearchStationTime},wp={id:r.AntarcticaSyowa,name:"Antarctica/Syowa",offset:i.UTC_MINUS_3,timezone:s.ShowaStationTime},Gp={id:r.AntarcticaTroll,name:"Antarctica/Troll",offset:i.UTC_MINUS_2,timezone:s.CentralStandardTime},xp={id:r.AntarcticaVostok,name:"Antarctica/Vostok",offset:i.UTC_MINUS_6,timezone:s.CentralStandardTime},Op={id:r.ArcticLongyearbyen,name:"Arctic/Longyearbyen",offset:i.UTC_MINUS_1,timezone:s.CentralEuropeanTime},qp={id:r.AsiaAden,name:"Asia/Aden",offset:i.UTC_PLUS_3,timezone:s.ArabiaStandardTime},Kp={id:r.AsiaAlmaty,name:"Asia/Almaty",offset:i.UTC_PLUS_6,timezone:s.AlmaAtaTime},jp={id:r.AsiaAmman,name:"Asia/Amman",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},Hp={id:r.AsiaAnadyr,name:"Asia/Anadyr",offset:i.UTC_PLUS_12,timezone:s.NewCaledoniaTime},Rp={id:r.AsiaAqtau,name:"Asia/Aqtau",offset:i.UTC_PLUS_5,timezone:s.AqtobeTime},Wp={id:r.AsiaAqtobe,name:"Asia/Aqtobe",offset:i.UTC_PLUS_5,timezone:s.AqtobeTime},Vp={id:r.AsiaAshgabat,name:"Asia/Ashgabat",offset:i.UTC_PLUS_5,timezone:s.TurkmenistanTime},zp={id:r.AsiaBaghdad,name:"Asia/Baghdad",offset:i.UTC_PLUS_3,timezone:s.ArabiaStandardTime},Yp={id:r.AsiaBahrain,name:"Asia/Bahrain",offset:i.UTC_PLUS_3,timezone:s.ArabiaStandardTime},Jp={id:r.AsiaBaku,name:"Asia/Baku",offset:i.UTC_PLUS_4,timezone:s.AzerbaijanTime},$p={id:r.AsiaBangkok,name:"Asia/Bangkok",offset:i.UTC_PLUS_7,timezone:s.IndochinaTime},Zp={id:r.AsiaBarnaul,name:"Asia/Barnaul",offset:i.UTC_PLUS_7,timezone:s.KrasnoyarskTime},Cp={id:r.AsiaBeirut,name:"Asia/Beirut",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},Qp={id:r.AsiaBishkek,name:"Asia/Bishkek",offset:i.UTC_PLUS_6,timezone:s.KyrgyzstanTime},Xp={id:r.AsiaBrunei,name:"Asia/Brunei",offset:i.UTC_PLUS_8,timezone:s.BruneiTime},aE={id:r.AsiaChita,name:"Asia/Chita",offset:i.UTC_PLUS_9,timezone:s.YakutskTime},eE={id:r.AsiaChoibalsan,name:"Asia/Choibalsan",offset:i.UTC_PLUS_8,timezone:s.ChoibalsanStandardTime},nE={id:r.AsiaColombo,name:"Asia/Colombo",offset:i.UTC_PLUS_5,timezone:s.IndianStandardTime},iE={id:r.AsiaDamascus,name:"Asia/Damascus",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},sE={id:r.AsiaDhaka,name:"Asia/Dhaka",offset:i.UTC_PLUS_6,timezone:s.BangladeshStandardTime},rE={id:r.AsiaDili,name:"Asia/Dili",offset:i.UTC_PLUS_9,timezone:s.JapanStandardTime},uE={id:r.AsiaDubai,name:"Asia/Dubai",offset:i.UTC_PLUS_4,timezone:s.GulfStandardTime},tE={id:r.AsiaDushanbe,name:"Asia/Dushanbe",offset:i.UTC_PLUS_5,timezone:s.TajikistanTime},lE={id:r.AsiaFamagusta,name:"Asia/Famagusta",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},oE={id:r.AsiaGaza,name:"Asia/Gaza",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},cE={id:r.AsiaHebron,name:"Asia/Hebron",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},mE={id:r.AsiaHoChiMinh,name:"Asia/Ho_Chi_Minh",offset:i.UTC_PLUS_7,timezone:s.IndochinaTime},AE={id:r.AsiaHongKong,name:"Asia/Hong_Kong",offset:i.UTC_PLUS_8,timezone:s.HongKongTime},fE={id:r.AsiaHovd,name:"Asia/Hovd",offset:i.UTC_PLUS_7,timezone:s.HovdTime},dE={id:r.AsiaIrkutsk,name:"Asia/Irkutsk",offset:i.UTC_PLUS_8,timezone:s.IrkutskTime},gE={id:r.AsiaJakarta,name:"Asia/Jakarta",offset:i.UTC_PLUS_7,timezone:s.WesternIndonesianTime},hE={id:r.AsiaJayapura,name:"Asia/Jayapura",offset:i.UTC_PLUS_9,timezone:s.JapanStandardTime},IE={id:r.AsiaJerusalem,name:"Asia/Jerusalem",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},_E={id:r.AsiaKabul,name:"Asia/Kabul",offset:i.UTC_PLUS_4,timezone:s.AfghanistanTime},pE={id:r.AsiaKamchatka,name:"Asia/Kamchatka",offset:i.UTC_PLUS_12,timezone:s.KamchatkaTime},EE={id:r.AsiaKarachi,name:"Asia/Karachi",offset:i.UTC_PLUS_5,timezone:s.PakistanStandardTime},SE={id:r.AsiaKathmandu,name:"Asia/Kathmandu",offset:i.UTC_PLUS_5,timezone:s.NepalTime},TE={id:r.AsiaKhandyga,name:"Asia/Khandyga",offset:i.UTC_PLUS_9,timezone:s.YakutskTime},vE={id:r.AsiaKolkata,name:"Asia/Kolkata",offset:i.UTC_PLUS_5,timezone:s.IndianStandardTime},bE={id:r.AsiaKrasnoyarsk,name:"Asia/Krasnoyarsk",offset:i.UTC_PLUS_7,timezone:s.KrasnoyarskTime},BE={id:r.AsiaKualaLumpur,name:"Asia/Kuala_Lumpur",offset:i.UTC_PLUS_8,timezone:s.MalaysiaStandardTime},UE={id:r.AsiaKuching,name:"Asia/Kuching",offset:i.UTC_PLUS_8,timezone:s.MalaysiaStandardTime},NE={id:r.AsiaKuwait,name:"Asia/Kuwait",offset:i.UTC_PLUS_3,timezone:s.ArabiaStandardTime},yE={id:r.AsiaMacau,name:"Asia/Macau",offset:i.UTC_PLUS_8,timezone:s.ChinaStandardTime},DE={id:r.AsiaMagadan,name:"Asia/Magadan",offset:i.UTC_PLUS_11,timezone:s.MagadanTime},PE={id:r.AsiaMakassar,name:"Asia/Makassar",offset:i.UTC_PLUS_8,timezone:s.MalaysiaTime},FE={id:r.AsiaManila,name:"Asia/Manila",offset:i.UTC_PLUS_8,timezone:s.PhilippineTime},ME={id:r.AsiaMuscat,name:"Asia/Muscat",offset:i.UTC_PLUS_4,timezone:s.GulfStandardTime},kE={id:r.AsiaNovokuznetsk,name:"Asia/Novokuznetsk",offset:i.UTC_PLUS_6,timezone:s.NovosibirskTime},LE={id:r.AsiaNovosibirsk,name:"Asia/Novosibirsk",offset:i.UTC_PLUS_6,timezone:s.NovosibirskTime},wE={id:r.AsiaOmsk,name:"Asia/Omsk",offset:i.UTC_PLUS_6,timezone:s.OmskTime},GE={id:r.AsiaOral,name:"Asia/Oral",offset:i.UTC_PLUS_5,timezone:s.OralTime},xE={id:r.AsiaPhnomPenh,name:"Asia/Phnom_Penh",offset:i.UTC_PLUS_7,timezone:s.IndochinaTime},OE={id:r.AsiaPontianak,name:"Asia/Pontianak",offset:i.UTC_PLUS_7,timezone:s.WesternIndonesianTime},qE={id:r.AsiaPyongyang,name:"Asia/Pyongyang",offset:i.UTC_PLUS_9,timezone:s.KoreaStandardTime},KE={id:r.AsiaQatar,name:"Asia/Qatar",offset:i.UTC_PLUS_3,timezone:s.ArabiaStandardTime},jE={id:r.AsiaQyzylorda,name:"Asia/Qyzylorda",offset:i.UTC_PLUS_5,timezone:s.WestKazakhstanTime},HE={id:r.AsiaRangoon,name:"Asia/Rangoon",offset:i.UTC_PLUS_6,timezone:s.MyanmarStandardTime},RE={id:r.AsiaRiyadh,name:"Asia/Riyadh",offset:i.UTC_PLUS_3,timezone:s.ArabiaStandardTime},WE={id:r.AsiaSakhalin,name:"Asia/Sakhalin",offset:i.UTC_PLUS_11,timezone:s.SakhalinIslandTime},VE={id:r.AsiaSamarkand,name:"Asia/Samarkand",offset:i.UTC_PLUS_5,timezone:s.UzbekistanTime},zE={id:r.AsiaSeoul,name:"Asia/Seoul",offset:i.UTC_PLUS_9,timezone:s.KoreaStandardTime},YE={id:r.AsiaShanghai,name:"Asia/Shanghai",offset:i.UTC_PLUS_8,timezone:s.ChinaStandardTime},JE={id:r.AsiaSingapore,name:"Asia/Singapore",offset:i.UTC_PLUS_8,timezone:s.SingaporeStandardTime},$E={id:r.AsiaSrednekolymsk,name:"Asia/Srednekolymsk",offset:i.UTC_PLUS_11,timezone:s.SrednekolymskTime},ZE={id:r.AsiaTaipei,name:"Asia/Taipei",offset:i.UTC_PLUS_8,timezone:s.ChinaStandardTime},CE={id:r.AsiaTashkent,name:"Asia/Tashkent",offset:i.UTC_PLUS_5,timezone:s.UzbekistanTime},QE={id:r.AsiaTbilisi,name:"Asia/Tbilisi",offset:i.UTC_PLUS_4,timezone:s.GeorgiaStandardTime},XE={id:r.AsiaTehran,name:"Asia/Tehran",offset:i.UTC_PLUS_3,timezone:s.IranStandardTime},aS={id:r.AsiaThimphu,name:"Asia/Thimphu",offset:i.UTC_PLUS_6,timezone:s.BhutanTime},eS={id:r.AsiaTokyo,name:"Asia/Tokyo",offset:i.UTC_PLUS_9,timezone:s.JapanStandardTime},nS={id:r.AsiaTomsk,name:"Asia/Tomsk",offset:i.UTC_PLUS_6,timezone:s.KrasnoyarskTime},iS={id:r.AsiaUlaanbaatar,name:"Asia/Ulaanbaatar",offset:i.UTC_PLUS_8,timezone:s.UlaanbaatarStandardTime},sS={id:r.AsiaUrumqi,name:"Asia/Urumqi",offset:i.UTC_PLUS_8,timezone:s.ChinaStandardTime},rS={id:r.AsiaUstNera,name:"Asia/Ust-Nera",offset:i.UTC_PLUS_10,timezone:s.VladivostokTime},uS={id:r.AsiaVientiane,name:"Asia/Vientiane",offset:i.UTC_PLUS_7,timezone:s.IndochinaTime},tS={id:r.AsiaVladivostok,name:"Asia/Vladivostok",offset:i.UTC_PLUS_10,timezone:s.VladivostokTime},lS={id:r.AsiaYakutsk,name:"Asia/Yakutsk",offset:i.UTC_PLUS_9,timezone:s.YakutskTime},oS={id:r.AsiaYekaterinburg,name:"Asia/Yekaterinburg",offset:i.UTC_PLUS_5,timezone:s.YekaterinburgTime},cS={id:r.AsiaYerevan,name:"Asia/Yerevan",offset:i.UTC_PLUS_4,timezone:s.ArmeniaTime},mS={id:r.AtlanticAzores,name:"Atlantic/Azores",offset:i.UTC_MINUS_1,timezone:s.AzoresStandardTime},AS={id:r.AtlanticBermuda,name:"Atlantic/Bermuda",offset:i.UTC_MINUS_4,timezone:s.AtlanticStandardTime},fS={id:r.AtlanticCanary,name:"Atlantic/Canary",offset:i.UTC_MINUS_1,timezone:s.WesternEuropeanTime},dS={id:r.AtlanticCapeVerde,name:"Atlantic/Cape_Verde",offset:i.UTC_0,timezone:s.CapeVerdeTime},gS={id:r.AtlanticFaroe,name:"Atlantic/Faroe",offset:i.UTC_0,timezone:s.GreenwichMeanTime},hS={id:r.AtlanticMadeira,name:"Atlantic/Madeira",offset:i.UTC_0,timezone:s.WesternEuropeanTime},IS={id:r.AtlanticReykjavik,name:"Atlantic/Reykjavik",offset:i.UTC_0,timezone:s.GreenwichMeanTime},_S={id:r.AtlanticSouthGeorgia,name:"Atlantic/South_Georgia",offset:i.UTC_0,timezone:s.CoordinatedUniversalTime},pS={id:r.AtlanticStHelena,name:"Atlantic/St_Helena",offset:i.UTC_0,timezone:s.GreenwichMeanTime},ES={id:r.AtlanticStanley,name:"Atlantic/Stanley",offset:i.UTC_0,timezone:s.FalklandIslandsTime},SS={id:r.AustraliaAdelaide,name:"Australia/Adelaide",offset:i.UTC_PLUS_9_30,timezone:s.AustralianCentralStandardTime},TS={id:r.AustraliaBrisbane,name:"Australia/Brisbane",offset:i.UTC_PLUS_10,timezone:s.AustralianEasternStandardTime},vS={id:r.AustraliaBrokenHill,name:"Australia/Broken_Hill",offset:i.UTC_PLUS_9_30,timezone:s.AustralianCentralStandardTime},bS={id:r.AustraliaCanberra,name:"Australia/Canberra",offset:i.UTC_PLUS_10,timezone:s.AustralianEasternStandardTime},BS={id:r.AustraliaCurrie,name:"Australia/Currie",offset:i.UTC_PLUS_10,timezone:s.AustralianEasternStandardTime},US={id:r.AustraliaDarwin,name:"Australia/Darwin",offset:i.UTC_PLUS_9_30,timezone:s.AustralianCentralStandardTime},NS={id:r.AustraliaEucla,name:"Australia/Eucla",offset:i.UTC_PLUS_8_45,timezone:s.AustralianCentralWesternStandardTime},yS={id:r.AustraliaHobart,name:"Australia/Hobart",offset:i.UTC_PLUS_10,timezone:s.AustralianEasternStandardTime},DS={id:r.AustraliaLindeman,name:"Australia/Lindeman",offset:i.UTC_PLUS_10,timezone:s.AustralianEasternStandardTime},PS={id:r.AustraliaLordHowe,name:"Australia/Lord_Howe",offset:i.UTC_PLUS_10_30,timezone:s.LordHoweStandardTime},FS={id:r.AustraliaMelbourne,name:"Australia/Melbourne",offset:i.UTC_PLUS_10,timezone:s.AustralianEasternStandardTime},MS={id:r.AustraliaPerth,name:"Australia/Perth",offset:i.UTC_PLUS_8,timezone:s.AustralianWesternStandardTime},kS={id:r.AustraliaSydney,name:"Australia/Sydney",offset:i.UTC_PLUS_10,timezone:s.AustralianEasternStandardTime},LS={id:r.EuropeAmsterdam,name:"Europe/Amsterdam",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},wS={id:r.EuropeAndorra,name:"Europe/Andorra",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},GS={id:r.EuropeAthens,name:"Europe/Athens",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},xS={id:r.EuropeBelgrade,name:"Europe/Belgrade",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},OS={id:r.EuropeBerlin,name:"Europe/Berlin",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},qS={id:r.EuropeBratislava,name:"Europe/Bratislava",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},KS={id:r.EuropeBrussels,name:"Europe/Brussels",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},jS={id:r.EuropeBucharest,name:"Europe/Bucharest",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},HS={id:r.EuropeBudapest,name:"Europe/Budapest",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},RS={id:r.EuropeBusingen,name:"Europe/Busingen",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},WS={id:r.EuropeChisinau,name:"Europe/Chisinau",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},VS={id:r.EuropeCopenhagen,name:"Europe/Copenhagen",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},zS={id:r.EuropeDublin,name:"Europe/Dublin",offset:i.UTC_0,timezone:s.GreenwichMeanTime},YS={id:r.EuropeGibraltar,name:"Europe/Gibraltar",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},JS={id:r.EuropeGuernsey,name:"Europe/Guernsey",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},$S={id:r.EuropeHelsinki,name:"Europe/Helsinki",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},ZS={id:r.EuropeIsleOfMan,name:"Europe/Isle_of_Man",offset:i.UTC_0,timezone:s.GreenwichMeanTime},CS={id:r.EuropeIstanbul,name:"Europe/Istanbul",offset:i.UTC_PLUS_3,timezone:s.EasternEuropeanTime},QS={id:r.EuropeJersey,name:"Europe/Jersey",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},XS={id:r.EuropeKaliningrad,name:"Europe/Kaliningrad",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},aT={id:r.EuropeKiev,name:"Europe/Kiev",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},eT={id:r.EuropeLisbon,name:"Europe/Lisbon",offset:i.UTC_0,timezone:s.GreenwichMeanTime},nT={id:r.EuropeLjubljana,name:"Europe/Ljubljana",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},iT={id:r.EuropeLondon,name:"Europe/London",offset:i.UTC_0,timezone:s.GreenwichMeanTime},sT={id:r.EuropeLuxembourg,name:"Europe/Luxembourg",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},rT={id:r.EuropeMadrid,name:"Europe/Madrid",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},uT={id:r.EuropeMalta,name:"Europe/Malta",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},tT={id:r.EuropeMariehamn,name:"Europe/Mariehamn",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},lT={id:r.EuropeMinsk,name:"Europe/Minsk",offset:i.UTC_PLUS_3,timezone:s.EasternEuropeanTime},oT={id:r.EuropeMonaco,name:"Europe/Monaco",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},cT={id:r.EuropeMoscow,name:"Europe/Moscow",offset:i.UTC_PLUS_3,timezone:s.EasternEuropeanTime},mT={id:r.EuropeOslo,name:"Europe/Oslo",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},AT={id:r.EuropeParis,name:"Europe/Paris",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},fT={id:r.EuropePodgorica,name:"Europe/Podgorica",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},dT={id:r.EuropePrague,name:"Europe/Prague",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},gT={id:r.EuropeRiga,name:"Europe/Riga",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},hT={id:r.EuropeRome,name:"Europe/Rome",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},IT={id:r.EuropeSamara,name:"Europe/Samara",offset:i.UTC_PLUS_4,timezone:s.EasternEuropeanTime},_T={id:r.EuropeSanMarino,name:"Europe/San_Marino",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},pT={id:r.EuropeSarajevo,name:"Europe/Sarajevo",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},ET={id:r.EuropeSimferopol,name:"Europe/Simferopol",offset:i.UTC_PLUS_3,timezone:s.EasternEuropeanTime},ST={id:r.EuropeSkopje,name:"Europe/Skopje",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},TT={id:r.EuropeSofia,name:"Europe/Sofia",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},vT={id:r.EuropeStockholm,name:"Europe/Stockholm",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},bT={id:r.EuropeTallinn,name:"Europe/Tallinn",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},BT={id:r.EuropeTirane,name:"Europe/Tirane",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},UT={id:r.EuropeUzhgorod,name:"Europe/Uzhgorod",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},NT={id:r.EuropeVaduz,name:"Europe/Vaduz",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},yT={id:r.EuropeVatican,name:"Europe/Vatican",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},DT={id:r.EuropeVienna,name:"Europe/Vienna",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},PT={id:r.EuropeVilnius,name:"Europe/Vilnius",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},FT={id:r.EuropeVolgograd,name:"Europe/Volgograd",offset:i.UTC_PLUS_4,timezone:s.EasternEuropeanTime},MT={id:r.EuropeWarsaw,name:"Europe/Warsaw",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},kT={id:r.EuropeZagreb,name:"Europe/Zagreb",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},LT={id:r.EuropeZaporozhye,name:"Europe/Zaporozhye",offset:i.UTC_PLUS_2,timezone:s.EasternEuropeanTime},wT={id:r.EuropeZurich,name:"Europe/Zurich",offset:i.UTC_PLUS_1,timezone:s.CentralEuropeanTime},GT={id:r.IndianAntananarivo,name:"Indian/Antananarivo",offset:i.UTC_PLUS_3,timezone:s.EastAfricaTime},xT={id:r.IndianChagos,name:"Indian/Chagos",offset:i.UTC_PLUS_6,timezone:s.IndianOceanTime},OT={id:r.IndianChristmas,name:"Indian/Christmas",offset:i.UTC_PLUS_7,timezone:s.ChristmasIslandTime},qT={id:r.IndianCocos,name:"Indian/Cocos",offset:i.UTC_PLUS_6,timezone:s.CocosIslandsTime},KT={id:r.IndianComoro,name:"Indian/Comoro",offset:i.UTC_PLUS_3,timezone:s.EastAfricaTime},jT={id:r.IndianKerguelen,name:"Indian/Kerguelen",offset:i.UTC_PLUS_5,timezone:s.FrenchSouthernAndAntarcticTime},HT={id:r.IndianMahe,name:"Indian/Mahe",offset:i.UTC_PLUS_4,timezone:s.SeychellesTime},RT={id:r.IndianMaldives,name:"Indian/Maldives",offset:i.UTC_PLUS_5,timezone:s.MaldivesTime},WT={id:r.IndianMauritius,name:"Indian/Mauritius",offset:i.UTC_PLUS_4,timezone:s.MauritiusTime},VT={id:r.IndianMayotte,name:"Indian/Mayotte",offset:i.UTC_PLUS_3,timezone:s.EastAfricaTime},zT={id:r.IndianReunion,name:"Indian/Reunion",offset:i.UTC_PLUS_4,timezone:s.ReunionTime},YT={id:r.PacificApia,name:"Pacific/Apia",offset:i.UTC_PLUS_13,timezone:s.SamoaStandardTime},JT={id:r.PacificAuckland,name:"Pacific/Auckland",offset:i.UTC_PLUS_13,timezone:s.NewZealandStandardTime},$T={id:r.PacificChatham,name:"Pacific/Chatham",offset:i.UTC_PLUS_13,timezone:s.ChathamStandardTime},ZT={id:r.PacificEaster,name:"Pacific/Easter",offset:i.UTC_PLUS_6,timezone:s.EasterIslandStandardTime},CT={id:r.PacificEfate,name:"Pacific/Efate",offset:i.UTC_PLUS_11,timezone:s.VanuatuTime},QT={id:r.PacificEnderbury,name:"Pacific/Enderbury",offset:i.UTC_PLUS_13,timezone:s.TongaTime},XT={id:r.PacificFakaofo,name:"Pacific/Fakaofo",offset:i.UTC_PLUS_13,timezone:s.TongaTime},av={id:r.PacificFiji,name:"Pacific/Fiji",offset:i.UTC_PLUS_12,timezone:s.FijiTime},ev={id:r.PacificFunafuti,name:"Pacific/Funafuti",offset:i.UTC_PLUS_12,timezone:s.TuvaluTime},nv={id:r.PacificGalapagos,name:"Pacific/Galapagos",offset:i.UTC_PLUS_6,timezone:s.GalapagosTime},iv={id:r.PacificGambier,name:"Pacific/Gambier",offset:i.UTC_PLUS_9,timezone:s.GambierIslandTime},sv={id:r.PacificGuadalcanal,name:"Pacific/Guadalcanal",offset:i.UTC_PLUS_11,timezone:s.SolomonIslandsTime},rv={id:r.PacificGuam,name:"Pacific/Guam",offset:i.UTC_PLUS_10,timezone:s.ChamorroStandardTime},uv={id:r.PacificHonolulu,name:"Pacific/Honolulu",offset:i.UTC_PLUS_10,timezone:s.HawaiiAleutianStandardTime},tv={id:r.PacificJohnston,name:"Pacific/Johnston",offset:i.UTC_PLUS_10,timezone:s.HawaiiAleutianStandardTime},lv={id:r.PacificKiritimati,name:"Pacific/Kiritimati",offset:i.UTC_PLUS_14,timezone:s.LineIslandsTime},ov={id:r.PacificKosrae,name:"Pacific/Kosrae",offset:i.UTC_PLUS_11,timezone:s.KosraeTime},cv={id:r.PacificKwajalein,name:"Pacific/Kwajalein",offset:i.UTC_PLUS_12,timezone:s.MarshallIslandsTime},mv={id:r.PacificMajuro,name:"Pacific/Majuro",offset:i.UTC_PLUS_12,timezone:s.MarshallIslandsTime},Av={id:r.PacificMarquesas,name:"Pacific/Marquesas",offset:i.UTC_PLUS_9,timezone:s.MarquesasIslandsTime},fv={id:r.PacificMidway,name:"Pacific/Midway",offset:i.UTC_PLUS_11,timezone:s.SamoaStandardTime},dv={id:r.PacificNauru,name:"Pacific/Nauru",offset:i.UTC_PLUS_12,timezone:s.NauruTime},gv={id:r.PacificNiue,name:"Pacific/Niue",offset:i.UTC_PLUS_11,timezone:s.NiueTime},hv={id:r.PacificNorfolk,name:"Pacific/Norfolk",offset:i.UTC_PLUS_11,timezone:s.NorfolkIslandTime},Iv={id:r.PacificNoumea,name:"Pacific/Noumea",offset:i.UTC_PLUS_11,timezone:s.NewCaledoniaTime},_v={id:r.PacificPagoPago,name:"Pacific/Pago_Pago",offset:i.UTC_PLUS_11,timezone:s.SamoaStandardTime},pv={id:r.PacificPalau,name:"Pacific/Palau",offset:i.UTC_PLUS_9,timezone:s.PalauTime},Ev={id:r.PacificPitcairn,name:"Pacific/Pitcairn",offset:i.UTC_PLUS_8,timezone:s.PitcairnTime},Sv={id:r.PacificPonape,name:"Pacific/Ponape",offset:i.UTC_PLUS_11,timezone:s.PohnpeiStandardTime},Tv={id:r.PacificPortMoresby,name:"Pacific/Port_Moresby",offset:i.UTC_PLUS_10,timezone:s.PapuaNewGuineaTime},vv={id:r.PacificRarotonga,name:"Pacific/Rarotonga",offset:i.UTC_PLUS_10,timezone:s.CookIslandTime},bv={id:r.PacificSaipan,name:"Pacific/Saipan",offset:i.UTC_PLUS_10,timezone:s.ChamorroStandardTime},Bv={id:r.PacificTahiti,name:"Pacific/Tahiti",offset:i.UTC_PLUS_10,timezone:s.TahitiTime},Uv={id:r.PacificTarawa,name:"Pacific/Tarawa",offset:i.UTC_PLUS_12,timezone:s.GilbertIslandTime},Nv={id:r.PacificTongatapu,name:"Pacific/Tongatapu",offset:i.UTC_PLUS_13,timezone:s.TongaTime},yv={id:r.PacificChuuk,name:"Pacific/Chuuk",offset:i.UTC_PLUS_10,timezone:s.ChuukTime},Dv={id:r.PacificPohnpei,name:"Pacific/Pohnpei",offset:i.UTC_PLUS_11,timezone:s.PohnpeiStandardTime},Pv={id:r.PacificYap,name:"Pacific/Yap",offset:i.UTC_PLUS_10,timezone:s.ChuukTime};var V=(a=>(a.CJS="cjs",a.ESM="esm",a.IIFE="iife",a.UMD="umd",a))(V||{}),xa=(a=>(a.ES5="es5",a.ES6="es6",a.ES2015="es2015",a.ES2016="es2016",a.ES2017="es2017",a.ES2018="es2018",a.ES2019="es2019",a.ES2020="es2020",a.ES2021="es2021",a.ES2022="es2022",a.ESNext="esnext",a.Latest="latest",a))(xa||{}),Na=(a=>(a.ESBuild="esbuild",a.Vite="vite",a))(Na||{}),Oa=(a=>(a.Browser="browser",a.Node="node",a))(Oa||{});var la=(a=>(a.DesktopApplication="desktop-application",a.MobileApplication="mobile-application",a.WebApplication="web-application",a.CLIApplication="cli-application",a.Library="library",a.WebService="web-service",a))(la||{});var n=(a=>(a.Contains="contains",a.HasCharacterCount="has-character-count",a.HasNumberCount="has-number-count",a.HasLetterCount="has-letter-count",a.HasLowercaseCount="has-lowercase-count",a.HasSpacesCount="has-spaces-count",a.HasSymbolCount="has-symbol-count",a.HasUppercaseCount="has-uppercase-count",a.IsAfter="is-after",a.IsAfterOrEqual="is-after-or-equal",a.IsAirport="is-airport",a.IsAlpha="is-alpha",a.IsAlphanumeric="is-alphanumeric",a.IsAlgorithmHash="is-algorithm-hash",a.IsAscii="is-ascii",a.IsBase64="is-base-64",a.IsBefore="is-before",a.IsBeforeOrAfter="is-before-or-after",a.IsBeforeOrEqual="is-before-or-equal",a.IsBetween="is-between",a.IsBIC="is-bic",a.IsBitcoinAddress="is-bitcoin-address",a.IsBoolean="is-boolean",a.IsColor="is-color",a.IsComplexEnough="is-complex-enough",a.IsCountry="is-country",a.IsCreditCard="is-credit-card",a.IsCurrency="is-currency",a.IsDataURI="is-data-uri",a.IsDate="is-date",a.IsDateRange="is-date-range",a.IsDateTime="is-date-time",a.IsDayOfMonth="is-day-of-month",a.IsDecimal="is-decimal",a.IsDivisibleBy="is-divisible-by",a.IsDomainName="is-domain-name",a.IsEmailAddress="is-email-address",a.IsEthereumAddress="is-ethereum-address",a.IsEAN="is-ean",a.IsEIN="is-ein",a.IsEqual="is-equal",a.IsEvenNumber="is-even-number",a.IsFloat="is-float",a.IsIBAN="is-iban",a.IsGreaterThan="greater-than",a.IsGreaterThanOrEqual="greater-than-or-equal",a.IsHSLColor="is-hsl-color",a.IsHexColor="is-hex-color",a.IsHexadecimal="is-hexadecimal",a.IsIdentityCardCode="is-identity-card-code",a.IsIMEI="is-imei",a.IsInIPAddressRange="is-in-ip-address-range",a.IsInList="is-in-list",a.IsInTheLast="is-in-the-last",a.IsInteger="is-integer",a.IsIPAddress="is-ip-address",a.IsIPAddressRange="is-ip-address-range",a.IsISBN="is-isbn",a.IsISIN="is-isin",a.IsISMN="is-ismn",a.IsISRC="is-isrc",a.IsISSN="is-issn",a.IsISO4217="is-iso-4217",a.IsISO8601="is-iso-8601",a.IsISO31661Alpha2="is-iso-31661-alpha-2",a.IsISO31661Alpha3="is-iso-31661-alpha-3",a.IsJSON="is-json",a.IsLanguage="is-language",a.IsLatitude="is-latitude",a.IsLongitude="is-longitude",a.IsLengthEqual="is-length-equal",a.IsLengthGreaterThan="is-length-greater-than",a.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",a.IsLengthLessThan="is-length-less-than",a.IsLengthLessThanOrEqual="is-length-less-than-or-equal",a.IsLessThan="less-than",a.IsLessThanOrEqual="less-than-or-equal",a.IsLicensePlateNumber="is-license-plate-number",a.IsLowercase="is-lowercase",a.IsOctal="is-octal",a.IsMACAddress="is-mac-address",a.IsMD5="is-md5",a.IsMagnetURI="is-magnet-uri",a.IsMarkdown="is-markdown",a.IsMimeType="is-mime-type",a.IsMonth="is-month",a.IsNegativeNumber="is-negative-number",a.IsNotDate="is-not-date",a.IsNotEqual="is-not-equal",a.IsNotInIPAddressRange="is-not-in-ip-address-range",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsNotRegexMatch="is-not-regex-match",a.IsNotToday="is-not-today",a.IsNumber="is-number",a.IsNumeric="is-numeric",a.IsOddNumber="is-odd-number",a.IsPassportNumber="is-passport-number",a.IsPhoneNumber="is-phone-number",a.IsPort="is-port",a.IsPositiveNumber="is-positive-number",a.IsPostalCode="is-postal-code",a.IsProvince="is-province",a.IsRGBColor="is-rgb-color",a.IsRegexMatch="is-regex-match",a.IsRequired="is-required",a.IsSemanticVersion="is-semantic-version",a.IsSlug="is-slug",a.IsSSN="is-ssn",a.IsState="is-state",a.IsStreetAddress="is-street-address",a.IsString="is-string",a.IsStrongPassword="is-strong-password",a.IsTags="is-tags",a.IsTaxIDNumber="is-tax-id-number",a.IsThisMonth="is-this-month",a.IsThisQuarter="is-this-quarter",a.IsThisWeek="is-this-week",a.IsThisWeekend="is-this-weekend",a.IsThisYear="is-this-year",a.IsTime="is-time",a.IsTimeOfDay="is-time-of-day",a.IsTimeRange="is-time-range",a.IsToday="is-today",a.IsURL="is-url",a.IsUUID="is-uuid",a.IsUppercase="is-uppercase",a.IsUsernameAvailable="is-username-available",a.IsValidStreetAddress="is-valid-street-address",a.IsVATIDNumber="is-vat-id-number",a.IsWeekday="is-weekday",a.IsWeekend="is-weekend",a.IsYear="is-year",a))(n||{});var Pr=(a=>(a[a.IsHSLColor=n.IsHSLColor]="IsHSLColor",a[a.IsHexColor=n.IsHexColor]="IsHexColor",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsRGBColor=n.IsRGBColor]="IsRGBColor",a[a.IsString=n.IsString]="IsString",a))(Pr||{}),Fr=(a=>(a[a.IsAlgorithmHash=n.IsAlgorithmHash]="IsAlgorithmHash",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(Fr||{}),Mr=(a=>(a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsSemanticVersion=n.IsSemanticVersion]="IsSemanticVersion",a[a.IsString=n.IsString]="IsString",a))(Mr||{}),kr=(a=>(a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a[a.IsUUID=n.IsUUID]="IsUUID",a))(kr||{}),Lr=(a=>(a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsMD5=n.IsMD5]="IsMD5",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(Lr||{}),wr=(a=>(a[a.IsBoolean=n.IsBoolean]="IsBoolean",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a))(wr||{}),Gr=(a=>(a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsAfterOrEqual=n.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=n.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsDate=n.IsDate]="IsDate",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotDate=n.IsNotDate]="IsNotDate",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNotToday=n.IsNotToday]="IsNotToday",a[a.IsThisWeek=n.IsThisWeek]="IsThisWeek",a[a.IsThisMonth=n.IsThisMonth]="IsThisMonth",a[a.IsThisQuarter=n.IsThisQuarter]="IsThisQuarter",a[a.IsThisYear=n.IsThisYear]="IsThisYear",a[a.IsToday=n.IsToday]="IsToday",a[a.IsWeekend=n.IsWeekend]="IsWeekend",a))(Gr||{}),xr=(a=>(a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=n.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsDate=n.IsDate]="IsDate",a[a.IsDateRange=n.IsDateRange]="IsDateRange",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a))(xr||{}),Or=(a=>(a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsAfterOrEqual=n.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=n.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsDate=n.IsDate]="IsDate",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotDate=n.IsNotDate]="IsNotDate",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNotToday=n.IsNotToday]="IsNotToday",a[a.IsThisWeek=n.IsThisWeek]="IsThisWeek",a[a.IsThisMonth=n.IsThisMonth]="IsThisMonth",a[a.IsThisQuarter=n.IsThisQuarter]="IsThisQuarter",a[a.IsThisYear=n.IsThisYear]="IsThisYear",a[a.IsToday=n.IsToday]="IsToday",a[a.IsWeekend=n.IsWeekend]="IsWeekend",a))(Or||{}),qr=(a=>(a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsAfterOrEqual=n.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=n.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsDayOfMonth=n.IsDayOfMonth]="IsDayOfMonth",a[a.IsEvenNumber=n.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsGreaterThan=n.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=n.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=n.IsInteger]="IsInteger",a[a.IsLessThan=n.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=n.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsOddNumber=n.IsOddNumber]="IsOddNumber",a[a.IsToday=n.IsToday]="IsToday",a[a.IsWeekday=n.IsWeekday]="IsWeekday",a[a.IsWeekend=n.IsWeekend]="IsWeekend",a))(qr||{}),Kr=(a=>(a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsAfterOrEqual=n.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=n.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsEvenNumber=n.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsGreaterThan=n.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=n.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=n.IsInteger]="IsInteger",a[a.IsLessThan=n.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=n.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsMonth=n.IsMonth]="IsMonth",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsOddNumber=n.IsOddNumber]="IsOddNumber",a[a.IsThisMonth=n.IsThisMonth]="IsThisMonth",a))(Kr||{}),jr=(a=>(a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsAfterOrEqual=n.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=n.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsTime=n.IsTime]="IsTime",a))(jr||{}),Hr=(a=>(a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=n.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsTime=n.IsTime]="IsTime",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsTimeRange=n.IsTimeRange]="IsTimeRange",a))(Hr||{}),Rr=(a=>(a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=n.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsTimeOfDay=n.IsTimeOfDay]="IsTimeOfDay",a[a.IsTimeRange=n.IsTimeRange]="IsTimeRange",a))(Rr||{}),Wr=(a=>(a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsAfterOrEqual=n.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=n.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsEvenNumber=n.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsGreaterThan=n.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=n.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=n.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=n.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsOddNumber=n.IsOddNumber]="IsOddNumber",a[a.IsWeekday=n.IsWeekday]="IsWeekday",a[a.IsWeekend=n.IsWeekend]="IsWeekend",a))(Wr||{}),Vr=(a=>(a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsAfterOrEqual=n.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=n.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsEvenNumber=n.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsGreaterThan=n.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=n.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=n.IsInteger]="IsInteger",a[a.IsLessThan=n.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=n.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsOddNumber=n.IsOddNumber]="IsOddNumber",a[a.IsThisYear=n.IsThisYear]="IsThisYear",a[a.IsYear=n.IsYear]="IsYear",a))(Vr||{}),zr=(a=>(a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsHexadecimal=n.IsHexadecimal]="IsHexadecimal",a[a.IsLengthEqual=n.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=n.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=n.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=n.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=n.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(zr||{}),Yr=(a=>(a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsJSON=n.IsJSON]="IsJSON",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a))(Yr||{}),Jr=(a=>(a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsMarkdown=n.IsMarkdown]="IsMarkdown",a[a.IsString=n.IsString]="IsString",a))(Jr||{}),$r=(a=>(a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsCurrency=n.IsCurrency]="IsCurrency",a[a.IsDecimal=n.IsDecimal]="IsDecimal",a[a.IsDivisibleBy=n.IsDivisibleBy]="IsDivisibleBy",a[a.IsEvenNumber=n.IsEvenNumber]="IsEvenNumber",a[a.IsFloat=n.IsFloat]="IsFloat",a[a.IsGreaterThan=n.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=n.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=n.IsInteger]="IsInteger",a[a.IsISO8601=n.IsISO8601]="IsISO8601",a[a.IsLessThan=n.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=n.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNegativeNumber=n.IsNegativeNumber]="IsNegativeNumber",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsOddNumber=n.IsOddNumber]="IsOddNumber",a[a.IsPositiveNumber=n.IsPositiveNumber]="IsPositiveNumber",a))($r||{}),Zr=(a=>(a[a.IsBitcoinAddress=n.IsBitcoinAddress]="IsBitcoinAddress",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a))(Zr||{}),Cr=(a=>(a[a.IsEthereumAddress=n.IsEthereumAddress]="IsEthereumAddress",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a))(Cr||{}),Qr=(a=>(a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsJSON=n.IsJSON]="IsJSON",a[a.IsLanguage=n.IsLanguage]="IsLanguage",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a))(Qr||{}),Xr=(a=>(a[a.IsAlpha=n.IsAlpha]="IsAlpha",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(Xr||{}),au=(a=>(a[a.IsAlpha=n.IsAlpha]="IsAlpha",a[a.IsCountry=n.IsCountry]="IsCountry",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(au||{}),eu=(a=>(a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsFloat=n.IsFloat]="IsFloat",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNumeric=n.IsNumeric]="IsNumeric",a))(eu||{}),nu=(a=>(a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsFloat=n.IsFloat]="IsFloat",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNumeric=n.IsNumeric]="IsNumeric",a))(nu||{}),iu=(a=>(a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsPostalCode=n.IsPostalCode]="IsPostalCode",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a))(iu||{}),su=(a=>(a[a.IsAlpha=n.IsAlpha]="IsAlpha",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsProvince=n.IsProvince]="IsProvince",a[a.IsString=n.IsString]="IsString",a))(su||{}),ru=(a=>(a[a.IsAlpha=n.IsAlpha]="IsAlpha",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsState=n.IsState]="IsState",a[a.IsString=n.IsString]="IsString",a))(ru||{}),uu=(a=>(a[a.IsAlphanumeric=n.IsAlphanumeric]="IsAlphanumeric",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a[a.IsStreetAddress=n.IsStreetAddress]="IsStreetAddress",a))(uu||{}),tu=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a))(tu||{}),lu=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a))(lu||{}),ou=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsDataURI=n.IsDataURI]="IsDataURI",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(ou||{}),cu=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsDomainName=n.IsDomainName]="IsDomainName",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(cu||{}),mu=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsEmailAddress=n.IsEmailAddress]="IsEmailAddress",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(mu||{}),Au=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsIPAddress=n.IsIPAddress]="IsIPAddress",a[a.IsInIPAddressRange=n.IsInIPAddressRange]="IsInIPAddressRange",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotInIPAddressRange=n.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(Au||{}),fu=(a=>(a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsIPAddressRange=n.IsIPAddressRange]="IsIPAddressRange",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotInIPAddressRange=n.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(fu||{}),du=(a=>(a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsGreaterThan=n.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=n.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=n.IsInteger]="IsInteger",a[a.IsLessThan=n.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=n.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a))(du||{}),gu=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsMACAddress=n.IsMACAddress]="IsMACAddress",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(gu||{}),hu=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsMagnetURI=n.IsMagnetURI]="IsMagnetURI",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(hu||{}),Iu=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsMimeType=n.IsMimeType]="IsMimeType",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(Iu||{}),_u=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a[a.IsSlug=n.IsSlug]="IsSlug",a))(_u||{}),pu=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a[a.IsURL=n.IsURL]="IsURL",a))(pu||{}),Eu=(a=>(a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsAfterOrEqual=n.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=n.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsDecimal=n.IsDecimal]="IsDecimal",a[a.IsDivisibleBy=n.IsDivisibleBy]="IsDivisibleBy",a[a.IsEAN=n.IsEAN]="IsEAN",a[a.IsEIN=n.IsEIN]="IsEIN",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsEvenNumber=n.IsEvenNumber]="IsEvenNumber",a[a.IsFloat=n.IsFloat]="IsFloat",a[a.IsGreaterThan=n.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=n.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInt=n.IsInteger]="IsInt",a[a.IsISBN=n.IsISBN]="IsISBN",a[a.IsISMN=n.IsISMN]="IsISMN",a[a.IsISSN=n.IsISSN]="IsISSN",a[a.IsLatitude=n.IsLatitude]="IsLatitude",a[a.IsLongitude=n.IsLongitude]="IsLongitude",a[a.IsLessThan=n.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=n.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsMACAddress=n.IsMACAddress]="IsMACAddress",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsNegativeNumber=n.IsNegativeNumber]="IsNegativeNumber",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsOddNumber=n.IsOddNumber]="IsOddNumber",a[a.IsPassportNumber=n.IsPassportNumber]="IsPassportNumber",a[a.IsPhoneNumber=n.IsPhoneNumber]="IsPhoneNumber",a[a.IsPort=n.IsPort]="IsPort",a[a.IsPositiveNumber=n.IsPositiveNumber]="IsPositiveNumber",a[a.IsPostalCode=n.IsPostalCode]="IsPostalCode",a[a.IsSemanticVersion=n.IsSemanticVersion]="IsSemanticVersion",a[a.IsSSN=n.IsSSN]="IsSSN",a[a.IsTaxIDNumber=n.IsTaxIDNumber]="IsTaxIDNumber",a[a.IsUUID=n.IsUUID]="IsUUID",a[a.IsVATIDNumber=n.IsVATIDNumber]="IsVATIDNumber",a))(Eu||{}),Su=(a=>(a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsFloat=n.IsFloat]="IsFloat",a[a.IsGreaterThan=n.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=n.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=n.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=n.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsNumeric=n.IsNumeric]="IsNumeric",a))(Su||{}),Tu=(a=>(a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInteger=n.IsInteger]="IsInteger",a[a.IsGreaterThan=n.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=n.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=n.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=n.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsNumeric=n.IsNumeric]="IsNumeric",a))(Tu||{}),vu=(a=>(a[a.IsCreditCard=n.IsCreditCard]="IsCreditCard",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsLengthEqual=n.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=n.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=n.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=n.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=n.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsRegexMatch=n.IsRegexMatch]="IsRegexMatch",a[a.IsNotRegexMatch=n.IsNotRegexMatch]="IsNotRegexMatch",a))(vu||{}),bu=(a=>(a[a.isEmailAddress=n.IsEmailAddress]="isEmailAddress",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsLengthEqual=n.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=n.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=n.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=n.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=n.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsRegexMatch=n.IsRegexMatch]="IsRegexMatch",a[a.IsNotRegexMatch=n.IsNotRegexMatch]="IsNotRegexMatch",a))(bu||{}),Bu=(a=>(a[a.IsLicensePlateNumber=n.IsLicensePlateNumber]="IsLicensePlateNumber",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=n.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsString=n.IsString]="IsString",a[a.IsRegexMatch=n.IsRegexMatch]="IsRegexMatch",a))(Bu||{}),Uu=(a=>(a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsPassportNumber=n.IsPassportNumber]="IsPassportNumber",a[a.IsString=n.IsString]="IsString",a[a.IsRegexMatch=n.IsRegexMatch]="IsRegexMatch",a))(Uu||{}),Nu=(a=>(a[a.IsComplexEnough=n.IsComplexEnough]="IsComplexEnough",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=n.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsLengthGreaterThan=n.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=n.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=n.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=n.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsStrongPassword=n.IsStrongPassword]="IsStrongPassword",a[a.IsString=n.IsString]="IsString",a[a.IsRegexMatch=n.IsRegexMatch]="IsRegexMatch",a))(Nu||{}),yu=(a=>(a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=n.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsPhoneNumber=n.IsPhoneNumber]="IsPhoneNumber",a[a.IsRegexMatch=n.IsRegexMatch]="IsRegexMatch",a))(yu||{}),Du=(a=>(a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsSSN=n.IsSSN]="IsSSN",a[a.IsString=n.IsString]="IsString",a[a.IsRegexMatch=n.IsRegexMatch]="IsRegexMatch",a))(Du||{}),Pu=(a=>(a[a.IsAirport=n.IsAirport]="IsAirport",a[a.IsAlpha=n.IsAlpha]="IsAlpha",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(Pu||{}),Fu=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsBIC=n.IsBIC]="IsBIC",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(Fu||{}),Mu=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsEAN=n.IsEAN]="IsEAN",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(Mu||{}),ku=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsEIN=n.IsEIN]="IsEIN",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(ku||{}),Lu=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsIBAN=n.IsIBAN]="IsIBAN",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(Lu||{}),wu=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsISBN=n.IsISBN]="IsISBN",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(wu||{}),Gu=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsISIN=n.IsISIN]="IsISIN",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(Gu||{}),xu=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsISMN=n.IsISMN]="IsISMN",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(xu||{}),Ou=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsISSN=n.IsISSN]="IsISSN",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a))(Ou||{}),qu=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a[a.IsTaxIDNumber=n.IsTaxIDNumber]="IsTaxIDNumber",a))(qu||{}),Ku=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a[a.IsVATIDNumber=n.IsVATIDNumber]="IsVATIDNumber",a))(Ku||{}),ju=(a=>(a[a.Contains=n.Contains]="Contains",a[a.HasNumberCount=n.HasNumberCount]="HasNumberCount",a[a.HasLowercaseCount=n.HasLowercaseCount]="HasLowercaseCount",a[a.HasLetterCount=n.HasLetterCount]="HasLetterCount",a[a.HasSpacesCount=n.HasSpacesCount]="HasSpacesCount",a[a.HasSymbolCount=n.HasSymbolCount]="HasSymbolCount",a[a.HasUppercaseCount=n.HasUppercaseCount]="HasUppercaseCount",a[a.IsAlpha=n.IsAlpha]="IsAlpha",a[a.IsAlphanumeric=n.IsAlphanumeric]="IsAlphanumeric",a[a.IsAscii=n.IsAscii]="IsAscii",a[a.IsBase64=n.IsBase64]="IsBase64",a[a.IsColor=n.IsColor]="IsColor",a[a.IsComplexEnough=n.IsComplexEnough]="IsComplexEnough",a[a.IsCreditCard=n.IsCreditCard]="IsCreditCard",a[a.IsDataURI=n.IsDataURI]="IsDataURI",a[a.IsDomainName=n.IsDomainName]="IsDomainName",a[a.IsEmailAddress=n.IsEmailAddress]="IsEmailAddress",a[a.IsEthereumAddress=n.IsEthereumAddress]="IsEthereumAddress",a[a.IsEAN=n.IsEAN]="IsEAN",a[a.IsEIN=n.IsEIN]="IsEIN",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsIBAN=n.IsIBAN]="IsIBAN",a[a.IsHSLColor=n.IsHSLColor]="IsHSLColor",a[a.IsHexColor=n.IsHexColor]="IsHexColor",a[a.IsHexadecimal=n.IsHexadecimal]="IsHexadecimal",a[a.IsIdentityCardCode=n.IsIdentityCardCode]="IsIdentityCardCode",a[a.IsIMEI=n.IsIMEI]="IsIMEI",a[a.IsInList=n.IsInList]="IsInList",a[a.IsIPAddress=n.IsIPAddress]="IsIPAddress",a[a.IsInIPAddressRange=n.IsInIPAddressRange]="IsInIPAddressRange",a[a.IsISBN=n.IsISBN]="IsISBN",a[a.IsISIN=n.IsISIN]="IsISIN",a[a.IsISMN=n.IsISMN]="IsISMN",a[a.IsISRC=n.IsISRC]="IsISRC",a[a.IsISSN=n.IsISSN]="IsISSN",a[a.IsLanguage=n.IsLanguage]="IsLanguage",a[a.IsLatitude=n.IsLatitude]="IsLatitude",a[a.IsLongitude=n.IsLongitude]="IsLongitude",a[a.IsLengthEqual=n.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=n.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=n.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=n.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=n.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsLicensePlateNumber=n.IsLicensePlateNumber]="IsLicensePlateNumber",a[a.IsLowercase=n.IsLowercase]="IsLowercase",a[a.IsOctal=n.IsOctal]="IsOctal",a[a.IsMACAddress=n.IsMACAddress]="IsMACAddress",a[a.IsMD5=n.IsMD5]="IsMD5",a[a.IsMagnetURI=n.IsMagnetURI]="IsMagnetURI",a[a.IsMarkdown=n.IsMarkdown]="IsMarkdown",a[a.IsMimeType=n.IsMimeType]="IsMimeType",a[a.IsMonth=n.IsMonth]="IsMonth",a[a.IsNotInIPAddressRange=n.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=n.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsNumeric=n.IsNumeric]="IsNumeric",a[a.IsPassportNumber=n.IsPassportNumber]="IsPassportNumber",a[a.IsPhoneNumber=n.IsPhoneNumber]="IsPhoneNumber",a[a.IsPort=n.IsPort]="IsPort",a[a.IsPostalCode=n.IsPostalCode]="IsPostalCode",a[a.IsProvince=n.IsProvince]="IsProvince",a[a.IsRegexMatch=n.IsRegexMatch]="IsRegexMatch",a[a.IsSemanticVersion=n.IsSemanticVersion]="IsSemanticVersion",a[a.IsSlug=n.IsSlug]="IsSlug",a[a.IsSSN=n.IsSSN]="IsSSN",a[a.IsState=n.IsState]="IsState",a[a.IsStreetAddress=n.IsStreetAddress]="IsStreetAddress",a[a.IsString=n.IsString]="IsString",a[a.IsTaxIDNumber=n.IsTaxIDNumber]="IsTaxIDNumber",a[a.IsURL=n.IsURL]="IsURL",a[a.IsUUID=n.IsUUID]="IsUUID",a[a.IsUppercase=n.IsUppercase]="IsUppercase",a[a.IsVATIDNumber=n.IsVATIDNumber]="IsVATIDNumber",a[a.IsWeekday=n.IsWeekday]="IsWeekday",a[a.IsWeekend=n.IsWeekend]="IsWeekend",a[a.IsYear=n.IsYear]="IsYear",a))(ju||{}),Hu=(a=>(a[a.Contains=n.Contains]="Contains",a[a.IsAlpha=n.IsAlpha]="IsAlpha",a[a.IsAlphanumeric=n.IsAlphanumeric]="IsAlphanumeric",a[a.IsInList=n.IsInList]="IsInList",a[a.IsMarkdown=n.IsMarkdown]="IsMarkdown",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNumeric=n.IsNumeric]="IsNumeric",a[a.IsLowercase=n.IsLowercase]="IsLowercase",a[a.IsString=n.IsString]="IsString",a[a.IsUppercase=n.IsUppercase]="IsUppercase",a))(Hu||{});var fa=(a=>(a.Ava="ava",a.Jest="jest",a))(fa||{}),le=(a=>(a.Clover="clover",a.Cobertura="cobertura",a.HTML="html",a.JSONSummary="json-summary",a.JSON="json",a.Lcov="lcov",a.Lcovonly="lcovonly",a.None="none",a.TeamCity="teamcity",a.TextLcov="text-lcov",a.TextSummary="text-summary",a.Text="text",a))(le||{});import me from"path";function Rn(a){switch(a){case V.CJS:return".cjs";case V.ESM:return".mjs";case V.IIFE:return".iife.js";case V.UMD:return".umd.js";default:return".js"}}function Wn(a){switch(a){case"cjs":case"commonjs":return".cjs";case"es":case"esm":case"module":return".mjs";case"iife":return".iife.js";case"umd":return".umd.js";default:return`unknown-${a}.js`}}import Ru,{emptyDir as Wu}from"fs-extra";import Vn from"node:path";async function zn(a){if(!a)throw new Error("Directory must be provided");if(a==="/")throw new Error("Cannot empty root directory");try{await Wu(a)}catch{throw new Error(`Could not empty directory: ${a}`)}}async function Yn(a){if(!a)throw new Error("File path must be provided");try{return Vn.join(Vn.resolve(),".srclaunch","config.json"),await Ru.readFile(a)}catch{throw new Error(`Could not read file: ${a}`)}}var Jn=(a=0)=>l=>`\x1B[${l+a}m`,$n=(a=0)=>l=>`\x1B[${38+a};5;${l}m`,Zn=(a=0)=>(l,c,A)=>`\x1B[${38+a};2;${l};${c};${A}m`;function Vu(){let a=new Map,l={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],overline:[53,55],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],blackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};l.color.gray=l.color.blackBright,l.bgColor.bgGray=l.bgColor.bgBlackBright,l.color.grey=l.color.blackBright,l.bgColor.bgGrey=l.bgColor.bgBlackBright;for(let[c,A]of Object.entries(l)){for(let[f,h]of Object.entries(A))l[f]={open:`\x1B[${h[0]}m`,close:`\x1B[${h[1]}m`},A[f]=l[f],a.set(h[0],h[1]);Object.defineProperty(l,c,{value:A,enumerable:!1})}return Object.defineProperty(l,"codes",{value:a,enumerable:!1}),l.color.close="\x1B[39m",l.bgColor.close="\x1B[49m",l.color.ansi=Jn(),l.color.ansi256=$n(),l.color.ansi16m=Zn(),l.bgColor.ansi=Jn(10),l.bgColor.ansi256=$n(10),l.bgColor.ansi16m=Zn(10),Object.defineProperties(l,{rgbToAnsi256:{value:(c,A,f)=>c===A&&A===f?c<8?16:c>248?231:Math.round((c-8)/247*24)+232:16+36*Math.round(c/255*5)+6*Math.round(A/255*5)+Math.round(f/255*5),enumerable:!1},hexToRgb:{value:c=>{let A=/(?<colorString>[a-f\d]{6}|[a-f\d]{3})/i.exec(c.toString(16));if(!A)return[0,0,0];let{colorString:f}=A.groups;f.length===3&&(f=[...f].map(_=>_+_).join(""));let h=Number.parseInt(f,16);return[h>>16&255,h>>8&255,h&255]},enumerable:!1},hexToAnsi256:{value:c=>l.rgbToAnsi256(...l.hexToRgb(c)),enumerable:!1},ansi256ToAnsi:{value:c=>{if(c<8)return 30+c;if(c<16)return 90+(c-8);let A,f,h;if(c>=232)A=((c-232)*10+8)/255,f=A,h=A;else{c-=16;let S=c%36;A=Math.floor(c/36)/5,f=Math.floor(S/6)/5,h=S%6/5}let _=Math.max(A,f,h)*2;if(_===0)return 30;let p=30+(Math.round(h)<<2|Math.round(f)<<1|Math.round(A));return _===2&&(p+=60),p},enumerable:!1},rgbToAnsi:{value:(c,A,f)=>l.ansi256ToAnsi(l.rgbToAnsi256(c,A,f)),enumerable:!1},hexToAnsi:{value:c=>l.ansi256ToAnsi(l.hexToAnsi256(c)),enumerable:!1}}),l}var zu=Vu(),ua=zu;import je from"node:process";import Yu from"node:os";import Cn from"node:tty";function ra(a,l=je.argv){let c=a.startsWith("-")?"":a.length===1?"-":"--",A=l.indexOf(c+a),f=l.indexOf("--");return A!==-1&&(f===-1||A<f)}var{env:H}=je,oe;ra("no-color")||ra("no-colors")||ra("color=false")||ra("color=never")?oe=0:(ra("color")||ra("colors")||ra("color=true")||ra("color=always"))&&(oe=1);function Ju(){if("FORCE_COLOR"in H)return H.FORCE_COLOR==="true"?1:H.FORCE_COLOR==="false"?0:H.FORCE_COLOR.length===0?1:Math.min(Number.parseInt(H.FORCE_COLOR,10),3)}function $u(a){return a===0?!1:{level:a,hasBasic:!0,has256:a>=2,has16m:a>=3}}function Zu(a,{streamIsTTY:l,sniffFlags:c=!0}={}){let A=Ju();A!==void 0&&(oe=A);let f=c?oe:A;if(f===0)return 0;if(c){if(ra("color=16m")||ra("color=full")||ra("color=truecolor"))return 3;if(ra("color=256"))return 2}if(a&&!l&&f===void 0)return 0;let h=f||0;if(H.TERM==="dumb")return h;if(je.platform==="win32"){let _=Yu.release().split(".");return Number(_[0])>=10&&Number(_[2])>=10586?Number(_[2])>=14931?3:2:1}if("CI"in H)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI","GITHUB_ACTIONS","BUILDKITE","DRONE"].some(_=>_ in H)||H.CI_NAME==="codeship"?1:h;if("TEAMCITY_VERSION"in H)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(H.TEAMCITY_VERSION)?1:0;if("TF_BUILD"in H&&"AGENT_NAME"in H)return 1;if(H.COLORTERM==="truecolor")return 3;if("TERM_PROGRAM"in H){let _=Number.parseInt((H.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(H.TERM_PROGRAM){case"iTerm.app":return _>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(H.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(H.TERM)||"COLORTERM"in H?1:h}function Qn(a,l={}){let c=Zu(a,{streamIsTTY:a&&a.isTTY,...l});return $u(c)}var Cu={stdout:Qn({isTTY:Cn.isatty(1)}),stderr:Qn({isTTY:Cn.isatty(2)})},Xn=Cu;function ai(a,l,c){let A=a.indexOf(l);if(A===-1)return a;let f=l.length,h=0,_="";do _+=a.substr(h,A-h)+l+c,h=A+f,A=a.indexOf(l,h);while(A!==-1);return _+=a.slice(h),_}function ei(a,l,c,A){let f=0,h="";do{let _=a[A-1]==="\r";h+=a.substr(f,(_?A-1:A)-f)+l+(_?`\r
`:`
`)+c,f=A+1,A=a.indexOf(`
`,f)}while(A!==-1);return h+=a.slice(f),h}var{stdout:ni,stderr:ii}=Xn,He=Symbol("GENERATOR"),ya=Symbol("STYLER"),qa=Symbol("IS_EMPTY"),si=["ansi","ansi","ansi256","ansi16m"],Da=Object.create(null),Qu=(a,l={})=>{if(l.level&&!(Number.isInteger(l.level)&&l.level>=0&&l.level<=3))throw new Error("The `level` option should be an integer from 0 to 3");let c=ni?ni.level:0;a.level=l.level===void 0?c:l.level};var Xu=a=>{let l=(...c)=>c.join(" ");return Qu(l,a),Object.setPrototypeOf(l,Ka.prototype),l};function Ka(a){return Xu(a)}Object.setPrototypeOf(Ka.prototype,Function.prototype);for(let[a,l]of Object.entries(ua))Da[a]={get(){let c=ce(this,We(l.open,l.close,this[ya]),this[qa]);return Object.defineProperty(this,a,{value:c}),c}};Da.visible={get(){let a=ce(this,this[ya],!0);return Object.defineProperty(this,"visible",{value:a}),a}};var Re=(a,l,c,...A)=>a==="rgb"?l==="ansi16m"?ua[c].ansi16m(...A):l==="ansi256"?ua[c].ansi256(ua.rgbToAnsi256(...A)):ua[c].ansi(ua.rgbToAnsi(...A)):a==="hex"?Re("rgb",l,c,...ua.hexToRgb(...A)):ua[c][a](...A),at=["rgb","hex","ansi256"];for(let a of at){Da[a]={get(){let{level:c}=this;return function(...A){let f=We(Re(a,si[c],"color",...A),ua.color.close,this[ya]);return ce(this,f,this[qa])}}};let l="bg"+a[0].toUpperCase()+a.slice(1);Da[l]={get(){let{level:c}=this;return function(...A){let f=We(Re(a,si[c],"bgColor",...A),ua.bgColor.close,this[ya]);return ce(this,f,this[qa])}}}}var et=Object.defineProperties(()=>{},{...Da,level:{enumerable:!0,get(){return this[He].level},set(a){this[He].level=a}}}),We=(a,l,c)=>{let A,f;return c===void 0?(A=a,f=l):(A=c.openAll+a,f=l+c.closeAll),{open:a,close:l,openAll:A,closeAll:f,parent:c}},ce=(a,l,c)=>{let A=(...f)=>nt(A,f.length===1?""+f[0]:f.join(" "));return Object.setPrototypeOf(A,et),A[He]=a,A[ya]=l,A[qa]=c,A},nt=(a,l)=>{if(a.level<=0||!l)return a[qa]?"":l;let c=a[ya];if(c===void 0)return l;let{openAll:A,closeAll:f}=c;if(l.includes("\x1B"))for(;c!==void 0;)l=ai(l,c.close,c.open),c=c.parent;let h=l.indexOf(`
`);return h!==-1&&(l=ei(l,f,A,h)),A+l+f};Object.defineProperties(Ka.prototype,Da);var it=Ka(),zv=Ka({level:ii?ii.level:0});var Z=it;async function ca({bundle:a=!0,format:l=V.ESM,input:c,minify:A=!0,output:f,platform:h=Oa.Browser,sourcemap:_=!0,splitting:p=!0,target:S=xa.ESNext,treeShaking:B=!0,types:q=!0}){try{let x=[me.join(me.resolve(),c?.directory??"src",c?.file??"index.ts"),...c?.files?c.files.map(D=>me.join(me.resolve(),c?.directory??"src",D)):[]];f?.clean&&await zn(f?.directory??"dist");let K=await st({bundle:Boolean(a),entryPoints:x,external:typeof a=="object"?a.exclude:[],format:l,minify:A,outdir:p?f?.directory??"dist":void 0,outfile:p?void 0:`${f?.directory??"dist"}/${f?.file??"index"}${Rn(l)}`,platform:h,sourcemap:_,splitting:l==="esm"&&p,target:S,treeShaking:B});K.warnings&&K.warnings.forEach(D=>{console.warn(D.text)}),K.errors&&K.errors.forEach(D=>{console.error(D.text)}),q&&(console.info(`${Z.green("\u2714")} compiled types`),await te({input:c,types:q,output:f})),console.info(`${Z.green("\u2714")} bundled to ${Z.bold(l.toLocaleUpperCase())} format`)}catch(x){console.error(x)}}import{build as rt}from"vite";import ut from"@vitejs/plugin-react";import ja from"node:path";async function Ha({assets:a,bundle:l,format:c=V.ESM,formats:A,input:f,library:h=!1,optimize:_,manifest:p=!0,minify:S=!0,output:B,platform:q=Oa.Browser,rootDir:x,sourcemap:K=!0,target:D=xa.ESNext,types:Y=!0,webApp:R}){try{let ea=A&&A.length>0?A?.map(ia=>ia===V.ESM?"es":ia):[c===V.ESM?"es":c];await rt({build:{assetsDir:a?.directory?ja.join(ja.resolve(),a?.directory):void 0,emptyOutDir:B?.clean??!0,outDir:B?.directory??"dist",lib:Boolean(h)?{entry:ja.join(ja.resolve(),f?.directory??"src",f?.file??"index.ts"),formats:ea,name:h&&typeof h=="object"?h?.name:void 0,fileName:ia=>`${B?.file??"index"}${Wn(ia)}`}:!1,manifest:p,minify:S,rollupOptions:{external:typeof l=="object"?l.exclude??[]:[]},sourcemap:K,ssrManifest:p&&R?.ssr,target:D},configFile:!1,envPrefix:"SRCLAUNCH_",optimizeDeps:{exclude:_?.exclude??[],include:_?.include??[]},plugins:R?.react?[ut()]:[],root:x??ja.resolve()}),Y&&(console.info(`${Z.green("\u2714")} compiled types`),await te({input:f,types:Y,output:B})),console.info(`${Z.green("\u2714")} bundled to ${A&&A.length>0?`${Z.bold(A.join(", ").toLocaleUpperCase())} formats`:`${Z.bold(c.toLocaleUpperCase())} format`}`)}catch(ea){console.error(`Error occurred while building: ${ea.name}`,ea)}}var ri=new T({name:"build",description:"Commands for building various types of projects",run:async({config:a,flags:l})=>{let c=a.build;if(!c)throw new Error("Missing build configuration");let A=0;if(typeof c=="object"&&!Array.isArray(c))switch(c.tool){case Na.Vite:await Ha({...c,library:a.type===la.Library||a.type===la.CLIApplication?{name:a.name}:!1});return;case Na.ESBuild:default:let f=c.formats??[c.format??V.ESM];for(let h of f){let _=c.output?.clean??A===0,p=c.types??A===0;await ca({...c,output:{...c.output,clean:_},format:h,types:p}),A=A+1}}else if(Array.isArray(c))for(let f of c)switch(f.tool){case Na.Vite:await Ha({...f,library:a.type===la.Library||a.type===la.CLIApplication?{name:a.name}:!1});break;case Na.ESBuild:default:let h=f?.formats??[f.format??V.ESM];for(let _ of h){let p=f.output?.clean??A===0,S=f.types??A===0;await ca({...f,output:{...f.output,clean:p},format:_,types:S}),A=A+1}}},commands:[new T({name:"esbuild",description:"Compiles and optionally bundles a package using esbuild",run:async({config:a,flags:l})=>{let c=a.build;if(!c)throw new Error("Missing build configuration");let A=0;if(typeof c=="object"&&!Array.isArray(c))if(c.formats&&c.formats?.length>0)for(let f of c.formats){let h=c.output?.clean??A===0,_=c.types??A===0;await ca({...c,output:{...c.output,clean:h},format:f,types:_}),A=A=1}else await ca(c);else if(Array.isArray(c)&&c)for(let f of c)if(f.formats&&f.formats?.length>0)for(let h of f.formats){let _=(f.output?.clean||Boolean(l.clean))??A===0,p=f.types??A===0;await ca({...f,output:{directory:"dist",file:"index",...f.output,clean:_},format:h,types:p}),A=A=1}else{let h=(f.output?.clean||Boolean(l.clean))&&A===0,_=f.types??A===0;await ca({...f,output:{directory:"dist",file:"index",...f.output,clean:h},types:_})}}}),new T({name:"vite",description:"Compiles and bundles a package using Vite",run:async({config:a,flags:l})=>{let c=a.build;if(!c)throw new Error("Missing build configuration");if(typeof c=="object"&&!Array.isArray(c))await Ha({...c,library:a.type===la.Library||a.type===la.CLIApplication?{name:a.name}:!1});else if(Array.isArray(c)&&c)for(let A of c)await Ha({...A,library:a.type===la.Library||a.type===la.CLIApplication?{name:a.name}:!1})},type:"project"}),new T({name:"types",description:"Builds Typescript definitions",run:async({config:a,flags:l})=>{}}),new T({name:"help",description:"Shows help for build commands",run:async()=>{console.info("Available build commands are: lib, web-app, web-service, types, and help")},type:"project"})]});import Gt from"simple-git";import{render as xt}from"ink";var Wa=Ia(da(),1);import{Box as Mi,Spacer as kt,Text as Lt,useInput as wt}from"ink";var he=Ia(da(),1);import{Box as vt}from"ink";var _i=({children:a,...l})=>{let[c,A]=(0,he.useState)({columns:process.stdout.columns,rows:process.stdout.rows});return(0,he.useEffect)(()=>{function f(){A({columns:process.stdout.columns,rows:process.stdout.rows})}return process.stdout.on("resize",f),process.stdout.write("\x1B[?1049h"),()=>{process.stdout.off("resize",f),process.stdout.write("\x1B[?1049l")}},[]),React.createElement(vt,{width:c.columns,height:c.rows,...l},a)};var G=Ia(da(),1);import{Box as _a,Text as Nt,useFocus as yt,useFocusManager as Dt}from"ink";var pi=Ia(da(),1);import{Box as bt,Text as Ce,useFocus as Bt}from"ink";var Ut=({label:a,onFocus:l,status:c})=>{let{isFocused:A}=Bt();return(0,pi.useEffect)(()=>{A&&l()},[A,l]),React.createElement(bt,{height:1},React.createElement(Ce,{backgroundColor:A?"cyanBright":void 0,color:A?"#000000":"grayBright"},c&&React.createElement(Ce,{color:(()=>{switch(c){case"started":return"#82d800";case"starting":case"init":return"#ffcc00";case"error":return"#cc5222";default:return"#ffcc00"}})()}," \u25CF"),React.createElement(Ce,null," ",a," ")))},Ei=Ut;var Si=({children:a,title:l,...c})=>{let{enableFocus:A,focusNext:f}=Dt(),[h,_]=(0,G.useState)(0),{isFocused:p}=yt({autoFocus:!0});return(0,G.useEffect)(()=>{A()},[A]),(0,G.useEffect)(()=>{p&&f()},[p,f]),(0,G.useEffect)(()=>{G.default.Children.forEach(a,(S,B)=>{S?.props?.initial&&_(B)})},[a]),G.default.createElement(_a,{flexGrow:1,flexDirection:"column",...c},G.default.createElement(_a,{flexDirection:"row",height:1},G.default.createElement(_a,{paddingLeft:1,flexGrow:1},G.default.Children.map(a,(S,B)=>G.default.createElement(_a,{marginRight:2},G.default.createElement(Ei,{onFocus:()=>_(B),label:S?.props?.label,status:S?.props?.status})))),l&&G.default.createElement(_a,{alignItems:"flex-end",paddingRight:1},G.default.createElement(Nt,null,l))),G.default.createElement(_a,{flexGrow:1,flexDirection:"column",borderStyle:"round",borderColor:"black",width:"100%"},G.default.Children.map(a,(S,B)=>G.default.createElement(_a,{display:h===B?"flex":"none",flexDirection:"column"},G.default.Children.map(S,q=>G.default.createElement(G.default.Fragment,null,q))))))},Fa=({children:a})=>G.default.createElement(G.default.Fragment,null,a);import{Box as Ie,Text as ma}from"ink";var Ti=()=>React.createElement(Ie,{flexGrow:1},React.createElement(Ie,{borderStyle:"round",borderColor:"blue",flexDirection:"column",width:30,padding:1,paddingLeft:2},React.createElement(Ie,null,React.createElement(ma,null,"Change type")),React.createElement(Ie,null,React.createElement(ma,null,"New Feature"),React.createElement(ma,null,"Bugfix"),React.createElement(ma,null,"Documentation"),React.createElement(ma,null,"Formatting"),React.createElement(ma,null,"Refactor"),React.createElement(ma,null,"Performance"),React.createElement(ma,null,"Testing"),React.createElement(ma,null,"Chore"))));var Bi=Ia(da(),1);import{Box as bi}from"ink";var z=Ia(da(),1);import{Box as Ma,measureElement as vi,Text as Qe,useInput as Pt}from"ink";var _e=({items:a})=>{let[l,c]=(0,z.useState)(0),[A,f]=(0,z.useState)(0),[h,_]=(0,z.useState)([]),[p,S]=(0,z.useState)(!1),[B,q]=(0,z.useState)(!0),[x,K]=(0,z.useState)(1),[D,Y]=(0,z.useState)(0);Pt((F,M)=>{M.upArrow?(l>0&&c(l-1),q(l>=a.length-1)):M.downArrow&&(h.length>l+1&&c(l+1),q(l>=a.length-1))});let R=(0,z.createRef)();(0,z.useEffect)(()=>{let F=Math.ceil(A/h.length*100);K(F),S(h.length>=A)},[h.length,A]),(0,z.useEffect)(()=>{if(R.current){let F=vi(R.current)?.height;f(F??20)}},[a]),(0,z.useEffect)(()=>{if(R.current){let F=vi(R.current)?.height;f(F??20)}},[]),(0,z.useEffect)(()=>{A&&_(a.map((F,M)=>{let ga=M<A&&l<A||M<=l&&M>=l-A;return{key:M,message:F,visible:ga}}))},[a,l,A]);let ea=F=>F===l?"\u276F\xA0":"\xA0\xA0";(0,z.useEffect)(()=>{B&&c(a.length-1)},[a.length,B]),(0,z.useEffect)(()=>{let F=Math.floor(l/h.length*100);Y(F)},[l,h.length]);let ia=F=>F.indexOf("src/")===0?React.createElement(Qe,{color:"magenta"},F):React.createElement(Qe,{color:"lightGrey"},F);return React.createElement(Ma,{flexDirection:"row",minHeight:"100%",minWidth:"100%"},React.createElement(Ma,{flexDirection:"column",flexGrow:1,ref:R},React.createElement(Ma,{flexDirection:"column",flexGrow:1},h.map((F,M)=>F.visible?React.createElement(Qe,{key:M},!F.visible&&"X ",ea(M),ia(F.message.toString())):null))),p&&React.createElement(Ma,{alignItems:"stretch",borderStyle:"round",flexGrow:0,width:1,minHeight:"100%",flexDirection:"column"},React.createElement(Ma,{flexGrow:0,height:`${D}%`}),React.createElement(Ma,{borderStyle:"round",flexGrow:0,width:1,height:`${x}%`,marginLeft:-1})))};var Ui=()=>{let[a,l]=(0,Bi.useState)([]),c=A=>{l(f=>[...f,A])};return React.createElement(bi,{flexGrow:1},React.createElement(bi,{flexGrow:1,borderStyle:"round",borderColor:"gray",marginLeft:1},React.createElement(_e,{items:a})))};import{Box as Ft}from"ink";var Ni=()=>React.createElement(Ft,{flexGrow:1});var Di=Ia(da(),1);import{Box as yi}from"ink";var Pi=()=>{let[a,l]=(0,Di.useState)([]),c=A=>{l(f=>[...f,A])};return React.createElement(yi,{flexGrow:1},React.createElement(yi,{flexGrow:1,borderStyle:"round",borderColor:"gray",marginLeft:1},React.createElement(_e,{items:a})))};import{Box as Mt}from"ink";var Fi=()=>React.createElement(Mt,{flexGrow:1});var ki=({initialTab:a,cliVersion:l})=>{let[c,A]=(0,Wa.useState)([]),[f,h]=(0,Wa.useState)(void 0),_=p=>{A(S=>[...S,p])};return wt(async(p,S)=>{if(p==="q")throw _("Quitting"),new Error("Quitting");S.leftArrow}),(0,Wa.useEffect)(()=>{(async()=>{_(""),f&&_(f)})()},[]),React.createElement(_i,{borderStyle:"round",borderColor:"lightgrey",flexDirection:"column"},React.createElement(Si,null,React.createElement(Fa,{initial:a==="Overview",label:"Overview"},React.createElement(Fi,null)),React.createElement(Fa,{initial:a==="Build",label:"Build"},React.createElement(Pi,null)),React.createElement(Fa,{initial:a==="Tests",label:"Tests"},React.createElement(Ui,null)),React.createElement(Fa,{initial:a==="Changes",label:"Changes"},React.createElement(Ti,null)),React.createElement(Fa,{initial:a==="Release",label:"Release"},React.createElement(Ni,null))),React.createElement(Mi,{flexDirection:"row"},React.createElement(kt,null),React.createElement(Mi,{alignItems:"flex-end",paddingRight:1},React.createElement(Lt,null,l))))};var Li=new T({name:"changesets",description:"Manage changesets",commands:[new T({name:"add",description:"Create a changeset",run:async({cli:a,config:l,flags:c})=>{let A=c.message;if(c.interactive){let{waitUntilExit:f}=xt(React.createElement(ki,{initialTab:"Changes",cliVersion:a.pkg.version,flags:c}));await f()}else try{let f=Gt();await f.add("."),await f.commit(A),console.log(`${Z.green("\u2714")} added new changeset`)}catch(f){console.error("commit err",f)}},type:"project"}),new T({name:"list",description:"List changesets",run:async({config:a,flags:l})=>{},type:"project"}),new T({name:"help",description:"Show help for changesets",run:async()=>{console.info("Available changesets commands are: create, list")},type:"project"})]});var wi=new T({name:"dev",description:"Development environment commands",commands:[new T({name:"start",description:"Launches the local development environment.",run:async({cli:a,flags:l})=>{},type:"project"}),new T({name:"help",description:"Shows help for dev commands",run:async()=>{console.info("Available dev commands are: start, help")},type:"project"})]});var Gi=new T({name:"help",description:"Shows help for commands",run:async({cli:a})=>{a.showHelp()}});var xi=new T({name:"infrastructure",description:"Manage infrastructure",commands:[new T({name:"deploy",description:"Deploy infrastructure",run:async({config:a,flags:l})=>{},type:"workspace"}),new T({name:"help",description:"Shows help for infrastructure commands",run:async()=>{console.info("Available infrastructure commands are: deploy, help")},type:"workspace"})]});import ka from"fs-extra";import Va from"node:path";function Oi(a,l="srclaunch"){try{let c="",A="",f="export default {",h=`.${l==="srclaunch"||l==="sequelize"?"ts":"json"}`;for(let _ of a){let p=_.split(h)[0];l==="json"?A+=`import ${p} from './${p}.json';
`:l==="sequelize"?(A+=`import ${p}Init, { ${p} } from './${p}';
`,f+=`${p}: ${p}Init,`):A+=`import { ${p} } from './${p}.js';
`,c+=`  ${p},
`}return l==="sequelize"&&(f+="};"),`${A}
export {
${c}};
${l==="sequelize"?f:""}
`}catch(c){console.error(c)}}async function qi(a,l){try{let c=Va.join(Va.resolve(),l,"src");await ka.emptyDir(c);let A=await ka.readdir(a);for(let p of A){let S=await ka.readFile(Va.join(a,p),"utf8");if(!S.includes("fields: {"))throw new Error(`${p} is missing the fields property.`);let q=`
    created_date: {
      label: 'Created Date',
      required: false,
      type: Primitives.DateTime,
    },
    updated_date: {
      label: 'Updated Date',
      required: false,
      type: Primitives.DateTime,
    },
  `,x=S.indexOf("relationships:")+15,K=S.indexOf("}",x)+1,D=S.slice(x,K);if(D){let R=D.indexOf("belongsTo:")+10,ea=D.indexOf("]",R)+1,ia=D.slice(R,ea);if(ia){let F=ia.replace(/'/g,'"').replace(/ {2}|\r\n|\n|\r/g,"").replace(/\s/g,"").replace(",]","]"),M=JSON.parse(F);for(let na of M)q+=`
        ${na}Id: {
          label: '${na}',
          required: false,
          type: Primitives.UUID
        },
        `}}let Y=S.replace("fields: {",`fields: {
        ${q}`);await ka.writeFile(Va.join(c,p),Y,"utf8")}let h=(await ka.readdir(c)).filter(p=>p.slice(-3)===".ts"&&p.split(".ts")[0]!=="index"),_=Oi(h,"srclaunch");await ka.writeFile(Va.join(c,"index.ts"),_,"utf8")}catch(c){throw console.error(c),c}}import ta from"fs-extra";import X from"node:path";function Ki(){return`import { ModelProps, Primitives } from "@srclaunch/types";

  export const Document: ModelProps = {
    fields: {
      name: {
        label: "Name",
        type: Primitives.String,
        required: true,
      },
      description: {
        label: "Description",
        type: Primitives.String,
        required: true,
      }
    },
    name: "Document",
    relationships: {
      belongsTo: ["Organization", "Invoice", "User"],
    },
  };
  `}function ji(){return`import { ModelProps, Primitives } from "@srclaunch/types";

  export const Invoice: ModelProps = {
    fields: {
      amount: {
        label: "Amount",
        type: Primitives.Number,
        required: true,
      },
      currency: {
        label: "Currency",
        type: Primitives.CurrencyCode,
        required: true,
      },
      date: {
        label: "Date",
        type: Primitives.Date,
        required: true,
      },
      due_date: {
        label: "Due Date",
        type: Primitives.Date,
        required: true,
      },
      notes: {
        label: "Notes",
        type: Primitives.String,
      },
      status: {
        label: "Status",
        type: Primitives.String,
        required: true,
      },
    },
    name: "Invoice",
    relationships: {
      belongsTo: ["Organization", "Payment", "User"],
    },
  };`}function Hi(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const Organization: ModelProps = {
  fields: {
    description: {
      label: "Description",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
  },
  name: "Organization",
  relationships: {},
};`}function Ri(){return`import { ModelProps, Primitives } from "@srclaunch/types";

  export const Payment: ModelProps = {
    fields: {
      amount: {
        label: "Amount",
        type: Primitives.Number,
        required: true,
      },
      currency: {
        label: "Currency",
        type: Primitives.CurrencyCode,
        required: true,
      },
      date: {
        label: "Date",
        type: Primitives.Date,
        required: true,
      },
      failure_reason: {
        label: "Failure Reason",
        type: Primitives.Menu,
        menu: [
          {
            label: 'Insufficient Funds',
            value: 'insufficient-funds',
          },
          {
            label: 'Invalid Amount',
            value: 'invalid-amount',
          },
          {
            label: 'Invalid Currency',
            value: 'invalid-currency',
          },
          {
            label: 'Invalid Card',
            value: 'invalid-card',
          },
          {
            label: 'Invalid Card Expiry',
            value: 'invalid-card-expiry',
          },
          {
            label: 'Invalid Card Number',
            value: 'invalid-card-number',
          },
          {
            label: 'Invalid Card Security Code',
            value: 'invalid-card-security-code',
          },
          {
            label: 'Invalid Card Holder',
            value: 'invalid-card-holder',
          },
          {
            label: 'Invalid Card Address',
            value: 'invalid-card-address',
          },
        ]
      },
      notes: {
        label: "Notes",
        type: Primitives.String,
        required: true,
      },
      status: {
        label: "Status",
        type: Primitives.Menu,
        required: true,
        menu: [
          {
            label: "Paid",
            value: "paid",
          },
          {
            label: "Failure",
            value: "failure",
          },
          {
            label: "Pending",
            value: "pending",
          },
        ],
      }
    },
    name: "Payment",
    relationships: {
      belongsTo: ["Organization", "User"],
    },
  };`}function Wi(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const PaymentMethod: ModelProps = {
  fields: {
    default: {
      label: "Default",
      type: Primitives.Boolean,
    },
    masked_number: {
      label: "Number",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
    type: {
      label: "Type",
      menu: [
        {
          label: "Bank Transfer",
          value: "bank-transfer",
        },
        {
          label: "Credit Card",
          value: "credit-card",
        },
        {
          label: "Crypto",
          value: "crypto",
        },
      ],
      type: Primitives.Menu,
    },
  },
  name: "PaymentMethod",
  relationships: {
    belongsTo: ["Organization", "Payment", "Team", "User"],
  },
};`}function Vi(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const Person: ModelProps = {
  fields: {
    analytics: {
      label: "Analytics",
      type: Primitives.JSON,
    },
    billing: {
      label: "Billing Details",
      type: Primitives.JSON,
    },
  },
  name: "Person",
  relationships: {
    hasMany: ["Event"],
    hasOne: ["User"],
  },
};`}function zi(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const Subscription: ModelProps = {
  fields: {
    status: {
      label: "Status",
      menu: [
        {
          label: "Active",
          value: "active",
        },
        {
          label: "Expired",
          value: "expired",
        },
        {
          label: "Canceled",
          value: "canceled",
        },
      ],
      type: Primitives.Menu,
    },
    cancel_date: {
      label: "Cancel date",
      type: Primitives.DateTime,
    },
    expiration_date: {
      label: "Expiration date",
      type: Primitives.DateTime,
    },
    renewal_date: {
      label: "Renewal date",
      type: Primitives.DateTime,
    },
    start_date: {
      label: "Start date",
      type: Primitives.DateTime,
    },
  },
  name: "Subscription",
  relationships: {
    belongsTo: ["Organization", "Product", "Team", "User"],
  },
};`}function Yi(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const Team: ModelProps = {
  fields: {
    description: {
      label: "Description",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
  },
  name: "Team",
  relationships: {
    belongsTo: ["Organization"],
  },
};`}function Ji(){return`import {
  CurrencyCode,
  LanguageCode,
  LocaleCode,
  ModelProps,
  Primitives,
} from "@srclaunch/types";

export const User: ModelProps = {
  description: "A user that signs into the application",
  fields: {
    access: {
      label: "Access Details",
      type: Primitives.JSON,
    },
    cognito_id: {
      label: "Cognito ID",
      type: Primitives.String,
    },
    membership: {
      label: "Membership",
      type: Primitives.JSON,
    },
    onboarding: {
      label: "Onboarding",
      type: Primitives.JSON,
    },
    preferences: {
      defaultValue: {
        accessibility: {
          outlines: false,
        },
        localization: {
          currency: CurrencyCode.UnitedStatesDollar,
          language: LanguageCode.English,
          locale: LocaleCode.EnglishUnitedStates,
        },
        look_and_feel: {
          theme: "light",
        },
      },
      label: "Preferences",
      type: Primitives.JSON,
    },
  },
  name: "User",
  relationships: {
    belongsTo: ["Person", "Team"]
  },
};`}function $i(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const UserGroup: ModelProps = {
  fields: {
    description: {
      label: "Description",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
  },
  name: "UserGroup",
  relationships: {
    belongsTo: ["Organization", "Team"],
  },
};`}function Zi(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const UserRole: ModelProps = {
  fields: {
    description: {
      label: "Description",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
  },
  name: "UserRole",
  relationships: {
    belongsTo: ["Organization", "Team"],
  },
};`}async function Ci(){try{let a=X.join(X.resolve(),".applab/dependencies/models"),l=X.join(a,"src");await ta.writeFile(X.join(l,"Organization.ts"),Hi(),"utf8"),await ta.writeFile(X.join(l,"Team.ts"),Yi(),"utf8"),await ta.writeFile(X.join(l,"Document.ts"),Ki(),"utf8"),await ta.writeFile(X.join(l,"Payment.ts"),Ri(),"utf8"),await ta.writeFile(X.join(l,"Invoice.ts"),ji(),"utf8"),await ta.writeFile(X.join(l,"PaymentMethod.ts"),Wi(),"utf8"),await ta.writeFile(X.join(l,"Person.ts"),Vi(),"utf8"),await ta.writeFile(X.join(l,"Subscription.ts"),zi(),"utf8"),await ta.writeFile(X.join(l,"User.ts"),Ji(),"utf8"),await ta.writeFile(X.join(l,"UserGroup.ts"),$i(),"utf8"),await ta.writeFile(X.join(l,"UserRole.ts"),Zi(),"utf8")}catch(a){console.error(a)}}async function Qi(a,{dependencies:l}){console.info("Building Core Object dependencies..."),console.info("Adding out of box Core Objects..."),await Ci(),console.info("Building SrcLaunch models..."),await qi(a,l.models.path),await ca({format:V.ESM,rootDir:l.models.path})}import Ht from"fs-extra";import Rt from"path";async function Xi(){let a=Rt.join("models"),l=Ht.readdirSync(a).filter(c=>c.slice(-3)===".ts"&&c.split(".ts")[0]!=="index");console.info(l.map(c=>c.split(".ts")[0]).toString())}import Wt from"fs-extra";import Xe from"node:path";async function as(){try{let a=Xe.join(Xe.resolve(),"dependencies/models");await Wt.emptyDir(Xe.join(a,"src"))}catch(a){console.error(a)}}import es from"path";var ns=new T({name:"",description:"",commands:[new T({name:"clean",description:"",run:async({config:a,flags:l})=>{await as()},type:"workspace"}),new T({name:"create",description:"",run:async({config:a,flags:l})=>{},type:"workspace"}),new T({name:"build",description:"",run:async({config:a,flags:l})=>{await Qi(es.join(es.resolve(),a.models?.path??"models"),{dependencies:a.dependencies})},type:"workspace"}),new T({name:"list",description:"",run:async({config:a,flags:l})=>{await Xi()},type:"workspace"}),new T({name:"help",description:"Shows help for model commands",run:async()=>{console.info("Available model commands are: clean, build, list, and help.")},type:"workspace"})]});var is=new T({name:"preview",description:"Creates a preview of the production build with currently pending changesets",commands:[new T({name:"start",description:"Builds a preview of the production build, and serves locally on the port provided in the project configuration file",run:async()=>{},type:"project"}),new T({name:"help",description:"Shows help for preview commands",run:async()=>{console.info("Available preview commands are: help")},type:"project"})]});var ss=new T({name:"projects",description:"Manage projects",commands:[new T({name:"create",description:"Create a new SrcLaunch project",run:async({config:a,flags:l})=>{},type:"workspace"}),new T({name:"help",description:"Shows help for projects commands",run:async()=>{console.info("Available projects commands are: create, help")},type:"workspace"})]});import Jt from"standard-version";import $t from"simple-git";var rs=new T({name:"release",description:"Create a release",run:async({config:a})=>{try{let l=$t(),c=await(await l.branchLocal()).current,A=await(await l.getRemotes()).find(h=>h.name==="origin");await Jt({noVerify:!0,infile:"CHANGELOG.md",silent:!1});let f=await l.push(A?.name??"origin",c,{"--follow-tags":null});console.log(`${Z.green("\u2714")} pushed release to ${Z.bold(f.repo)} on branch ${Z.bold(c)}`)}catch(l){console.error("err",l)}},type:"project",commands:[new T({name:"help",description:"Shows help for release commands",run:async()=>{console.info("Available release commands are: create, help")},type:"project"})]});var us=new T({name:"serve",description:"Commands for serving an application or service",run:async({config:a,flags:l})=>{},type:"project",commands:[new T({name:"web-app",description:"Serves a Web application project",run:async({config:a,flags:l})=>{},type:"project"}),new T({name:"web-service",description:"Serves a Web service project",run:async({config:a,flags:l})=>{},type:"project"}),new T({name:"help",description:"Shows help for serve commands",run:async()=>{console.info("Available serve commands are: web-app, web-service, help")},type:"project"})]});import{spawn as Qt}from"child_process";var aa={concurrency:void 0,coverage:{directory:"coverage",thresholds:{global:{branches:0,functions:0,lines:0,statements:0}},reporters:[le.Lcov,le.JSONSummary]},fail:{fast:!0,noTests:!1},files:{exclude:[],include:["src/__tests__/**/*","src/tests/**/*","src/**/*.test.ts","src/**/*.spec.ts","src/**/*.spec.tsx","src/**/*.test.js","src/**/*.spec.js","src/**/*.spec.jsx"]},tool:fa.Ava,verbose:!0};import{chunksToLinesAsync as AB,streamWrite as fB,streamEnd as dB,onExit as Xt}from"@rauschma/stringio";async function za({config:a,match:l,watch:c}){try{let A=["--all"],f=["--color"],h=a?.concurrency?["--concurrency",a.concurrency.toString()]:[],_=a?.files?.exclude??aa.files.exclude,S=[...a?.files?.include??aa.files.include,..._.map(R=>`!${R}`)].join(" "),B=a?.fail?.fast?["--fail-fast"]:[],q=l?[`--match='${l.toString()}'`]:[],x=a?.verbose?["--verbose"]:[a.verbose?"--verbose":""],K=c?["--watch"]:[],D=[S,...A,...f,...h,...B,...q,...x,...K],Y=Qt("ava",D,{stdio:[process.stdin,process.stdout,process.stderr]});await Xt(Y)}catch(A){console.error("ERR; ",A)}}import{Report as al}from"c8";import{emptyDir as el,ensureDir as nl}from"fs-extra";import il from"path";async function Ya(a){try{let l=il.join(process.cwd(),a.coverage?.directory??"coverage");await nl(l),await el(l);let c=new al({all:!0,exclude:a.files?.include??aa.files.include,reportsDirectory:l,src:["src"],tempDirectory:l,reporter:a.coverage?.reporters??aa.coverage.reporters});return await c.run(),c}catch(l){throw l}}import{run as sl}from"jest-cli";import ts from"path";async function Ja({config:a,match:l,watch:c}){try{let A={bail:a?.fail?.fast??aa.fail.fast,coveragePathIgnorePatterns:a.files?.include??aa.files.include,extensionsToTreatAsEsm:[".ts",".tsx"],failWithoutAssertions:a?.fail?.noTests??aa.fail.noTests,match:l,maxConcurrency:a.concurrency??5,rootDir:ts.resolve(process.cwd()),testPathIgnorePatterns:a.files?.exclude??aa.files.exclude,testMatch:a.files?.include??aa.files.include,verbose:a.verbose??!0,watch:c??!1},f=["--all"],h=["--colors"],_=a?.concurrency?["--maxConcurrency",a.concurrency?.toString()??"5"]:[],p=a?.files?.exclude??aa.files.exclude,B=[...a?.files?.include??aa.files.include,...p.map(R=>`!${R}`)].join(" "),q=a?.fail?.fast?["--bail"]:[],x=l?[`--t ${l.toString()}`]:[],K=a?.verbose?["--verbose"]:[a.verbose?"--verbose":""],D=c?["--watch"]:[],Y=[B,...f,...h,..._,...q,...x,...K,...D];await sl(Y,ts.resolve())}catch(A){console.error(A)}}var ls=new T({name:"test",description:"Commands for running tests",run:async({config:a,flags:l})=>{if(typeof a.test=="object"&&!Array.isArray(a.test)){switch(a.test.tool){case fa.Jest:await Ja({config:a.test,match:l.match,watch:l.watch});return;case fa.Ava:default:await za({config:a.test,match:l.match,watch:l.watch})}(a.test.coverage||l.coverage)&&await Ya(a.test)}else if(Array.isArray(a.test))for(let c of a.test){switch(c.tool){case fa.Jest:await Ja({config:c,match:l.match,watch:l.watch});return;case fa.Ava:default:await za({config:c,match:l.match,watch:l.watch})}(c.coverage||l.coverage)&&await Ya(c)}},commands:[new T({name:"ava",description:"Run tests using Ava",run:async({config:a,flags:l})=>{if(typeof a.test=="object"&&!Array.isArray(a.test))await za({config:a.test,match:l.match,watch:l.watch});else if(Array.isArray(a.test))for(let c of a.test)await za({config:c,match:l.match,watch:l.watch})}}),new T({name:"jest",description:"Runs tests using Jest",run:async({config:a,flags:l})=>{if(typeof a.test=="object"&&!Array.isArray(a.test))await Ja({config:a.test,match:l.match,watch:l.watch});else if(Array.isArray(a.test))for(let c of a.test)await Ja({config:c,match:l.match,watch:l.watch})},type:"project"}),new T({name:"coverage",description:"Generates coverage reports",run:async({config:a,flags:l})=>{if(typeof a.test=="object"&&!Array.isArray(a.test))await Ya(a.test);else if(Array.isArray(a.test))for(let c of a.test)await Ya(c)},type:"project"}),new T({name:"help",description:"Shows help for test commands",run:async()=>{console.info("Available test commands are: ava, jest")},type:"project"})]});import pe from"node:path";async function os(){try{try{return(await import(pe.join(pe.resolve(),"./.srclaunch/config.js"))).default}catch{let l=pe.join(pe.resolve(),".srclaunch","config.json");try{let c=await Yn(l);return await JSON.parse(c.toString())}catch(c){throw new Error(`Could not read config file: ${l}. ${c.message}`)}}}catch{throw new Error("Please run this command from a SrcLaunch project or workspace directory.")}}var ll=`
Usage
  $ srclaunch <command>

Commands
  build - Build SrcLaunch project if srclaunch.config.json is found in the current directory
  models
    * build - Build models into Sequelize models, Typescript definitions and JSON
  test - Run tests and collect coverage

To view information for a specific command add "help" after the command name, for example:
  $ srclaunch build help
`,Ee=ul(ll,{importMeta:import.meta});async function ol(){try{let a=Ee.input,l=Ee.flags,c=await os();tl({pkg:Ee.pkg}).notify(),await Ke({cli:Ee,command:a,commands:[ri,Li,wi,Gi,xi,ns,is,ss,rs,us,ls],config:c,flags:l})}catch(a){console.error(a)}}var jB=ol();export{sa as CommandType,Ee as cli,jB as default,ll as helpMessage,ol as main};
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
//# sourceMappingURL=index.mjs.map
