name: Deploy package

on:
  push:
    branches:
      - main
jobs:
  env-vars:
    name: Initialize environment variables
    runs-on: ubuntu-latest
    outputs:
      commit-message: ${{ steps.get-commit.outputs.message }}
      release: ${{ steps.get-release.outputs.version }}
    steps:
      - name: Get commit
        id: get-commit
        run: |
          echo "::set-output name=message::${{ format(github.event.head_commit.message, 'chore(release): ', '') }}"

      - name: Get release version
        id: get-release
        run: |
          KEYWORD="chore(release): "
          ESCAPED_KEYWORD=$(printf '%s\n' "$KEYWORD" | sed -e 's/[]\/$*.^[]/\\&/g')
          VERSION=$(sed "s/$ESCAPED_KEYWORD//g" <(echo "${{ steps.get-commit.outputs.message }}"))
          echo "::set-output name=version::$VERSION"

  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Enable corepack
        run: corepack enable

      - name: Enable Yarn Berry
        run: yarn set version stable

      - name: Install dependencies
        run: yarn install

      - name: Run tests and collect testing coverage
        run: yarn test:coverage

      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: coverage

  build:
    name: Build package
    needs: [env-vars, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Enable corepack
        run: corepack enable

      - name: Enable Yarn Berry
        run: yarn set version stable

      - name: Install dependencies
        run: yarn install

      - name: Build package
        run: yarn build

      - name: Echo version number
        run: echo "${{ needs.env-vars.outputs.release }}"

      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: '${{ github.event.repository.owner.login }}-${{ github.event.repository.name }}-${{ github.ref_name }}-release'
          path: |
            dist
            package.json
            README.md

  package:
    name: Publish package
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: '${{ github.event.repository.owner.login }}-${{ github.event.repository.name }}-${{ github.ref_name }}-release'

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Enable corepack
        run: corepack enable

      - name: Enable Yarn Berry
        run: yarn set version stable

      - name: Allow private package registry access
        id: allow-private-package-registry-access
        run: |
          echo "nodeLinker: node-modules" > ./.yarnrc.yml
          echo "npmScopes:" >> ./.yarnrc.yml
          echo "  ${{ github.event.repository.owner.login }}:" >> ./.yarnrc.yml
          echo "    npmRegistryServer: https://registry.npmjs.org" >> ./.yarnrc.yml
          echo "    npmAlwaysAuth: true" >> ./.yarnrc.yml
          echo "    npmAuthToken: ${{ secrets.NPM_ACCESS_TOKEN }}" >> ./.yarnrc.yml

      - name: Publish to NPM
        run: yarn npm publish
